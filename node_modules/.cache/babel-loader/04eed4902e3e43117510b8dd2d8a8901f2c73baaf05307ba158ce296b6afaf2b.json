{"ast":null,"code":"import { resolveComponent as _resolveComponent, createVNode as _createVNode, openBlock as _openBlock, createElementBlock as _createElementBlock, createCommentVNode as _createCommentVNode, createElementVNode as _createElementVNode, createTextVNode as _createTextVNode, toDisplayString as _toDisplayString, normalizeClass as _normalizeClass, vModelText as _vModelText, withDirectives as _withDirectives, vModelSelect as _vModelSelect, renderList as _renderList, Fragment as _Fragment, withModifiers as _withModifiers } from \"vue\";\nconst _hoisted_1 = {\n  class: \"page-wrapper\",\n  id: \"main-wrapper\",\n  \"data-layout\": \"vertical\",\n  \"data-navbarbg\": \"skin6\",\n  \"data-sidebartype\": \"full\",\n  \"data-sidebar-description\": \"fixed\",\n  \"data-header-description\": \"fixed\",\n  style: {\n    \"position\": \"absolute\",\n    \"top\": \"0\",\n    \"left\": \"0\",\n    \"right\": \"0\",\n    \"bottom\": \"0\",\n    \"z-index\": \"1\"\n  }\n};\nconst _hoisted_2 = {\n  class: \"body-wrapper\",\n  style: {\n    \"margin-top\": \"70px\",\n    \"margin-left\": \"270px\",\n    \"background\": \"white\",\n    \"min-height\": \"calc(100vh - 70px)\",\n    \"padding\": \"20px\",\n    \"overflow-y\": \"auto\",\n    \"max-height\": \"calc(100vh - 70px)\"\n  }\n};\nconst _hoisted_3 = {\n  key: 0,\n  class: \"alert alert-warning text-center mx-4\"\n};\nconst _hoisted_4 = {\n  class: \"form-group row\"\n};\nconst _hoisted_5 = {\n  class: \"col-md-6\"\n};\nconst _hoisted_6 = [\"disabled\"];\nconst _hoisted_7 = {\n  class: \"col-md-6\"\n};\nconst _hoisted_8 = [\"disabled\"];\nconst _hoisted_9 = {\n  class: \"form-group row\"\n};\nconst _hoisted_10 = {\n  class: \"col-md-6\"\n};\nconst _hoisted_11 = [\"disabled\"];\nconst _hoisted_12 = {\n  class: \"col-md-6\"\n};\nconst _hoisted_13 = [\"disabled\", \"min\"];\nconst _hoisted_14 = {\n  class: \"form-group row\"\n};\nconst _hoisted_15 = {\n  class: \"col-md-6\"\n};\nconst _hoisted_16 = [\"disabled\"];\nconst _hoisted_17 = [\"value\"];\nconst _hoisted_18 = {\n  class: \"col-md-6\"\n};\nconst _hoisted_19 = {\n  key: 0,\n  class: \"mb-2\"\n};\nconst _hoisted_20 = [\"src\"];\nconst _hoisted_21 = [\"disabled\"];\nconst _hoisted_22 = {\n  class: \"form-group row\"\n};\nconst _hoisted_23 = {\n  class: \"col-md-12\"\n};\nconst _hoisted_24 = [\"disabled\"];\nconst _hoisted_25 = {\n  class: \"form-group row\"\n};\nconst _hoisted_26 = {\n  class: \"col-md-12\"\n};\nconst _hoisted_27 = [\"disabled\"];\nconst _hoisted_28 = {\n  class: \"form-group row\"\n};\nconst _hoisted_29 = {\n  class: \"col-md-12\"\n};\nconst _hoisted_30 = [\"disabled\"];\nconst _hoisted_31 = {\n  class: \"form-group row\"\n};\nconst _hoisted_32 = {\n  class: \"col-md-6\"\n};\nconst _hoisted_33 = [\"disabled\"];\nconst _hoisted_34 = {\n  class: \"col-md-6\"\n};\nconst _hoisted_35 = [\"disabled\"];\nconst _hoisted_36 = {\n  class: \"form-group row\"\n};\nconst _hoisted_37 = {\n  class: \"col-md-12\"\n};\nconst _hoisted_38 = [\"disabled\"];\nconst _hoisted_39 = [\"disabled\"];\nconst _hoisted_40 = {\n  key: 0,\n  class: \"spinner-border spinner-border-sm me-2\",\n  role: \"status\",\n  \"aria-hidden\": \"true\"\n};\nconst _hoisted_41 = {\n  key: 1,\n  class: \"text-muted\"\n};\nconst _hoisted_42 = {\n  class: \"table-responsive\"\n};\nconst _hoisted_43 = {\n  class: \"table table-bordered\"\n};\nconst _hoisted_44 = [\"src\"];\nconst _hoisted_45 = [\"onClick\", \"disabled\"];\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  const _component_IndexComponent = _resolveComponent(\"IndexComponent\");\n  return _openBlock(), _createElementBlock(_Fragment, null, [_createVNode(_component_IndexComponent), _createElementVNode(\"div\", _hoisted_1, [_createElementVNode(\"div\", _hoisted_2, [$data.jobStatus === 0 ? (_openBlock(), _createElementBlock(\"div\", _hoisted_3, \" Your account is pending approval. You cannot add or edit jobs until approved. \")) : _createCommentVNode(\"\", true), _cache[31] || (_cache[31] = _createElementVNode(\"h5\", {\n    class: \"card-title fw-semibold mb-4\",\n    style: {\n      \"color\": \"#E960A6\"\n    }\n  }, [_createElementVNode(\"i\", {\n    class: \"ti ti-settings\"\n  }), _createTextVNode(\" Add Jobs \")], -1)), _createElementVNode(\"form\", {\n    class: \"mx-4\",\n    onSubmit: _cache[13] || (_cache[13] = _withModifiers((...args) => $options.submitForm && $options.submitForm(...args), [\"prevent\"]))\n  }, [$data.status.message ? (_openBlock(), _createElementBlock(\"div\", {\n    key: 0,\n    class: _normalizeClass(['alert mt-3', $data.status.success ? 'alert-success' : 'alert-danger'])\n  }, _toDisplayString($data.status.message), 3)) : _createCommentVNode(\"\", true), _createElementVNode(\"div\", _hoisted_4, [_createElementVNode(\"div\", _hoisted_5, [_cache[15] || (_cache[15] = _createElementVNode(\"label\", {\n    class: \"form-label\"\n  }, \"Job Title\", -1)), _withDirectives(_createElementVNode(\"input\", {\n    type: \"text\",\n    \"onUpdate:modelValue\": _cache[0] || (_cache[0] = $event => $data.form.job_title = $event),\n    class: \"form-control\",\n    disabled: $data.jobStatus === 0,\n    required: \"\"\n  }, null, 8, _hoisted_6), [[_vModelText, $data.form.job_title]])]), _createElementVNode(\"div\", _hoisted_7, [_cache[16] || (_cache[16] = _createElementVNode(\"label\", {\n    class: \"form-label\"\n  }, \"Company Name / Your name\", -1)), _withDirectives(_createElementVNode(\"input\", {\n    type: \"text\",\n    \"onUpdate:modelValue\": _cache[1] || (_cache[1] = $event => $data.form.company = $event),\n    class: \"form-control\",\n    disabled: $data.jobStatus === 0,\n    required: \"\"\n  }, null, 8, _hoisted_8), [[_vModelText, $data.form.company]])])]), _createElementVNode(\"div\", _hoisted_9, [_createElementVNode(\"div\", _hoisted_10, [_cache[18] || (_cache[18] = _createElementVNode(\"label\", {\n    class: \"form-label\"\n  }, \"Working Mode\", -1)), _withDirectives(_createElementVNode(\"select\", {\n    \"onUpdate:modelValue\": _cache[2] || (_cache[2] = $event => $data.form.location = $event),\n    class: \"form-control\",\n    disabled: $data.jobStatus === 0,\n    required: \"\"\n  }, _cache[17] || (_cache[17] = [_createElementVNode(\"option\", {\n    value: \"\",\n    disabled: \"\"\n  }, \"Choose mode\", -1), _createElementVNode(\"option\", {\n    value: \"Remote\"\n  }, \"Remote\", -1), _createElementVNode(\"option\", {\n    value: \"Full Time\"\n  }, \"Full Time\", -1)]), 8, _hoisted_11), [[_vModelSelect, $data.form.location]])]), _createElementVNode(\"div\", _hoisted_12, [_cache[19] || (_cache[19] = _createElementVNode(\"label\", {\n    class: \"form-label\"\n  }, \"Deadline Date\", -1)), _withDirectives(_createElementVNode(\"input\", {\n    type: \"date\",\n    \"onUpdate:modelValue\": _cache[3] || (_cache[3] = $event => $data.form.deadline_date = $event),\n    class: \"form-control\",\n    disabled: $data.jobStatus === 0,\n    min: $data.minDeadlineDate,\n    required: \"\"\n  }, null, 8, _hoisted_13), [[_vModelText, $data.form.deadline_date]])])]), _createElementVNode(\"div\", _hoisted_14, [_createElementVNode(\"div\", _hoisted_15, [_cache[21] || (_cache[21] = _createElementVNode(\"label\", {\n    class: \"form-label\"\n  }, \"Category\", -1)), _withDirectives(_createElementVNode(\"select\", {\n    \"onUpdate:modelValue\": _cache[4] || (_cache[4] = $event => $data.form.category_id = $event),\n    class: \"form-control\",\n    style: {\n      \"height\": \"48px\",\n      \"padding-top\": \"8px\",\n      \"padding-bottom\": \"8px\"\n    },\n    disabled: $data.jobStatus === 0,\n    required: \"\",\n    onChange: _cache[5] || (_cache[5] = (...args) => $options.onCategoryChange && $options.onCategoryChange(...args))\n  }, [_cache[20] || (_cache[20] = _createElementVNode(\"option\", {\n    disabled: \"\",\n    value: \"\"\n  }, \"Select Category\", -1)), (_openBlock(true), _createElementBlock(_Fragment, null, _renderList($data.categories, cat => {\n    return _openBlock(), _createElementBlock(\"option\", {\n      key: cat.id,\n      value: cat.id\n    }, _toDisplayString(cat.name), 9, _hoisted_17);\n  }), 128))], 40, _hoisted_16), [[_vModelSelect, $data.form.category_id]])]), _createElementVNode(\"div\", _hoisted_18, [_cache[22] || (_cache[22] = _createElementVNode(\"label\", {\n    class: \"form-label\"\n  }, \"logo If applicable\", -1)), $data.form.logo && typeof $data.form.logo === 'string' ? (_openBlock(), _createElementBlock(\"div\", _hoisted_19, [_createElementVNode(\"img\", {\n    src: $data.uploadsUrl + $data.form.logo,\n    alt: \"Current Logo\",\n    class: \"custom-job-logo\",\n    width: \"150\"\n  }, null, 8, _hoisted_20)])) : _createCommentVNode(\"\", true), _createElementVNode(\"input\", {\n    type: \"file\",\n    onChange: _cache[6] || (_cache[6] = (...args) => $options.handleFileUpload && $options.handleFileUpload(...args)),\n    class: \"form-control\",\n    disabled: $data.jobStatus === 0\n  }, null, 40, _hoisted_21), _cache[23] || (_cache[23] = _createElementVNode(\"small\", {\n    class: \"form-text text-muted\"\n  }, \"Maximum file size: 1MB\", -1))])]), _createElementVNode(\"div\", _hoisted_22, [_createElementVNode(\"div\", _hoisted_23, [_cache[24] || (_cache[24] = _createElementVNode(\"label\", {\n    class: \"form-label\"\n  }, \"Job Description\", -1)), _withDirectives(_createElementVNode(\"textarea\", {\n    \"onUpdate:modelValue\": _cache[7] || (_cache[7] = $event => $data.form.job_description = $event),\n    class: \"form-control\",\n    style: {\n      \"height\": \"100px\"\n    },\n    disabled: $data.jobStatus === 0,\n    required: \"\"\n  }, null, 8, _hoisted_24), [[_vModelText, $data.form.job_description]])])]), _createElementVNode(\"div\", _hoisted_25, [_createElementVNode(\"div\", _hoisted_26, [_cache[25] || (_cache[25] = _createElementVNode(\"label\", {\n    class: \"form-label\"\n  }, \"Requirements\", -1)), _withDirectives(_createElementVNode(\"textarea\", {\n    \"onUpdate:modelValue\": _cache[8] || (_cache[8] = $event => $data.form.requirements = $event),\n    class: \"form-control\",\n    style: {\n      \"height\": \"100px\"\n    },\n    disabled: $data.jobStatus === 0,\n    required: \"\"\n  }, null, 8, _hoisted_27), [[_vModelText, $data.form.requirements]])])]), _createElementVNode(\"div\", _hoisted_28, [_createElementVNode(\"div\", _hoisted_29, [_cache[26] || (_cache[26] = _createElementVNode(\"label\", {\n    class: \"form-label\"\n  }, \"Responsability\", -1)), _withDirectives(_createElementVNode(\"textarea\", {\n    \"onUpdate:modelValue\": _cache[9] || (_cache[9] = $event => $data.form.responsability = $event),\n    class: \"form-control\",\n    style: {\n      \"height\": \"100px\"\n    },\n    disabled: $data.jobStatus === 0,\n    required: \"\"\n  }, null, 8, _hoisted_30), [[_vModelText, $data.form.responsability]])])]), _createElementVNode(\"div\", _hoisted_31, [_createElementVNode(\"div\", _hoisted_32, [_cache[27] || (_cache[27] = _createElementVNode(\"label\", {\n    class: \"form-label\"\n  }, \"Salary Min\", -1)), _withDirectives(_createElementVNode(\"input\", {\n    type: \"number\",\n    \"onUpdate:modelValue\": _cache[10] || (_cache[10] = $event => $data.form.salary_min = $event),\n    class: \"form-control\",\n    disabled: $data.jobStatus === 0,\n    required: \"\"\n  }, null, 8, _hoisted_33), [[_vModelText, $data.form.salary_min]])]), _createElementVNode(\"div\", _hoisted_34, [_cache[28] || (_cache[28] = _createElementVNode(\"label\", {\n    class: \"form-label\"\n  }, \"salary Max\", -1)), _withDirectives(_createElementVNode(\"input\", {\n    type: \"number\",\n    \"onUpdate:modelValue\": _cache[11] || (_cache[11] = $event => $data.form.salary_max = $event),\n    class: \"form-control\",\n    disabled: $data.jobStatus === 0,\n    required: \"\"\n  }, null, 8, _hoisted_35), [[_vModelText, $data.form.salary_max]])])]), _createElementVNode(\"div\", _hoisted_36, [_createElementVNode(\"div\", _hoisted_37, [_cache[29] || (_cache[29] = _createElementVNode(\"label\", {\n    class: \"form-label\"\n  }, \"conclusion \", -1)), _withDirectives(_createElementVNode(\"textarea\", {\n    \"onUpdate:modelValue\": _cache[12] || (_cache[12] = $event => $data.form.conclusion = $event),\n    class: \"form-control\",\n    style: {\n      \"height\": \"100px\"\n    },\n    disabled: $data.jobStatus === 0,\n    required: \"\"\n  }, null, 8, _hoisted_38), [[_vModelText, $data.form.conclusion]])])]), _createElementVNode(\"button\", {\n    type: \"submit\",\n    class: \"btn btn-primary mt-3\",\n    disabled: $data.isSubmitting || $data.jobStatus === 0\n  }, [$data.isSubmitting ? (_openBlock(), _createElementBlock(\"span\", _hoisted_40)) : _createCommentVNode(\"\", true), _createTextVNode(\" \" + _toDisplayString($data.isSubmitting ? \"Submitting...\" : $data.form.job_id ? \"Update Job\" : \"Submit Job\"), 1)], 8, _hoisted_39)], 32), _cache[32] || (_cache[32] = _createElementVNode(\"hr\", {\n    class: \"my-4\"\n  }, null, -1)), _cache[33] || (_cache[33] = _createElementVNode(\"h5\", {\n    class: \"fw-semibold mb-3\"\n  }, \"Your Jobs\", -1)), $data.jobs.length === 0 ? (_openBlock(), _createElementBlock(\"div\", _hoisted_41, \"No jobs available yet.\")) : _createCommentVNode(\"\", true), _createElementVNode(\"div\", _hoisted_42, [_createElementVNode(\"table\", _hoisted_43, [_cache[30] || (_cache[30] = _createElementVNode(\"thead\", {\n    class: \"table-light\"\n  }, [_createElementVNode(\"tr\", null, [_createElementVNode(\"th\", null, \"Id\"), _createElementVNode(\"th\", null, \"Title\"), _createElementVNode(\"th\", null, \"Company\"), _createElementVNode(\"th\", null, \"Description\"), _createElementVNode(\"th\", null, \"Requirements\"), _createElementVNode(\"th\", null, \"Responsability\"), _createElementVNode(\"th\", null, \"salary-min\"), _createElementVNode(\"th\", null, \"salary-max\"), _createElementVNode(\"th\", null, \"Working mode\"), _createElementVNode(\"th\", null, \"Category\"), _createElementVNode(\"th\", null, \"Deadline\"), _createElementVNode(\"th\", null, \"Conclusion\"), _createElementVNode(\"th\", null, \"Logo\"), _createElementVNode(\"th\", null, \"Status\"), _createElementVNode(\"th\", null, \"Action\")])], -1)), _createElementVNode(\"tbody\", null, [(_openBlock(true), _createElementBlock(_Fragment, null, _renderList($data.jobs, (job, index) => {\n    return _openBlock(), _createElementBlock(\"tr\", {\n      key: job.job_id\n    }, [_createElementVNode(\"td\", null, _toDisplayString(index + 1), 1), _createElementVNode(\"td\", null, _toDisplayString(job.job_title), 1), _createElementVNode(\"td\", null, _toDisplayString(job.job_description), 1), _createElementVNode(\"td\", null, _toDisplayString(job.requirements), 1), _createElementVNode(\"td\", null, _toDisplayString(job.responsability), 1), _createElementVNode(\"td\", null, _toDisplayString(job.company), 1), _createElementVNode(\"td\", null, _toDisplayString(job.salary_max), 1), _createElementVNode(\"td\", null, _toDisplayString(job.salary_min), 1), _createElementVNode(\"td\", null, _toDisplayString(job.location), 1), _createElementVNode(\"td\", null, _toDisplayString($options.getCategoryName(job.category_id)), 1), _createElementVNode(\"td\", null, _toDisplayString(job.deadline_date ? job.deadline_date.substring(0, 10) : \"\"), 1), _createElementVNode(\"td\", null, _toDisplayString(job.conclusion), 1), _createElementVNode(\"td\", null, [_createElementVNode(\"img\", {\n      src: $data.uploadsUrl + job.logo,\n      onError: _cache[14] || (_cache[14] = $event => $options.onLogoError($event)),\n      alt: \"Logo\",\n      class: \"custom-job-logo\",\n      width: \"100\",\n      height: \"50\"\n    }, null, 40, _hoisted_44)]), _createElementVNode(\"td\", null, [_createElementVNode(\"span\", {\n      class: _normalizeClass([$options.getStatusLabel(job.status).colorClass, 'fw-bold'])\n    }, _toDisplayString($options.getStatusLabel(job.status).text), 3)]), _createElementVNode(\"td\", null, [_createElementVNode(\"button\", {\n      class: \"btn btn-primary mt-3\",\n      onClick: $event => $options.editJob(job),\n      disabled: $data.jobStatus === 0\n    }, \"Edit\", 8, _hoisted_45)])]);\n  }), 128))])])])])])], 64);\n}","map":{"version":3,"names":["class","id","style","key","role","_createElementBlock","_Fragment","_createVNode","_component_IndexComponent","_createElementVNode","_hoisted_1","_hoisted_2","$data","jobStatus","_hoisted_3","_createCommentVNode","_createTextVNode","onSubmit","_cache","_withModifiers","args","$options","submitForm","status","message","_normalizeClass","success","_hoisted_4","_hoisted_5","type","$event","form","job_title","disabled","required","_hoisted_6","_hoisted_7","company","_hoisted_8","_hoisted_9","_hoisted_10","location","value","_hoisted_11","_hoisted_12","deadline_date","min","minDeadlineDate","_hoisted_13","_hoisted_14","_hoisted_15","category_id","onChange","onCategoryChange","_renderList","categories","cat","name","_hoisted_17","_hoisted_16","_hoisted_18","logo","_hoisted_19","src","uploadsUrl","alt","width","_hoisted_20","handleFileUpload","_hoisted_21","_hoisted_22","_hoisted_23","job_description","_hoisted_24","_hoisted_25","_hoisted_26","requirements","_hoisted_27","_hoisted_28","_hoisted_29","responsability","_hoisted_30","_hoisted_31","_hoisted_32","salary_min","_hoisted_33","_hoisted_34","salary_max","_hoisted_35","_hoisted_36","_hoisted_37","conclusion","_hoisted_38","isSubmitting","_hoisted_40","_toDisplayString","job_id","_hoisted_39","jobs","length","_hoisted_41","_hoisted_42","_hoisted_43","job","index","getCategoryName","substring","onError","onLogoError","height","_hoisted_44","getStatusLabel","colorClass","text","onClick","editJob","_hoisted_45"],"sources":["/Users/gentil/Desktop/Kozi-ai-agent/src/views/jobprovider/AddJobs.vue"],"sourcesContent":["<template>\n  <IndexComponent />\n  <div\n    class=\"page-wrapper\"\n    id=\"main-wrapper\"\n    data-layout=\"vertical\"\n    data-navbarbg=\"skin6\"\n    data-sidebartype=\"full\"\n    data-sidebar-description=\"fixed\"\n    data-header-description=\"fixed\"\n    style=\"position: absolute; top: 0; left: 0; right: 0; bottom: 0; z-index: 1;\"\n  >\n    <div class=\"body-wrapper\" style=\"margin-top: 70px; margin-left: 270px; background: white; min-height: calc(100vh - 70px); padding: 20px; overflow-y: auto; max-height: calc(100vh - 70px);\">\n      <!-- <div v-if=\"userEmail\" class=\"card-body\">\n        <h5 class=\"text-center\">Logged in as:</h5>\n        <h6 class=\"text-center text-muted\">{{ userEmail }}</h6>\n        <p><strong>users_id:</strong> {{ userId }}</p>\n        <h6 class=\"text-center text-muted\">\n          Status:\n          <span :class=\"[getStatusLabel(jobStatus).colorClass, 'fw-bold']\">\n            {{ getStatusLabel(jobStatus).text }}\n          </span>\n        </h6>\n      </div> -->\n\n      <div v-if=\"jobStatus === 0\" class=\"alert alert-warning text-center mx-4\">\n        Your account is pending approval. You cannot add or edit jobs until approved.\n      </div>\n\n      <h5 class=\"card-title fw-semibold mb-4\" style=\"color: #E960A6;\">\n        <i class=\"ti ti-settings\"></i> Add Jobs\n      </h5>\n\n      <form class=\"mx-4\" @submit.prevent=\"submitForm\">\n        <div\n          v-if=\"status.message\"\n          :class=\"['alert mt-3', status.success ? 'alert-success' : 'alert-danger']\"\n        >\n          {{ status.message }}\n        </div>\n\n        <div class=\"form-group row\">\n          <div class=\"col-md-6\">\n            <label class=\"form-label\">Job Title</label>\n            <input type=\"text\" v-model=\"form.job_title\" class=\"form-control\" :disabled=\"jobStatus === 0\" required />\n          </div>\n          <div class=\"col-md-6\">\n            <label class=\"form-label\">Company Name / Your name</label>\n            <input type=\"text\" v-model=\"form.company\" class=\"form-control\" :disabled=\"jobStatus === 0\" required />\n          </div>\n        </div>\n\n        <div class=\"form-group row\">\n          <div class=\"col-md-6\">\n          <label class=\"form-label\">Working Mode</label>\n          <select v-model=\"form.location\" class=\"form-control\" :disabled=\"jobStatus === 0\" required>\n          <option value=\"\" disabled>Choose mode</option>\n          <option value=\"Remote\">Remote</option>\n          <option value=\"Full Time\">Full Time</option>\n          </select>\n          </div>\n          <div class=\"col-md-6\">\n            <label class=\"form-label\">Deadline Date</label>\n            <input type=\"date\" v-model=\"form.deadline_date\" class=\"form-control\" :disabled=\"jobStatus === 0\" :min=\"minDeadlineDate\" required />\n          </div>\n        </div>\n\n        <div class=\"form-group row\">\n          \n          <div class=\"col-md-6\">\n  <label class=\"form-label\">Category</label>\n  <select \n    v-model=\"form.category_id\" \n    class=\"form-control\" \n    style=\"height: 48px; padding-top: 8px; padding-bottom: 8px;\" \n    :disabled=\"jobStatus === 0\" \n    required\n    @change=\"onCategoryChange\"\n  >\n    <option disabled value=\"\">Select Category</option>\n    <option \n      v-for=\"cat in categories\" \n      :key=\"cat.id\" \n      :value=\"cat.id\"\n    >\n      {{ cat.name }}\n    </option>\n  </select>\n  <!-- Debug display -->\n  <!-- <small class=\"text-muted\">Selected ID: {{ form.category_id }}</small> -->\n</div>\n\n          <div class=\"col-md-6\">\n            <label class=\"form-label\">logo If applicable</label>\n            <div v-if=\"form.logo && typeof form.logo === 'string'\" class=\"mb-2\">\n              <img :src=\"uploadsUrl + form.logo\" alt=\"Current Logo\" class=\"custom-job-logo\" width=\"150\" />\n            </div>\n            <input type=\"file\" @change=\"handleFileUpload\" class=\"form-control\"  :disabled=\"jobStatus === 0\" />\n            <small class=\"form-text text-muted\">Maximum file size: 1MB</small>\n          </div>\n        </div>\n\n        <div class=\"form-group row\">\n          <div class=\"col-md-12\">\n            <label class=\"form-label\">Job Description</label>\n            <textarea\n              v-model=\"form.job_description\"\n              class=\"form-control\"\n              style=\"height: 100px;\"\n              :disabled=\"jobStatus === 0\"\n              required\n            ></textarea>\n          </div>\n        </div>\n        <div class=\"form-group row\">\n          <div class=\"col-md-12\">\n            <label class=\"form-label\">Requirements</label>\n            <textarea\n              v-model=\"form.requirements\"\n              class=\"form-control\"\n              style=\"height: 100px;\"\n              :disabled=\"jobStatus === 0\"\n              required\n            ></textarea>\n          </div>\n        </div>\n        <div class=\"form-group row\">\n          <div class=\"col-md-12\">\n            <label class=\"form-label\">Responsability</label>\n            <textarea\n              v-model=\"form.responsability\"\n              class=\"form-control\"\n              style=\"height: 100px;\"\n              :disabled=\"jobStatus === 0\"\n              required\n            ></textarea>\n          </div>\n        </div>\n\n        <div class=\"form-group row\">\n          <div class=\"col-md-6\">\n            <label class=\"form-label\">Salary Min</label>\n            <input type=\"number\" v-model=\"form.salary_min\" class=\"form-control\" :disabled=\"jobStatus === 0\" required />\n          </div>\n          <div class=\"col-md-6\">\n            <label class=\"form-label\">salary Max</label>\n            <input type=\"number\" v-model=\"form.salary_max\" class=\"form-control\" :disabled=\"jobStatus === 0\" required />\n          </div>\n        </div>\n        <div class=\"form-group row\">\n          <div class=\"col-md-12\">\n            <label class=\"form-label\">conclusion </label>\n            <textarea\n              v-model=\"form.conclusion\"\n              class=\"form-control\"\n              style=\"height: 100px;\"\n              :disabled=\"jobStatus === 0\"\n              required\n            ></textarea>\n          </div>\n        </div>\n\n\n        <button type=\"submit\" class=\"btn btn-primary mt-3\" :disabled=\"isSubmitting || jobStatus === 0\">\n          <span\n            v-if=\"isSubmitting\"\n            class=\"spinner-border spinner-border-sm me-2\"\n            role=\"status\"\n            aria-hidden=\"true\"\n          ></span>\n          {{ isSubmitting ? \"Submitting...\" : form.job_id ? \"Update Job\" : \"Submit Job\" }}\n        </button>\n      </form>\n\n      <hr class=\"my-4\" />\n      <h5 class=\"fw-semibold mb-3\">Your Jobs</h5>\n\n      <div v-if=\"jobs.length === 0\" class=\"text-muted\">No jobs available yet.</div>\n\n      <div class=\"table-responsive\">\n        <table class=\"table table-bordered\">\n          <thead class=\"table-light\">\n            <tr>\n              <th>Id</th>\n              <th>Title</th>\n              <th>Company</th>\n              <th>Description</th>\n              <th>Requirements</th>\n              <th>Responsability</th>\n              <th>salary-min</th>\n              <th>salary-max</th>\n              <th>Working mode</th>\n              <th>Category</th>\n              <th>Deadline</th>\n              <th>Conclusion</th>\n              <th>Logo</th>\n              <th>Status</th>\n              \n              <th>Action</th>\n            </tr>\n          </thead>\n          <tbody>\n            <tr v-for=\"(job, index) in jobs\" :key=\"job.job_id\">\n              <td>{{ index + 1 }}</td>\n              <td>{{ job.job_title }}</td>\n              <td>{{ job.job_description }}</td>\n              <td>{{ job.requirements }}</td>\n              <td>{{ job.responsability }}</td>\n              <td>{{ job.company }}</td>\n              \n              <td>{{ job.salary_max }}</td>\n              <td>{{ job.salary_min }}</td>\n              <td>{{ job.location }}</td>\n              <td>{{ getCategoryName(job.category_id) }}</td>\n              \n               <td>{{ job.deadline_date ? job.deadline_date.substring(0, 10) : \"\" }}</td>\n               <td>{{ job.conclusion }}</td>\n              <td>\n                <img\n    :src=\"uploadsUrl + job.logo\"\n    @error=\"onLogoError($event)\"\n    alt=\"Logo\"\n    class=\"custom-job-logo\"\n    width=\"100\"\n    height=\"50\"\n  />\n\n              </td>\n\n              <td>\n                <span :class=\"[getStatusLabel(job.status).colorClass, 'fw-bold']\">\n                  {{ getStatusLabel(job.status).text }}\n                </span>\n              </td>\n              \n              <td>\n                <button class=\"btn btn-primary mt-3\" @click=\"editJob(job)\" :disabled=\"jobStatus === 0\">Edit</button>\n              </td>\n            </tr>\n          </tbody>\n        </table>\n      </div>\n    </div>\n  </div>\n</template>\n\n<script>\nimport IndexComponent from \"./IndexComponent.vue\";\nimport { globalVariable } from \"@/global\";\n\nexport default {\n  name: \"MainWrapper\",\n  components: { IndexComponent },\n  data() {\n  return {\n    uploadsUrl: globalVariable + \"/uploads/logo/\",\n    defaultImage: require(\"@/assets/img/logo.png\"),\n    form: {\n      job_id: null,\n      job_title: \"\",\n      company: \"\",\n      deadline_date: \"\",\n      job_description: \"\",\n      requirements: \"\",\n      responsability: \"\",\n      salary_min: \"\",\n      salary_max: \"\",\n      conclusion: \"\",\n      logo: \"\",\n      location: \"\",\n      category_id: \"\",\n    },\n    jobs: [],\n    categories: [],\n    categoryNames: {},\n    // Remove this unused variable: selectedCategoryId: null,\n    isSubmitting: false,\n    status: {\n      success: false,\n      message: \"\",\n    },\n    userEmail: \"\",\n    userId: \"\",\n    jobStatus: null,\n    minDeadlineDate: \"\",\n  };\n},\n\n  mounted() {\n    const token = localStorage.getItem(\"employerToken\");\n    if (token) {\n      try {\n        const payload = JSON.parse(atob(token.split(\".\")[1]));\n        this.userEmail = payload.email;\n      } catch (e) {\n        console.error(\"Invalid token format\", e);\n      }\n    }\n    this.setMinDeadlineDate();\n    this.fetchCategories();\n    if (this.userEmail) {\n      this.getUserIdFromEmail();\n    }\n  },\n  methods: {\n\n    onLogoError(event) {\n    event.target.src = this.defaultImage;\n  },\n\n    onCategoryChange() {\n  console.log(\"Category changed to:\", this.form.category_id);\n  console.log(\"Category type:\", typeof this.form.category_id);\n},\n    handleFileUpload(event) {\n      this.form.logo = event.target.files[0];\n    },\n    setMinDeadlineDate() {\n      const tomorrow = new Date();\n      tomorrow.setDate(tomorrow.getDate() + 1);\n      this.minDeadlineDate = tomorrow.toISOString().split(\"T\")[0];\n    },\n\nasync submitForm() {\n  this.isSubmitting = true;\n  this.status.message = \"\";\n\n  try {\n    // Debug: Check form values before submission\n    console.log(\"Form data before submit:\", this.form);\n    console.log(\"Category ID value:\", this.form.category_id);\n    console.log(\"Category ID type:\", typeof this.form.category_id);\n    \n    // Validate required fields\n    if (!this.form.category_id || this.form.category_id === \"\") {\n      this.status = {\n        success: false,\n        message: \"Please select a category.\",\n      };\n      this.isSubmitting = false;\n      return;\n    }\n\n    const formData = new FormData();\n  \n\n    formData.append(\"job_title\", this.form.job_title);\n    formData.append(\"company\", this.form.company);\n    formData.append(\"location\", this.form.location);\n    formData.append(\"job_description\", this.form.job_description);\n    formData.append(\"requirements\", this.form.requirements);\n    formData.append(\"responsability\", this.form.responsability);\n    formData.append(\"salary_min\", this.form.salary_max);\n    formData.append(\"salary_max\", this.form.salary_max);\n    formData.append(\"conclusion\", this.form.conclusion);\n    formData.append(\"deadline_date\", this.form.deadline_date);\n    formData.append(\"users_id\", this.userId);\n    \n    // Ensure category_id is a string/number, not undefined\n    const categoryId = this.form.category_id;\n    if (categoryId !== undefined && categoryId !== null && categoryId !== \"\") {\n      formData.append(\"category_id\", categoryId);\n      console.log(\"Category ID being sent:\", categoryId);\n    } else {\n      console.error(\"Category ID is undefined or empty:\", categoryId);\n      this.status = {\n        success: false,\n        message: \"Category ID is missing.\",\n      };\n      this.isSubmitting = false;\n      return;\n    }\n    \n    if (this.form.logo && typeof this.form.logo !== \"string\") {\n      formData.append(\"logo\", this.form.logo);\n    }\n\n    // Debug: Log all FormData entries\n    console.log(\"FormData entries:\");\n    for (let [key, value] of formData.entries()) {\n      console.log(key + \": \" + value);\n    }\n\n    const token = localStorage.getItem(\"employerToken\");\n\n    const url = this.form.job_id\n      ? `${globalVariable}/admin/update_job/${this.form.job_id}`\n      : `${globalVariable}/admin/add_jobs`;\n    const method = this.form.job_id ? \"PUT\" : \"POST\";\n\n    const response = await fetch(url, {\n      method,\n      headers: {\n        Authorization: `Bearer ${token}`,\n      },\n      body: formData,\n    });\n\n    if (response.ok) {\n      const result = await response.json();\n      this.status = {\n        success: true,\n        message: result.message || (this.form.job_id ? \"Job updated!\" : \"Job added!\"),\n      };\n\n      this.form = {\n        job_id: null,\n        job_title: \"\",\n        company: \"\",\n        deadline_date: this.minDeadlineDate,\n        job_description: \"\",\n        requirements: \"\",\n        responsability: \"\",\n        salary_min: \"\",\n        salary_max: \"\",\n        conclusion: \"\",\n        logo: \"\",\n        location: \"\",\n        category_id: \"\", // Reset category_id\n      };\n\n      this.fetchJobsByUser();\n    } else {\n      const error = await response.text();\n      this.status = {\n        success: false,\n        message: \"Failed: \" + error,\n      };\n    }\n  } catch (err) {\n    console.error(\"Error:\", err);\n    this.status = {\n      success: false,\n      message: \"Unexpected error occurred.\",\n    };\n  } finally {\n    this.isSubmitting = false;\n  }\n},\n\n\n    async fetchCategoryNameByUserId() {\n      try {\n        const res = await fetch(`${globalVariable}/category/${this.userId}`);\n        const data = await res.json();\n        if (res.ok && data.name) {\n          return data.name;\n        } else {\n          return \"Unknown\";\n        }\n      } catch (error) {\n        console.error(\"Failed to fetch category name:\", error);\n        return \"Error fetching category\";\n      }\n    },\n    getCategoryName(categoryId) {\n      return this.categoryNames[categoryId] || \"Unknown\";\n    },\n    async fetchJobsByUser() {\n      try {\n        const token = localStorage.getItem(\"employerToken\");\n        if (!this.userId) return;\n\n        const res = await fetch(`${globalVariable}/provider/jobs/${this.userId}`, {\n          headers: { Authorization: `Bearer ${token}` },\n        });\n\n        if (!res.ok) throw new Error(\"Failed to fetch jobs\");\n\n        const data = await res.json();\n        this.jobs = data;\n      } catch (err) {\n        console.error(\"Error fetching jobs for user:\", err);\n      }\n    },\n    async fetchUserStatus() {\n      const token = localStorage.getItem(\"employerToken\");\n      if (!this.userId || !token) return;\n\n      try {\n        const res = await fetch(`${globalVariable}/provider/status/${this.userId}`, {\n          headers: { Authorization: `Bearer ${token}` },\n        });\n\n        const data = await res.json();\n\n        if (res.ok) {\n          this.jobStatus = data.status;\n        } else {\n          console.error(\"Error fetching job status:\", data.message);\n        }\n      } catch (error) {\n        console.error(\"Network error while fetching job status:\", error);\n      }\n    },\n   async fetchCategories() {\n  try {\n    const token = localStorage.getItem(\"employerToken\");\n    const response = await fetch(`${globalVariable}/name_and_id`, {\n      headers: {\n        Authorization: `Bearer ${token}`,\n      },\n    });\n    const data = await response.json();\n    if (response.ok) {\n      this.categories = data;\n      \n      // Debug: Log the categories to see the structure\n      console.log(\"Categories fetched:\", data);\n      console.log(\"First category structure:\", data[0]);\n      \n      data.forEach(category => {\n        this.categoryNames[category.id] = category.name;\n      });\n    } else {\n      console.error(\"Failed to load categories:\", data.message);\n    }\n  } catch (error) {\n    console.error(\"Error fetching categories:\", error);\n  }\n},\n    editJob(job) {\n      const deadlineDate = job.deadline_date\n        ? new Date(job.deadline_date).toISOString().split(\"T\")[0]\n        : \"\";\n\n      this.form = {\n        job_id: job.job_id,\n        job_title: job.job_title,\n        company: job.company,\n        deadline_date: deadlineDate,\n        job_description: job.job_description,\n        requirements: job.requirements,\n        responsability: job.responsability,\n        salary_min: job.salary_min,\n        salary_max: job.salary_max,\n        conclusion: job.conclusion,\n        logo: job.logo,\n        location: job.location,\n        category_id: job.category_id,\n      };\n      window.scrollTo({ top: 0, behavior: \"smooth\" });\n    },\n    async getUserIdFromEmail() {\n      const token = localStorage.getItem(\"employerToken\");\n      if (!token || !this.userEmail) return;\n\n      try {\n        const res = await fetch(`${globalVariable}/get_user_id_by_email/${this.userEmail}`, {\n          headers: { Authorization: `Bearer ${token}` },\n        });\n        const data = await res.json();\n\n        if (res.ok) {\n          this.userId = data.users_id;\n          this.fetchJobsByUser();\n          this.fetchUserStatus();\n        } else {\n          this.status = {\n            success: false,\n            message: data.message || \"Unable to get user ID.\",\n          };\n        }\n      } catch (err) {\n        console.error(\"Error getting users_id:\", err);\n        this.status = {\n          success: false,\n          message: \"Failed to fetch user ID.\",\n        };\n      }\n    },\n    getStatusLabel(status) {\n      if (status === 0) {\n        return { text: \"Pending\", colorClass: \"text-danger\" };\n      } else if (status === 1) {\n        return { text: \"Approved\", colorClass: \"text-success\" };\n      } else {\n        return { text: \"Unknown\", colorClass: \"text-muted\" };\n      }\n    },\n  },\n};\n</script>\n\n<style scoped>\n.modal-overlay {\n  position: fixed;\n  top: 0;\n  left: 0;\n  width: 100%;\n  height: 100%;\n  background: rgba(0, 0, 0, 0.5);\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  z-index: 1000;\n}\n\n/* Modal content styling */\n.modal-content {\n  background-color: white;\n  padding: 20px;\n  border-radius: 8px;\n  text-align: center;\n  width: 300px;\n}\n\n.container-fluid {\n  max-width: 800px;\n  margin: auto;\n  padding: 20px;\n  background-color: #ffffff;\n  border-radius: 8px;\n  box-shadow: 0 8px 30px rgba(0, 0, 0, 0.2);\n}\n\nh5 {\n  color: #333;\n  margin-bottom: 20px;\n}\n\n.custom-select {\n  width: 100%;\n  padding: 15px;\n  height: 50px;\n  border: 1px solid #ccc;\n  border-radius: 5px;\n  box-sizing: border-box;\n  transition: border-color 0.3s, box-shadow 0.3s;\n  font-size: 16px;\n}\n\n.form-control {\n  width: 100%;\n  padding: 15px;\n  height: 50px;\n  border: 1px solid #ccc;\n  border-radius: 5px;\n  box-sizing: border-box;\n  transition: border-color 0.3s, box-shadow 0.3s;\n  font-size: 16px;\n}\n\n.form-control:focus {\n  border-color: #E960A6;\n  box-shadow: 0 0 5px rgba(0, 123, 255, 0.5);\n  outline: none;\n}\n\n.form-label {\n  font-weight: bold;\n  margin-bottom: 5px;\n  display: block;\n}\n\n.btn-primary {\n  background-color: #E960A6;\n  color: white;\n}\n\n.btn-primary:hover {\n  background-color: #E960A6;\n  color: teal;\n}\n\n.form-group {\n  margin-bottom: 15px;\n}\n</style>"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}