{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport \"core-js/modules/es.iterator.constructor.js\";\nimport \"core-js/modules/es.iterator.filter.js\";\nimport \"core-js/modules/es.iterator.for-each.js\";\nimport \"core-js/modules/es.iterator.map.js\";\nimport \"core-js/modules/es.set.difference.v2.js\";\nimport \"core-js/modules/es.set.intersection.v2.js\";\nimport \"core-js/modules/es.set.is-disjoint-from.v2.js\";\nimport \"core-js/modules/es.set.is-subset-of.v2.js\";\nimport \"core-js/modules/es.set.is-superset-of.v2.js\";\nimport \"core-js/modules/es.set.symmetric-difference.v2.js\";\nimport \"core-js/modules/es.set.union.v2.js\";\nimport \"core-js/modules/web.dom-exception.stack.js\";\nimport IndexComponent from \"./IndexComponent.vue\";\nimport { globalVariable } from \"@/global\";\nexport default {\n  name: \"MainWrapper\",\n  components: {\n    IndexComponent\n  },\n  data() {\n    return {\n      uploadsUrl: globalVariable + \"/uploads/logo/\",\n      // Load search state from localStorage on initialization\n      searchQuery: localStorage.getItem(\"seekers_search_query\") || \"\",\n      selectedCategoryId: localStorage.getItem(\"seekers_selected_category\") || \"\",\n      currentPage: parseInt(localStorage.getItem(\"seekers_current_page\")) || 1,\n      itemsPerPage: 20,\n      form: {\n        users_id: null,\n        job_title: \"\",\n        company: \"\",\n        deadline_date: \"\",\n        job_description: \"\",\n        logo: \"\",\n        location: \"\"\n      },\n      jobs: [],\n      categories: [],\n      categoryNames: {},\n      isSubmitting: false,\n      isLoading: true,\n      // Main loading state\n      isDeleting: false,\n      // Delete operation loading state\n      isDeletingId: null,\n      // Track which item is being deleted\n      status: {\n        success: false,\n        message: \"\"\n      },\n      userEmail: \"\",\n      userId: \"\",\n      showModal: false,\n      selectedAboutId: null\n    };\n  },\n  computed: {\n    isAdmin() {\n      return this.userEmail.toLowerCase() === \"admin@kozi.rw\";\n    },\n    filteredJobs() {\n      const query = this.searchQuery.toLowerCase();\n      return this.jobs.filter(job => {\n        const fullName = `${job.first_name} ${job.last_name}`.toLowerCase();\n        const province = (job.province || '').toLowerCase();\n        const bio = (job.bio || '').toLowerCase();\n        const district = (job.district || '').toLowerCase();\n        const email = (job.email || '').toLowerCase();\n        const matchesSearch = !query || fullName.includes(query) || province.includes(query) || bio.includes(query) || email.includes(query) || district.includes(query);\n        const matchesCategory = !this.selectedCategoryId || job.categories_id == this.selectedCategoryId;\n        return matchesSearch && matchesCategory;\n      });\n    },\n    paginatedJobs() {\n      const start = (this.currentPage - 1) * this.itemsPerPage;\n      const end = start + this.itemsPerPage;\n      return this.filteredJobs.slice(start, end);\n    },\n    totalPages() {\n      return Math.ceil(this.filteredJobs.length / this.itemsPerPage);\n    },\n    visiblePageNumbers() {\n      const maxPagesToShow = 5;\n      const pages = [];\n      let start = Math.max(this.currentPage - Math.floor(maxPagesToShow / 2), 1);\n      let end = start + maxPagesToShow - 1;\n      if (end > this.totalPages) {\n        end = this.totalPages;\n        start = Math.max(end - maxPagesToShow + 1, 1);\n      }\n      for (let i = start; i <= end; i++) {\n        pages.push(i);\n      }\n      return pages;\n    }\n  },\n  watch: {\n    searchQuery() {\n      this.currentPage = 1;\n      // Save to localStorage whenever search query changes\n      localStorage.setItem(\"seekers_search_query\", this.searchQuery);\n      localStorage.setItem(\"seekers_current_page\", \"1\");\n    },\n    selectedCategoryId() {\n      this.currentPage = 1;\n      // Save to localStorage whenever category changes\n      localStorage.setItem(\"seekers_selected_category\", this.selectedCategoryId);\n      localStorage.setItem(\"seekers_current_page\", \"1\");\n    },\n    currentPage() {\n      // Save current page to localStorage\n      localStorage.setItem(\"seekers_current_page\", this.currentPage.toString());\n    }\n  },\n  async mounted() {\n    this.userEmail = localStorage.getItem(\"userEmail\") || \"\";\n    try {\n      await this.fetchCategories();\n      if (this.userEmail) {\n        await this.getUserIdFromEmail();\n      }\n    } catch (error) {\n      console.error(\"Error during initialization:\", error);\n    } finally {\n      this.isLoading = false;\n    }\n  },\n  methods: {\n    handleFileUpload(event) {\n      this.form.logo = event.target.files[0];\n    },\n    async fetchJobsByUser() {\n      try {\n        this.isLoading = true;\n        const token = localStorage.getItem(\"adminToken\");\n        if (!this.userId) return;\n        const res = await fetch(`${globalVariable}/admin/job_seekers`, {\n          headers: {\n            Authorization: `Bearer ${token}`\n          }\n        });\n        if (!res.ok) throw new Error(\"Failed to fetch jobs\");\n        const data = await res.json();\n        this.jobs = data;\n        const uniqueCategoryIds = [...new Set(data.map(job => job.categories_id).filter(id => id))];\n        for (const categoryId of uniqueCategoryIds) {\n          await this.fetchCategoryName(categoryId);\n        }\n      } catch (err) {\n        console.error(\"Error fetching jobs for user:\", err);\n        this.status = {\n          success: false,\n          message: \"Failed to load job seekers. Please try again.\"\n        };\n      } finally {\n        this.isLoading = false;\n      }\n    },\n    async fetchCategories() {\n      try {\n        const token = localStorage.getItem(\"adminToken\");\n        const response = await fetch(`${globalVariable}/name_and_id`, {\n          headers: {\n            Authorization: `Bearer ${token}`\n          }\n        });\n        const data = await response.json();\n        if (response.ok) {\n          this.categories = data;\n          data.forEach(category => {\n            this.categoryNames[category.id] = category.name;\n          });\n        } else {\n          console.error(\"Failed to load categories:\", data.message);\n        }\n      } catch (error) {\n        console.error(\"Error fetching categories:\", error);\n      }\n    },\n    async fetchCategoryName(categoryId) {\n      if (this.categoryNames[categoryId]) return;\n      try {\n        const response = await fetch(`${globalVariable}/category_name/${categoryId}`);\n        const data = await response.json();\n        if (response.ok && data && data.name) {\n          this.categoryNames[categoryId] = data.name;\n        } else {\n          this.categoryNames[categoryId] = \"Unknown\";\n        }\n      } catch (error) {\n        console.error(`Error fetching category name for ID ${categoryId}:`, error);\n        this.categoryNames[categoryId] = \"Unknown\";\n      }\n    },\n    getCategoryName(categoryId) {\n      return this.categoryNames[categoryId] || \"Loading...\";\n    },\n    goToEdit(job_id) {\n      // Store current search state before navigating\n      localStorage.setItem(\"seekers_search_query\", this.searchQuery);\n      localStorage.setItem(\"seekers_selected_category\", this.selectedCategoryId);\n      localStorage.setItem(\"seekers_current_page\", this.currentPage.toString());\n      this.$router.push({\n        name: \"edit-seekers\",\n        params: {\n          id: job_id\n        }\n      });\n    },\n    goToMore(job_id) {\n      // Store current search state before navigating\n      localStorage.setItem(\"seekers_search_query\", this.searchQuery);\n      localStorage.setItem(\"seekers_selected_category\", this.selectedCategoryId);\n      localStorage.setItem(\"seekers_current_page\", this.currentPage.toString());\n      this.$router.push({\n        name: \"view-seekers\",\n        params: {\n          id: job_id\n        }\n      });\n    },\n    goToPage(page) {\n      if (page >= 1 && page <= this.totalPages) {\n        this.currentPage = page;\n      }\n    },\n    // Method to clear search filters\n    clearFilters() {\n      this.searchQuery = \"\";\n      this.selectedCategoryId = \"\";\n      this.currentPage = 1;\n\n      // Clear from localStorage\n      localStorage.removeItem(\"seekers_search_query\");\n      localStorage.removeItem(\"seekers_selected_category\");\n      localStorage.removeItem(\"seekers_current_page\");\n    },\n    confirmDelete(id) {\n      this.selectedAboutId = id;\n      this.showModal = true;\n    },\n    closeModal() {\n      if (!this.isDeleting) {\n        this.showModal = false;\n        this.selectedAboutId = null;\n      }\n    },\n    async deleteAbout(users_id) {\n      const token = localStorage.getItem(\"adminToken\");\n      try {\n        this.isDeleting = true;\n        this.isDeletingId = users_id;\n        const res = await fetch(`${globalVariable}/admin/delete_job_seeker/${users_id}`, {\n          method: \"DELETE\",\n          headers: {\n            Authorization: `Bearer ${token}`\n          }\n        });\n        const data = await res.json();\n        if (res.ok) {\n          this.jobs = this.jobs.filter(job => job.users_id !== users_id);\n          this.status = {\n            success: true,\n            message: \"Job seeker deleted successfully.\"\n          };\n        } else {\n          this.status = {\n            success: false,\n            message: data.message || \"Failed to delete job seeker.\"\n          };\n        }\n      } catch (err) {\n        console.error(\"Error deleting job seeker:\", err);\n        this.status = {\n          success: false,\n          message: \"An error occurred while deleting.\"\n        };\n      } finally {\n        this.isDeleting = false;\n        this.isDeletingId = null;\n        this.closeModal();\n      }\n    },\n    async getUserIdFromEmail() {\n      const token = localStorage.getItem(\"adminToken\");\n      if (!token) return;\n      try {\n        const payload = JSON.parse(atob(token.split(\".\")[1]));\n        if (!this.userEmail) {\n          this.userEmail = payload.email;\n        }\n        const res = await fetch(`${globalVariable}/get_user_id_by_email/${this.userEmail}`, {\n          headers: {\n            Authorization: `Bearer ${token}`\n          }\n        });\n        const data = await res.json();\n        if (res.ok) {\n          this.userId = data.users_id;\n          await this.fetchJobsByUser();\n        } else {\n          this.status = {\n            success: false,\n            message: data.message || \"Unable to get user ID.\"\n          };\n        }\n      } catch (err) {\n        console.error(\"Error getting users_id:\", err);\n        this.status = {\n          success: false,\n          message: \"Failed to fetch user ID.\"\n        };\n      }\n    }\n  },\n  // Optional: Clean up localStorage when component is destroyed\n  beforeUnmount() {\n    // Uncomment these lines if you want to clear search state when leaving the component permanently\n    // localStorage.removeItem(\"seekers_search_query\");\n    // localStorage.removeItem(\"seekers_selected_category\");\n    // localStorage.removeItem(\"seekers_current_page\");\n  }\n};","map":{"version":3,"names":["IndexComponent","globalVariable","name","components","data","uploadsUrl","searchQuery","localStorage","getItem","selectedCategoryId","currentPage","parseInt","itemsPerPage","form","users_id","job_title","company","deadline_date","job_description","logo","location","jobs","categories","categoryNames","isSubmitting","isLoading","isDeleting","isDeletingId","status","success","message","userEmail","userId","showModal","selectedAboutId","computed","isAdmin","toLowerCase","filteredJobs","query","filter","job","fullName","first_name","last_name","province","bio","district","email","matchesSearch","includes","matchesCategory","categories_id","paginatedJobs","start","end","slice","totalPages","Math","ceil","length","visiblePageNumbers","maxPagesToShow","pages","max","floor","i","push","watch","setItem","toString","mounted","fetchCategories","getUserIdFromEmail","error","console","methods","handleFileUpload","event","target","files","fetchJobsByUser","token","res","fetch","headers","Authorization","ok","Error","json","uniqueCategoryIds","Set","map","id","categoryId","fetchCategoryName","err","response","forEach","category","getCategoryName","goToEdit","job_id","$router","params","goToMore","goToPage","page","clearFilters","removeItem","confirmDelete","closeModal","deleteAbout","method","payload","JSON","parse","atob","split","beforeUnmount"],"sources":["/Users/gentil/Desktop/Kozi-ai-agent/src/views/admin/ViewSeekers.vue"],"sourcesContent":["<template>\n  <IndexComponent />\n  <div\n    class=\"page-wrapper\"\n    id=\"main-wrapper\"\n    data-layout=\"vertical\"\n    data-navbarbg=\"skin6\"\n    data-sidebartype=\"full\"\n    data-sidebar-description=\"fixed\"\n    data-header-description=\"fixed\"\n    style=\"position: absolute; top: 0; left: 0; right: 0; bottom: 0; z-index: 1;\"\n  >\n    <div class=\"body-wrapper\" style=\"margin-top: 70px; margin-left: 270px; background: white; min-height: calc(100vh - 70px); padding: 20px; overflow-y: auto; max-height: calc(100vh - 70px);\">\n      <h5 class=\"card-title fw-semibold mb-4\" style=\"color: #E960A6;\">\n        <i class=\"ti ti-user-plus\"></i> View Seekers\n      </h5>\n      <!-- <p><strong>Your email:</strong> {{ userEmail }}</p> -->\n        \n      \n      <div class=\"row mb-3\">\n        <div class=\"col-md-8\">\n          <input\n            type=\"text\"\n            v-model=\"searchQuery\"\n            class=\"form-control\"\n            placeholder=\"Search by name,email, skills , province or  district\"\n          />\n        </div>\n\n        <div class=\"col-md-3\">\n          <select v-model=\"selectedCategoryId\" class=\"form-control\" style=\"height: 48px; padding-top: 8px; padding-bottom: 8px;\">\n            <option disabled value=\"\">CHOOSE CATEGORY</option>\n            <option value=\"\">All Categories</option>\n            <option\n              v-for=\"category in categories\"\n              :key=\"category.id\"\n              :value=\"category.id\"\n            >\n              {{ category.name }}\n            </option>\n          </select>\n        </div>\n\n        \n      </div>\n\n      <!-- Loading Spinner -->\n      <div v-if=\"isLoading\" class=\"d-flex justify-content-center my-5\">\n        <div class=\"text-center\">\n          <div class=\"spinner-border text-primary\" role=\"status\" style=\"width: 3rem; height: 3rem;\">\n            <span class=\"visually-hidden\">Loading...</span>\n          </div>\n          <div class=\"mt-2\">\n            <p class=\"text-muted\">Loading job seekers...</p>\n          </div>\n        </div>\n      </div>\n      \n      <div v-else-if=\"filteredJobs.length === 0\" class=\"d-flex justify-content-center my-4\">\n        <div class=\"alert alert-danger text-center\" style=\"width: 40rem;\">\n          No job seekers found.\n        </div>\n      </div>\n\n      <div class=\"table-responsive\" v-if=\"!isLoading && filteredJobs.length > 0\">\n        <table class=\"table table-bordered\">\n          <thead class=\"table-light\">\n            <tr>\n              <th>Ids</th>\n              <th>NAMES</th>\n              <th>PROVINCE</th>\n              <th>CATEGORY</th>\n              <th>SKILLS</th>\n              <th>SALARY</th>\n              <th>ACTION</th>\n            </tr>\n          </thead>\n          <tbody>\n            <tr v-for=\"(seeker, index) in paginatedJobs\" :key=\"seeker.users_id\">\n              <td>{{ (currentPage - 1) * itemsPerPage + index + 1 }}</td>\n              <td>{{ seeker.first_name }} {{ seeker.last_name }}</td>\n              <td>{{ seeker.province }}</td>\n              <td>{{ getCategoryName(seeker.categories_id) }}</td>\n              <td>{{ seeker.bio && seeker.bio.length > 40 ? seeker.bio.substring(0, 40) + '...' : seeker.bio || 'N/A' }}</td>\n              <td>{{ seeker.salary }}</td>\n              \n\n              <td>\n                <div class=\"d-flex gap-2\">\n                  \n                  <button \n                  class=\"btn btn-primary btn-sm\" \n                  @click=\"goToEdit(seeker.users_id)\"\n                  :disabled=\"!isAdmin || isDeletingId === seeker.users_id\"\n                  >\n                  Edit\n                </button>\n                  <button class=\"btn btn-cancel btn-sm\" @click=\"goToMore(seeker.users_id)\">More</button>\n                  <button \n                class=\"btn btn-primary btn-sm\" \n                @click=\"confirmDelete(seeker.users_id)\"\n                :disabled=\"!isAdmin || isDeletingId === seeker.users_id\"\n                >\n                <span v-if=\"isDeletingId === seeker.users_id\" class=\"spinner-border spinner-border-sm me-1\" role=\"status\"></span>{{ isDeletingId === seeker.users_id ? 'Deleting...' : 'Delete' }}\n              </button>\n                </div>\n              </td>\n            </tr>\n          </tbody>\n        </table>\n      </div>\n\n      <div class=\"d-flex justify-content-center mt-4\" v-if=\"!isLoading && totalPages > 1\">\n        <nav>\n          <ul class=\"pagination\">\n            <li class=\"page-item\" :class=\"{ disabled: currentPage === 1 }\">\n              <button class=\"page-link\" @click=\"goToPage(currentPage - 1)\">Previous</button>\n            </li>\n\n            <li\n              v-for=\"page in visiblePageNumbers\"\n              :key=\"page\"\n              class=\"page-item\"\n              :class=\"{ active: page === currentPage }\"\n            >\n              <button class=\"page-link\" @click=\"goToPage(page)\">{{ page }}</button>\n            </li>\n\n            <li class=\"page-item\" :class=\"{ disabled: currentPage === totalPages }\">\n              <button class=\"page-link\" @click=\"goToPage(currentPage + 1)\">Next</button>\n            </li>\n          </ul>\n        </nav>\n      </div>\n\n    </div>\n  </div>\n\n  <div v-if=\"showModal\" class=\"modal-overlay\">\n    <div class=\"modal-content\">\n      <h5>Are you sure you want to delete this job seeker content?</h5>\n      <div>\n        <button \n          class=\"btn btn-primary mt-3\" \n          @click=\"deleteAbout(selectedAboutId)\"\n          :disabled=\"isDeleting\"\n        >\n          <span v-if=\"isDeleting\" class=\"spinner-border spinner-border-sm me-1\" role=\"status\"></span>\n          {{ isDeleting ? 'Deleting...' : 'Yes, Delete' }}\n        </button>&nbsp;\n        <button \n          class=\"btn btn-cancel mt-3\" \n          style=\"background-color: teal; color: white;\" \n          @click=\"closeModal\"\n          :disabled=\"isDeleting\"\n        >\n          Cancel\n        </button>\n      </div>\n    </div>\n  </div>\n</template>\n\n<script>\nimport IndexComponent from \"./IndexComponent.vue\";\nimport { globalVariable } from \"@/global\";\n\nexport default {\n  name: \"MainWrapper\",\n  components: { IndexComponent },\n  data() {\n    return {\n      uploadsUrl: globalVariable + \"/uploads/logo/\",\n      // Load search state from localStorage on initialization\n      searchQuery: localStorage.getItem(\"seekers_search_query\") || \"\",\n      selectedCategoryId: localStorage.getItem(\"seekers_selected_category\") || \"\",\n      currentPage: parseInt(localStorage.getItem(\"seekers_current_page\")) || 1,\n      itemsPerPage: 20,\n      form: {\n        users_id: null,\n        job_title: \"\",\n        company: \"\",\n        deadline_date: \"\",\n        job_description: \"\",\n        logo: \"\",\n        location: \"\",\n      },\n      jobs: [],\n      categories: [],\n      categoryNames: {},\n      isSubmitting: false,\n      isLoading: true, // Main loading state\n      isDeleting: false, // Delete operation loading state\n      isDeletingId: null, // Track which item is being deleted\n      status: {\n        success: false,\n        message: \"\",\n      },\n      userEmail: \"\",\n      userId: \"\",\n      showModal: false,\n      selectedAboutId: null,\n    };\n  },\n  computed: {\n    isAdmin() {\n    return this.userEmail.toLowerCase() === \"admin@kozi.rw\";\n  },\n    filteredJobs() {\n      const query = this.searchQuery.toLowerCase();\n      return this.jobs.filter((job) => {\n        const fullName = `${job.first_name} ${job.last_name}`.toLowerCase();\n        const province = (job.province || '').toLowerCase();\n        const bio = (job.bio || '').toLowerCase();\n        const district = (job.district || '').toLowerCase();\n        const email = (job.email || '').toLowerCase();\n        const matchesSearch = !query || fullName.includes(query) || province.includes(query) || bio.includes(query) || email.includes(query) || district.includes(query);\n        const matchesCategory = !this.selectedCategoryId || job.categories_id == this.selectedCategoryId;\n        return matchesSearch && matchesCategory;\n      });\n    },\n    paginatedJobs() {\n      const start = (this.currentPage - 1) * this.itemsPerPage;\n      const end = start + this.itemsPerPage;\n      return this.filteredJobs.slice(start, end);\n    },\n    totalPages() {\n      return Math.ceil(this.filteredJobs.length / this.itemsPerPage);\n    },\n    visiblePageNumbers() {\n      const maxPagesToShow = 5;\n      const pages = [];\n\n      let start = Math.max(this.currentPage - Math.floor(maxPagesToShow / 2), 1);\n      let end = start + maxPagesToShow - 1;\n\n      if (end > this.totalPages) {\n        end = this.totalPages;\n        start = Math.max(end - maxPagesToShow + 1, 1);\n      }\n\n      for (let i = start; i <= end; i++) {\n        pages.push(i);\n      }\n\n      return pages;\n    },\n  },\n  watch: {\n    searchQuery() {\n      this.currentPage = 1;\n      // Save to localStorage whenever search query changes\n      localStorage.setItem(\"seekers_search_query\", this.searchQuery);\n      localStorage.setItem(\"seekers_current_page\", \"1\");\n    },\n    selectedCategoryId() {\n      this.currentPage = 1;\n      // Save to localStorage whenever category changes\n      localStorage.setItem(\"seekers_selected_category\", this.selectedCategoryId);\n      localStorage.setItem(\"seekers_current_page\", \"1\");\n    },\n    currentPage() {\n      // Save current page to localStorage\n      localStorage.setItem(\"seekers_current_page\", this.currentPage.toString());\n    }\n  },\n  async mounted() {\n    this.userEmail = localStorage.getItem(\"userEmail\") || \"\";\n    \n    try {\n      await this.fetchCategories();\n      if (this.userEmail) {\n        await this.getUserIdFromEmail();\n      }\n    } catch (error) {\n      console.error(\"Error during initialization:\", error);\n    } finally {\n      this.isLoading = false;\n    }\n  },\n  methods: {\n    handleFileUpload(event) {\n      this.form.logo = event.target.files[0];\n    },\n\n    async fetchJobsByUser() {\n      try {\n        this.isLoading = true;\n        const token = localStorage.getItem(\"adminToken\");\n        if (!this.userId) return;\n        \n        const res = await fetch(`${globalVariable}/admin/job_seekers`, {\n          headers: {\n            Authorization: `Bearer ${token}`,\n          },\n        });\n        \n        if (!res.ok) throw new Error(\"Failed to fetch jobs\");\n        const data = await res.json();\n        this.jobs = data;\n\n        const uniqueCategoryIds = [...new Set(data.map(job => job.categories_id).filter(id => id))];\n        for (const categoryId of uniqueCategoryIds) {\n          await this.fetchCategoryName(categoryId);\n        }\n      } catch (err) {\n        console.error(\"Error fetching jobs for user:\", err);\n        this.status = {\n          success: false,\n          message: \"Failed to load job seekers. Please try again.\",\n        };\n      } finally {\n        this.isLoading = false;\n      }\n    },\n\n    async fetchCategories() {\n      try {\n        const token = localStorage.getItem(\"adminToken\");\n        const response = await fetch(`${globalVariable}/name_and_id`, {\n          headers: {\n            Authorization: `Bearer ${token}`,\n          },\n        });\n        const data = await response.json();\n        if (response.ok) {\n          this.categories = data;\n          data.forEach(category => {\n            this.categoryNames[category.id] = category.name;\n          });\n        } else {\n          console.error(\"Failed to load categories:\", data.message);\n        }\n      } catch (error) {\n        console.error(\"Error fetching categories:\", error);\n      }\n    },\n\n    async fetchCategoryName(categoryId) {\n      if (this.categoryNames[categoryId]) return;\n\n      try {\n        const response = await fetch(`${globalVariable}/category_name/${categoryId}`);\n        const data = await response.json();\n        if (response.ok && data && data.name) {\n          this.categoryNames[categoryId] = data.name;\n        } else {\n          this.categoryNames[categoryId] = \"Unknown\";\n        }\n      } catch (error) {\n        console.error(`Error fetching category name for ID ${categoryId}:`, error);\n        this.categoryNames[categoryId] = \"Unknown\";\n      }\n    },\n\n    getCategoryName(categoryId) {\n      return this.categoryNames[categoryId] || \"Loading...\";\n    },\n\n    goToEdit(job_id) {\n      // Store current search state before navigating\n      localStorage.setItem(\"seekers_search_query\", this.searchQuery);\n      localStorage.setItem(\"seekers_selected_category\", this.selectedCategoryId);\n      localStorage.setItem(\"seekers_current_page\", this.currentPage.toString());\n      \n      this.$router.push({ name: \"edit-seekers\", params: { id: job_id } });\n    },\n\n    goToMore(job_id) {\n      // Store current search state before navigating\n      localStorage.setItem(\"seekers_search_query\", this.searchQuery);\n      localStorage.setItem(\"seekers_selected_category\", this.selectedCategoryId);\n      localStorage.setItem(\"seekers_current_page\", this.currentPage.toString());\n      \n      this.$router.push({ name: \"view-seekers\", params: { id: job_id } });\n    },\n    \n    goToPage(page) {\n      if (page >= 1 && page <= this.totalPages) {\n        this.currentPage = page;\n      }\n    },\n\n    // Method to clear search filters\n    clearFilters() {\n      this.searchQuery = \"\";\n      this.selectedCategoryId = \"\";\n      this.currentPage = 1;\n      \n      // Clear from localStorage\n      localStorage.removeItem(\"seekers_search_query\");\n      localStorage.removeItem(\"seekers_selected_category\");\n      localStorage.removeItem(\"seekers_current_page\");\n    },\n\n    confirmDelete(id) {\n      this.selectedAboutId = id;\n      this.showModal = true;\n    },\n\n    closeModal() {\n      if (!this.isDeleting) {\n        this.showModal = false;\n        this.selectedAboutId = null;\n      }\n    },\n\n    async deleteAbout(users_id) {\n      const token = localStorage.getItem(\"adminToken\");\n      try {\n        this.isDeleting = true;\n        this.isDeletingId = users_id;\n        \n        const res = await fetch(`${globalVariable}/admin/delete_job_seeker/${users_id}`, {\n          method: \"DELETE\",\n          headers: {\n            Authorization: `Bearer ${token}`,\n          },\n        });\n        \n        const data = await res.json();\n        if (res.ok) {\n          this.jobs = this.jobs.filter(job => job.users_id !== users_id);\n          this.status = {\n            success: true,\n            message: \"Job seeker deleted successfully.\",\n          };\n        } else {\n          this.status = {\n            success: false,\n            message: data.message || \"Failed to delete job seeker.\",\n          };\n        }\n      } catch (err) {\n        console.error(\"Error deleting job seeker:\", err);\n        this.status = {\n          success: false,\n          message: \"An error occurred while deleting.\",\n        };\n      } finally {\n        this.isDeleting = false;\n        this.isDeletingId = null;\n        this.closeModal();\n      }\n    },\n\n    async getUserIdFromEmail() {\n      const token = localStorage.getItem(\"adminToken\");\n      if (!token) return;\n      \n      try {\n        const payload = JSON.parse(atob(token.split(\".\")[1]));\n        if (!this.userEmail) {\n          this.userEmail = payload.email;\n        }\n        \n        const res = await fetch(`${globalVariable}/get_user_id_by_email/${this.userEmail}`, {\n          headers: { Authorization: `Bearer ${token}` },\n        });\n        \n        const data = await res.json();\n        if (res.ok) {\n          this.userId = data.users_id;\n          await this.fetchJobsByUser();\n        } else {\n          this.status = {\n            success: false,\n            message: data.message || \"Unable to get user ID.\",\n          };\n        }\n      } catch (err) {\n        console.error(\"Error getting users_id:\", err);\n        this.status = {\n          success: false,\n          message: \"Failed to fetch user ID.\",\n        };\n      }\n    },\n  },\n\n  // Optional: Clean up localStorage when component is destroyed\n  beforeUnmount() {\n    // Uncomment these lines if you want to clear search state when leaving the component permanently\n    // localStorage.removeItem(\"seekers_search_query\");\n    // localStorage.removeItem(\"seekers_selected_category\");\n    // localStorage.removeItem(\"seekers_current_page\");\n  }\n};\n</script>\n\n\n<style scoped>\n.modal-overlay {\n  position: fixed;\n  top: 0;\n  left: 0;\n  width: 100%;\n  height: 100%;\n  background-color: rgba(0, 0, 0, 0.5);\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  z-index: 1000;\n}\n\n.modal-content {\n  background: white;\n  padding: 20px;\n  border-radius: 8px;\n  text-align: center;\n  max-width: 400px;\n  width: 90%;\n}\n\n.spinner-border-sm {\n  width: 1rem;\n  height: 1rem;\n}\n\n\n\n.pagination {\n  display: flex;\n  justify-content: center;\n  gap: 0.3rem;\n}\n\n.page-item.active .page-link {\n  background-color: #E960A6;\n  color: white;\n  border-color: #E960A6;\n}\n\n.page-link {\n  border-radius: 4px;\n  padding: 0.4rem 0.75rem;\n  cursor: pointer;\n  color:#336Cb6\n}\n\n.modal-overlay {\n  position: fixed;\n  top: 0;\n  left: 0;\n  width: 100%;\n  height: 100%;\n  background: rgba(0, 0, 0, 0.5);\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  z-index: 1000;\n}\n\n/* Modal content styling */\n.modal-content {\n  background-color: white;\n  padding: 20px;\n  border-radius: 8px;\n  text-align: center;\n  width: 300px;\n}\n\n.container-fluid {\n  max-width: 800px;\n  margin: auto;\n  padding: 20px;\n  background-color: #ffffff;\n  border-radius: 8px;\n  box-shadow: 0 8px 30px rgba(0, 0, 0, 0.2);\n}\n\nh5 {\n  color: #333;\n  margin-bottom: 20px;\n}\n\n.custom-select {\n  width: 100%;\n  padding: 15px;\n  height: 50px;\n  border: 1px solid #ccc;\n  border-radius: 5px;\n  box-sizing: border-box;\n  transition: border-color 0.3s, box-shadow 0.3s;\n  font-size: 16px;\n}\n\n.form-control {\n  width: 100%;\n  padding: 15px;\n  height: 50px;\n  border: 1px solid #ccc;\n  border-radius: 5px;\n  box-sizing: border-box;\n  transition: border-color 0.3s, box-shadow 0.3s;\n  font-size: 16px;\n}\n\n.form-control:focus {\n  border-color: #E960A6;\n  box-shadow: 0 0 5px rgba(0, 123, 255, 0.5);\n  outline: none;\n}\n\n.form-label {\n  font-weight: bold;\n  margin-bottom: 5px;\n  display: block;\n}\n\n.btn-primary {\n  background-color: #E960A6;\n  color: white;\n}\n\n.btn-primary:hover {\n  background-color: #E960A6;\n  color: teal;\n}\n\n.btn-cancel {\n  background-color: teal;\n  color: white;\n}\n\n.btn-cancel:hover {\n  background-color: teal;\n  color: #E960A6;\n}\n\n.form-group {\n  margin-bottom: 15px;\n}\n</style>"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}