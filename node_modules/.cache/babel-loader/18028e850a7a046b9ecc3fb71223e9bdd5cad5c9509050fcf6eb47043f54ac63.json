{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport \"core-js/modules/es.iterator.constructor.js\";\nimport \"core-js/modules/es.iterator.for-each.js\";\nimport \"core-js/modules/web.dom-exception.stack.js\";\nimport { globalVariable } from \"@/global\";\nimport IndexComponent from \"./IndexComponent.vue\";\nimport { getProvinces, getDistrictsByProvince, getSectorsByDistrict, getCellsBySector, getVillagesByCell } from 'rwanda-geo-structure';\nexport default {\n  name: \"ProfileComponent\",\n  components: {\n    IndexComponent\n  },\n  data() {\n    return {\n      isSubmitting: false,\n      form: {\n        first_name: \"\",\n        last_name: \"\",\n        gender: \"\",\n        fathers_name: \"\",\n        mothers_name: \"\",\n        telephone: \"\",\n        province: \"\",\n        district: \"\",\n        sector: \"\",\n        cell: \"\",\n        village: \"\",\n        bio: \"\",\n        salary: \"\",\n        date_of_birth: \"\",\n        disability: \"\",\n        cv: null,\n        id: null,\n        image: null,\n        categories_id: \"\",\n        id_url: null,\n        cv_url: null,\n        image_url: null\n      },\n      uploadsUrl: `${globalVariable}/uploads/profile/`,\n      selectedCategoryType: \"\",\n      userId: \"\",\n      userEmail: \"\",\n      message: null,\n      messageType: null,\n      categoryTypes: [],\n      categories: [],\n      currentCategoryInfo: null,\n      // Location data\n      provinces: [],\n      districts: [],\n      sectors: [],\n      cells: [],\n      villages: [],\n      personalFields: [{\n        label: \"First Name\",\n        model: \"first_name\",\n        type: \"text\"\n      }, {\n        label: \"Last Name\",\n        model: \"last_name\",\n        type: \"text\"\n      }, {\n        label: \"Father's Name\",\n        model: \"fathers_name\",\n        type: \"text\"\n      }, {\n        label: \"Mother's Name\",\n        model: \"mothers_name\",\n        type: \"text\"\n      }, {\n        label: \"Date of Birth\",\n        model: \"date_of_birth\",\n        type: \"date\"\n      }, {\n        label: \"Telephone\",\n        model: \"telephone\",\n        type: \"tel\"\n      }]\n    };\n  },\n  computed: {\n    maxDateOfBirth() {\n      const today = new Date();\n      today.setFullYear(today.getFullYear() - 18);\n      return today.toISOString().split(\"T\")[0];\n    }\n  },\n  mounted() {\n    this.loadProvinces();\n    this.getUserIdFromEmail();\n    this.loadCategoryTypes();\n  },\n  methods: {\n    // Location methods\n    loadProvinces() {\n      this.provinces = getProvinces();\n    },\n    loadDistricts() {\n      if (this.form.province) {\n        this.districts = getDistrictsByProvince(this.form.province);\n        // Reset dependent fields\n        this.sectors = [];\n        this.cells = [];\n        this.villages = [];\n        this.form.district = \"\";\n        this.form.sector = \"\";\n        this.form.cell = \"\";\n        this.form.village = \"\";\n      }\n    },\n    loadSectors() {\n      if (this.form.province && this.form.district) {\n        this.sectors = getSectorsByDistrict(this.form.province, this.form.district);\n        // Reset dependent fields\n        this.cells = [];\n        this.villages = [];\n        this.form.sector = \"\";\n        this.form.cell = \"\";\n        this.form.village = \"\";\n      }\n    },\n    loadCells() {\n      if (this.form.province && this.form.district && this.form.sector) {\n        this.cells = getCellsBySector(this.form.province, this.form.district, this.form.sector);\n        // Reset dependent fields\n        this.villages = [];\n        this.form.cell = \"\";\n        this.form.village = \"\";\n      }\n    },\n    loadVillages() {\n      if (this.form.province && this.form.district && this.form.sector && this.form.cell) {\n        this.villages = getVillagesByCell(this.form.province, this.form.district, this.form.sector, this.form.cell);\n        this.form.village = \"\";\n      }\n    },\n    // Method to populate location dropdowns when editing existing profile\n    async populateLocationData() {\n      if (this.form.province) {\n        this.districts = getDistrictsByProvince(this.form.province);\n        if (this.form.district) {\n          this.sectors = getSectorsByDistrict(this.form.province, this.form.district);\n          if (this.form.sector) {\n            this.cells = getCellsBySector(this.form.province, this.form.district, this.form.sector);\n            if (this.form.cell) {\n              this.villages = getVillagesByCell(this.form.province, this.form.district, this.form.sector, this.form.cell);\n            }\n          }\n        }\n      }\n    },\n    handleTelephoneInput(event) {\n      // Remove any non-numeric characters\n      let value = event.target.value.replace(/\\D/g, '');\n\n      // Limit to 12 digits\n      if (value.length > 12) {\n        value = value.substring(0, 12);\n      }\n\n      // Update the form value\n      this.form.telephone = value;\n\n      // Update the input field value\n      event.target.value = value;\n    },\n    async getUserIdFromEmail() {\n      const token = localStorage.getItem(\"employeeToken\");\n      if (!token) return;\n      try {\n        const payload = JSON.parse(atob(token.split(\".\")[1]));\n        this.userEmail = payload.email;\n        const res = await fetch(`${globalVariable}/get_user_id_by_email/${this.userEmail}`, {\n          headers: {\n            Authorization: `Bearer ${token}`\n          }\n        });\n        const data = await res.json();\n        if (res.ok) {\n          this.userId = data.users_id;\n          this.fetchProfile();\n          this.fetchCurrentCategoryInfo();\n        } else {\n          this.message = data.message || \"Unable to get user ID.\";\n          this.messageType = \"alert-danger\";\n        }\n      } catch (err) {\n        console.error(\"Error getting users_id:\", err);\n        this.message = \"Failed to fetch user ID.\";\n        this.messageType = \"alert-danger\";\n      }\n    },\n    async fetchCurrentCategoryInfo() {\n      try {\n        const res = await fetch(`${globalVariable}/categoryandtype/${this.userId}`, {\n          headers: {\n            Authorization: `Bearer ${localStorage.getItem(\"employeeToken\")}`\n          }\n        });\n        const data = await res.json();\n        if (res.ok) {\n          this.currentCategoryInfo = data;\n          this.selectedCategoryType = data.category_types_id;\n          this.form.categories_id = data.category_id;\n          await this.loadCategories();\n        } else {\n          console.log(\"No current category found for user\");\n        }\n      } catch (err) {\n        console.error(\"Error fetching current category info:\", err);\n      }\n    },\n    async fetchProfile() {\n      try {\n        const res = await fetch(`${globalVariable}/seeker/view_profile/${this.userId}`, {\n          headers: {\n            Authorization: `Bearer ${localStorage.getItem(\"employeeToken\")}`\n          }\n        });\n        const data = await res.json();\n        if (res.ok) {\n          this.form.date_of_birth = data.date_of_birth ? data.date_of_birth.split(\"T\")[0] : \"\";\n          this.form.salary = data.salary || \"\";\n          Object.keys(this.form).forEach(key => {\n            if (key !== \"date_of_birth\" && key !== \"salary\") {\n              this.form[key] = data[key] || this.form[key];\n            }\n          });\n          this.form.id_url = data.id ? `${globalVariable}/uploads/profile/${data.id}` : null;\n          this.form.cv_url = data.cv ? `${globalVariable}/uploads/profile/${data.cv}` : null;\n          this.form.image_url = data.image ? `${globalVariable}/uploads/profile/${data.image}` : null;\n\n          // Populate location data after form is loaded\n          await this.populateLocationData();\n        } else {\n          this.message = data.message || \"Failed to fetch profile\";\n          this.messageType = \"alert-danger\";\n        }\n      } catch (err) {\n        console.error(\"Error fetching profile:\", err);\n        this.message = \"Error loading profile.\";\n        this.messageType = \"alert-danger\";\n      }\n    },\n    async loadCategoryTypes() {\n      try {\n        const res = await fetch(`${globalVariable}/category-types`);\n        const data = await res.json();\n        this.categoryTypes = data;\n      } catch (error) {\n        console.error(\"Failed to load category types:\", error);\n      }\n    },\n    async loadCategories() {\n      try {\n        const res = await fetch(`${globalVariable}/categories/${this.selectedCategoryType}`);\n        const data = await res.json();\n        this.categories = data;\n        if (!this.currentCategoryInfo || this.currentCategoryInfo.category_types_id !== this.selectedCategoryType) {\n          this.form.categories_id = \"\";\n        }\n      } catch (error) {\n        console.error(\"Failed to load categories:\", error);\n      }\n    },\n    handleFileChange(field, event) {\n      this.form[field] = event.target.files[0];\n    },\n    async handleSubmit() {\n      this.isSubmitting = true;\n      const formData = new FormData();\n      for (const key of [\"first_name\", \"last_name\", \"gender\", \"fathers_name\", \"mothers_name\", \"telephone\", \"province\", \"district\", \"sector\", \"cell\", \"village\", \"bio\", \"salary\", \"date_of_birth\", \"disability\", \"categories_id\"]) {\n        formData.append(key, this.form[key]);\n      }\n      if (this.form.image) formData.append(\"image\", this.form.image);\n      if (this.form.id) formData.append(\"id\", this.form.id);\n      if (this.form.cv) formData.append(\"cv\", this.form.cv);\n      formData.append(\"is_editable\", 0);\n      try {\n        const res = await fetch(`${globalVariable}/seeker/update_profile/${this.userId}`, {\n          method: \"PUT\",\n          headers: {\n            Authorization: `Bearer ${localStorage.getItem(\"employeeToken\")}`\n          },\n          body: formData\n        });\n        const data = await res.json();\n        if (res.ok) {\n          this.message = \"Profile updated successfully.\";\n          this.$router.push('/dashboard/view-profile');\n          this.messageType = \"alert-success\";\n          await this.fetchProfile();\n          await this.fetchCurrentCategoryInfo();\n        } else {\n          this.message = data.message || \"Failed to update profile.\";\n          this.messageType = \"alert-danger\";\n        }\n      } catch (error) {\n        console.error(\"Error updating profile:\", error);\n        this.message = \"An error occurred during update.\";\n        this.messageType = \"alert-danger\";\n      } finally {\n        this.isSubmitting = false;\n      }\n    }\n  }\n};","map":{"version":3,"names":["globalVariable","IndexComponent","getProvinces","getDistrictsByProvince","getSectorsByDistrict","getCellsBySector","getVillagesByCell","name","components","data","isSubmitting","form","first_name","last_name","gender","fathers_name","mothers_name","telephone","province","district","sector","cell","village","bio","salary","date_of_birth","disability","cv","id","image","categories_id","id_url","cv_url","image_url","uploadsUrl","selectedCategoryType","userId","userEmail","message","messageType","categoryTypes","categories","currentCategoryInfo","provinces","districts","sectors","cells","villages","personalFields","label","model","type","computed","maxDateOfBirth","today","Date","setFullYear","getFullYear","toISOString","split","mounted","loadProvinces","getUserIdFromEmail","loadCategoryTypes","methods","loadDistricts","loadSectors","loadCells","loadVillages","populateLocationData","handleTelephoneInput","event","value","target","replace","length","substring","token","localStorage","getItem","payload","JSON","parse","atob","email","res","fetch","headers","Authorization","json","ok","users_id","fetchProfile","fetchCurrentCategoryInfo","err","console","error","category_types_id","category_id","loadCategories","log","Object","keys","forEach","key","handleFileChange","field","files","handleSubmit","formData","FormData","append","method","body","$router","push"],"sources":["/Users/gentil/Desktop/Kozi-ai-agent/src/views/jobseeker/EditProfile.vue"],"sourcesContent":["<template>\n  <IndexComponent />\n  <div\n    class=\"page-wrapper\"\n    id=\"main-wrapper\"\n    data-layout=\"vertical\"\n    data-navbarbg=\"skin6\"\n    data-sidebartype=\"full\"\n    data-sidebar-description=\"fixed\"\n    data-header-description=\"fixed\"\n    style=\"position: absolute; top: 0; left: 0; right: 0; bottom: 0; z-index: 1;\"\n  >\n    <div class=\"body-wrapper\" style=\"margin-top: 70px; margin-left: 270px; background: white; min-height: calc(100vh - 70px); padding: 20px; overflow-y: auto; max-height: calc(100vh - 70px);\">\n      <div class=\"container-fluid\">\n        <h5 class=\"card-title fw-semibold mb-4\" style=\"color: #E960A6;\"><i class=\"ti ti-user-plus\"></i> Update Profile</h5>\n\n        <form @submit.prevent=\"handleSubmit\" class=\"mx-4\">\n        \n        <div class=\"form-group row\">\n          <div class=\"col-12 col-md-6\" v-for=\"(field, index) in personalFields\" :key=\"index\">\n            <label :for=\"field.model\" class=\"form-label\">{{ field.label }}</label>\n            <input\n              v-if=\"field.model === 'telephone'\"\n              type=\"tel\"\n              v-model=\"form[field.model]\"\n              class=\"form-control\"\n              :id=\"field.model\"\n              @input=\"handleTelephoneInput\"\n              maxlength=\"12\"\n              pattern=\"[0-9]*\"\n              inputmode=\"numeric\"\n              placeholder=\"Enter phone number\"\n              required\n            />\n            <input\n              v-else\n              :type=\"field.type\"\n              v-model=\"form[field.model]\"\n              class=\"form-control\"\n              :id=\"field.model\"\n              :max=\"field.model === 'date_of_birth' ? maxDateOfBirth : null\"\n              required\n            />\n          </div>\n\n          <div class=\"col-12 col-md-6\">\n            <label class=\"form-label\">Gender</label>\n            <select v-model=\"form.gender\" class=\"form-control\"  style=\"height: 48px; padding-top: 8px; padding-bottom: 8px;\" required>\n              <option disabled value=\"\">Choose Gender</option>\n              <option>Male</option>\n              <option>Female</option>\n              <option>Other</option>\n            </select>\n          </div>\n\n          <!-- Location Selectors -->\n          <div class=\"col-12 col-md-6\">\n            <label class=\"form-label\">Province</label>\n            <select v-model=\"form.province\" @change=\"loadDistricts\" class=\"form-control\" style=\"height: 48px; padding-top: 8px; padding-bottom: 8px;\" required>\n              <option disabled value=\"\">Select Province</option>\n              <option v-for=\"province in provinces\" :key=\"province\" :value=\"province\">{{ province }}</option>\n            </select>\n          </div>\n\n          <div class=\"col-12 col-md-6\">\n            <label class=\"form-label\">District</label>\n            <select v-model=\"form.district\" @change=\"loadSectors\" :disabled=\"!form.province\" class=\"form-control\" style=\"height: 48px; padding-top: 8px; padding-bottom: 8px;\" required>\n              <option disabled value=\"\">Select District</option>\n              <option v-for=\"district in districts\" :key=\"district\" :value=\"district\">{{ district }}</option>\n            </select>\n          </div>\n\n          <div class=\"col-12 col-md-6\">\n            <label class=\"form-label\">Sector</label>\n            <select v-model=\"form.sector\" @change=\"loadCells\" :disabled=\"!form.district\" class=\"form-control\" style=\"height: 48px; padding-top: 8px; padding-bottom: 8px;\" required>\n              <option disabled value=\"\">Select Sector</option>\n              <option v-for=\"sector in sectors\" :key=\"sector\" :value=\"sector\">{{ sector }}</option>\n            </select>\n          </div>\n\n          <div class=\"col-12 col-md-6\">\n            <label class=\"form-label\">Cell</label>\n            <select v-model=\"form.cell\" @change=\"loadVillages\" :disabled=\"!form.sector\" class=\"form-control\" style=\"height: 48px; padding-top: 8px; padding-bottom: 8px;\" required>\n              <option disabled value=\"\">Select Cell</option>\n              <option v-for=\"cell in cells\" :key=\"cell\" :value=\"cell\">{{ cell }}</option>\n            </select>\n          </div>\n\n          <div class=\"col-12 col-md-6\">\n            <label class=\"form-label\">Village</label>\n            <select v-model=\"form.village\" :disabled=\"!form.cell\" class=\"form-control\" style=\"height: 48px; padding-top: 8px; padding-bottom: 8px;\" required>\n              <option disabled value=\"\">Select Village</option>\n              <option v-for=\"village in villages\" :key=\"village\" :value=\"village\">{{ village }}</option>\n            </select>\n          </div>\n\n          <div class=\"col-12 col-md-6\">\n            <label class=\"form-label\">Disability</label>\n            <select v-model=\"form.disability\" class=\"form-control\" style=\"height: 48px; padding-top: 8px; padding-bottom: 8px;\" required>\n              <option disabled value=\"\">Select Disability</option>\n              <option>None</option>\n              <option>Visual Impairment</option>\n              <option>Hearing Impairment</option>\n              <option>Physical Disability</option>\n              <option>Intellectual Disability</option>\n              <option>Mental Health Condition</option>\n              <option>Learning Disability</option>\n              <option>Speech and Language Disorder</option>\n              <option>Autism Spectrum Disorder</option>\n              <option>Chronic Illness (e.g. epilepsy, diabetes)</option>\n              <option>Neurological Disorder (e.g. cerebral palsy)</option>\n              <option>Albinism</option>\n              <option>Multiple Disabilities</option>\n              <option>Other</option>\n            </select>\n          </div>\n\n          <div class=\"col-12 col-md-6\">\n            <label class=\"form-label\">Expected Salary</label>\n            <select v-model=\"form.salary\" class=\"form-control\" style=\"height: 48px; padding-top: 8px; padding-bottom: 8px;\" required>\n              <option disabled value=\"\">Select Salary</option>\n              <option>35,000 Frw - 50,000 Frw</option>\n              <option>51,000 Frw - 80,000 Frw</option>\n              <option>81,000 Frw - 100,000 Frw</option>\n              <option>101,000 Frw - 150,000 Frw</option>\n             <option>150,001+ Frw</option>\n            </select>\n          </div>\n\n          <div class=\"col-12 col-md-6\">\n            <label class=\"form-label\">Category Type</label>\n            <select v-model=\"selectedCategoryType\" @change=\"loadCategories\" class=\"form-control\" style=\"height: 48px; padding-top: 8px; padding-bottom: 8px;\" required>\n              <option disabled value=\"\">Select Category Type</option>\n              <option v-for=\"type in categoryTypes\" :key=\"type.id\" :value=\"type.id\">{{ type.name }}</option>\n            </select>\n          </div>\n\n          <div class=\"col-12 col-md-6\">\n            <label class=\"form-label\">Category</label>\n            <select v-model=\"form.categories_id\" class=\"form-control\" style=\"height: 48px; padding-top: 8px; padding-bottom: 8px;\" required>\n              <option disabled value=\"\">Select Category</option>\n              <option v-for=\"cat in categories\" :key=\"cat.id\" :value=\"cat.id\">{{ cat.name }}</option>\n            </select>\n          </div>\n\n          <div class=\"col-12 col-md-6\">\n            <label class=\"form-label\">Upload ID Card</label>\n            <input \n              type=\"file\" \n              @change=\"handleFileChange('id', $event)\" \n              :required=\"!form.id_url\" \n              class=\"form-control\"\n            />\n            <small class=\"form-text text-muted\">Maximum file size: 1MB</small>\n            <div v-if=\"form.id_url\" class=\"mt-2\">\n              <a :href=\"form.id_url\" target=\"_blank\" class=\"btn btn-outline-secondary btn-sm\">View Current Id card</a>\n            </div>\n          </div>\n          <div class=\"col-12 col-md-6\">\n            <label class=\"form-label\">Upload Profile Image</label>\n            <input \n              type=\"file\" \n              @change=\"handleFileChange('image', $event)\" \n              :required=\"!form.image_url\" \n              class=\"form-control\" \n            />\n            <small class=\"form-text text-muted\">Maximum file size: 1MB</small>\n            <div v-if=\"form.image_url\" class=\"mt-2\">\n              <a :href=\"form.image_url\" target=\"_blank\" class=\"btn btn-outline-secondary btn-sm\">View Current Image</a>\n            </div>\n          </div>\n          <div class=\"col-12 col-md-6\">\n            <label class=\"form-label\">Upload CV(Optional)</label>\n            <input type=\"file\" @change=\"handleFileChange('cv', $event)\" class=\"form-control\" />\n            <small class=\"form-text text-muted\">Maximum file size: 1MB</small>\n            <div v-if=\"form.cv_url\" class=\"mt-2\">\n              <a :href=\"form.cv_url\" target=\"_blank\" class=\"btn btn-outline-secondary btn-sm\">View Current CV</a>\n            </div>\n          </div>\n          <div class=\"col-md-12\">\n            <label class=\"form-label\">Skills and capabilities</label>\n            <textarea v-model=\"form.bio\" class=\"form-control\"  style=\"height: 150px;\" required></textarea>\n          </div>\n        </div>\n        <div v-if=\"message\" :class=\"['alert', messageType]\">{{ message }}</div>\n        <button type=\"submit\" class=\"btn btn-primary mb-5\" :disabled=\"isSubmitting\">\n          <span v-if=\"isSubmitting\" class=\"spinner-border spinner-border-sm\" role=\"status\" aria-hidden=\"true\"></span>\n          <span v-if=\"isSubmitting\" class=\"ms-2\">Updating...</span>\n          <span v-else>Update Profile</span>\n        </button>\n        </form>\n      </div>\n    </div>\n  </div>\n</template>\n\n<script>\nimport { globalVariable } from \"@/global\";\nimport IndexComponent from \"./IndexComponent.vue\";\nimport {\n  getProvinces,\n  getDistrictsByProvince,\n  getSectorsByDistrict,\n  getCellsBySector,\n  getVillagesByCell\n} from 'rwanda-geo-structure';\n\nexport default {\n  name: \"ProfileComponent\",\n  components: { IndexComponent },\n  data() {\n    return {\n      isSubmitting: false,\n      form: {\n        first_name: \"\",\n        last_name: \"\",\n        gender: \"\",\n        fathers_name: \"\",\n        mothers_name: \"\",\n        telephone: \"\",\n        province: \"\",\n        district: \"\",\n        sector: \"\",\n        cell: \"\",\n        village: \"\",\n        bio: \"\",\n        salary: \"\",\n        date_of_birth: \"\",\n        disability: \"\",\n        cv: null,\n        id: null,\n        image: null,\n        categories_id: \"\",\n        id_url: null,\n        cv_url: null,\n        image_url: null,\n      },\n      uploadsUrl: `${globalVariable}/uploads/profile/`,\n      selectedCategoryType: \"\",\n      userId: \"\",\n      userEmail: \"\",\n      message: null,\n      messageType: null,\n      categoryTypes: [],\n      categories: [],\n      currentCategoryInfo: null,\n      \n      // Location data\n      provinces: [],\n      districts: [],\n      sectors: [],\n      cells: [],\n      villages: [],\n      \n      personalFields: [\n        { label: \"First Name\", model: \"first_name\", type: \"text\" },\n        { label: \"Last Name\", model: \"last_name\", type: \"text\" },\n        { label: \"Father's Name\", model: \"fathers_name\", type: \"text\" },\n        { label: \"Mother's Name\", model: \"mothers_name\", type: \"text\" },\n        { label: \"Date of Birth\", model: \"date_of_birth\", type: \"date\" },\n        { label: \"Telephone\", model: \"telephone\", type: \"tel\" },\n      ],\n    };\n  },\n  computed: {\n    maxDateOfBirth() {\n      const today = new Date();\n      today.setFullYear(today.getFullYear() - 18);\n      return today.toISOString().split(\"T\")[0];\n    },\n  },\n  mounted() {\n    this.loadProvinces();\n    this.getUserIdFromEmail();\n    this.loadCategoryTypes();\n  },\n  methods: {\n    // Location methods\n    loadProvinces() {\n      this.provinces = getProvinces();\n    },\n\n    loadDistricts() {\n      if (this.form.province) {\n        this.districts = getDistrictsByProvince(this.form.province);\n        // Reset dependent fields\n        this.sectors = [];\n        this.cells = [];\n        this.villages = [];\n        this.form.district = \"\";\n        this.form.sector = \"\";\n        this.form.cell = \"\";\n        this.form.village = \"\";\n      }\n    },\n\n    loadSectors() {\n      if (this.form.province && this.form.district) {\n        this.sectors = getSectorsByDistrict(this.form.province, this.form.district);\n        // Reset dependent fields\n        this.cells = [];\n        this.villages = [];\n        this.form.sector = \"\";\n        this.form.cell = \"\";\n        this.form.village = \"\";\n      }\n    },\n\n    loadCells() {\n      if (this.form.province && this.form.district && this.form.sector) {\n        this.cells = getCellsBySector(this.form.province, this.form.district, this.form.sector);\n        // Reset dependent fields\n        this.villages = [];\n        this.form.cell = \"\";\n        this.form.village = \"\";\n      }\n    },\n\n    loadVillages() {\n      if (this.form.province && this.form.district && this.form.sector && this.form.cell) {\n        this.villages = getVillagesByCell(this.form.province, this.form.district, this.form.sector, this.form.cell);\n        this.form.village = \"\";\n      }\n    },\n\n    // Method to populate location dropdowns when editing existing profile\n    async populateLocationData() {\n      if (this.form.province) {\n        this.districts = getDistrictsByProvince(this.form.province);\n        \n        if (this.form.district) {\n          this.sectors = getSectorsByDistrict(this.form.province, this.form.district);\n          \n          if (this.form.sector) {\n            this.cells = getCellsBySector(this.form.province, this.form.district, this.form.sector);\n            \n            if (this.form.cell) {\n              this.villages = getVillagesByCell(this.form.province, this.form.district, this.form.sector, this.form.cell);\n            }\n          }\n        }\n      }\n    },\n\n    handleTelephoneInput(event) {\n      // Remove any non-numeric characters\n      let value = event.target.value.replace(/\\D/g, '');\n      \n      // Limit to 12 digits\n      if (value.length > 12) {\n        value = value.substring(0, 12);\n      }\n      \n      // Update the form value\n      this.form.telephone = value;\n      \n      // Update the input field value\n      event.target.value = value;\n    },\n\n    async getUserIdFromEmail() {\n      const token = localStorage.getItem(\"employeeToken\");\n      if (!token) return;\n      try {\n        const payload = JSON.parse(atob(token.split(\".\")[1]));\n        this.userEmail = payload.email;\n        const res = await fetch(`${globalVariable}/get_user_id_by_email/${this.userEmail}`, {\n          headers: { Authorization: `Bearer ${token}` },\n        });\n        const data = await res.json();\n        if (res.ok) {\n          this.userId = data.users_id;\n          this.fetchProfile();\n          this.fetchCurrentCategoryInfo();\n        } else {\n          this.message = data.message || \"Unable to get user ID.\";\n          this.messageType = \"alert-danger\";\n        }\n      } catch (err) {\n        console.error(\"Error getting users_id:\", err);\n        this.message = \"Failed to fetch user ID.\";\n        this.messageType = \"alert-danger\";\n      }\n    },\n    \n    async fetchCurrentCategoryInfo() {\n      try {\n        const res = await fetch(`${globalVariable}/categoryandtype/${this.userId}`, {\n          headers: { Authorization: `Bearer ${localStorage.getItem(\"employeeToken\")}` },\n        });\n        const data = await res.json();\n        if (res.ok) {\n          this.currentCategoryInfo = data;\n          this.selectedCategoryType = data.category_types_id;\n          this.form.categories_id = data.category_id;\n          await this.loadCategories();\n        } else {\n          console.log(\"No current category found for user\");\n        }\n      } catch (err) {\n        console.error(\"Error fetching current category info:\", err);\n      }\n    },\n\n    async fetchProfile() {\n      try {\n        const res = await fetch(`${globalVariable}/seeker/view_profile/${this.userId}`, {\n          headers: { Authorization: `Bearer ${localStorage.getItem(\"employeeToken\")}` },\n        });\n        const data = await res.json();\n        if (res.ok) {\n          this.form.date_of_birth = data.date_of_birth ? data.date_of_birth.split(\"T\")[0] : \"\";\n          this.form.salary = data.salary || \"\";\n          Object.keys(this.form).forEach(key => {\n            if (key !== \"date_of_birth\" && key !== \"salary\") {\n              this.form[key] = data[key] || this.form[key];\n            }\n          });\n          this.form.id_url = data.id ? `${globalVariable}/uploads/profile/${data.id}` : null;\n          this.form.cv_url = data.cv ? `${globalVariable}/uploads/profile/${data.cv}` : null;\n          this.form.image_url = data.image ? `${globalVariable}/uploads/profile/${data.image}` : null;\n          \n          // Populate location data after form is loaded\n          await this.populateLocationData();\n        } else {\n          this.message = data.message || \"Failed to fetch profile\";\n          this.messageType = \"alert-danger\";\n        }\n      } catch (err) {\n        console.error(\"Error fetching profile:\", err);\n        this.message = \"Error loading profile.\";\n        this.messageType = \"alert-danger\";\n      }\n    },\n\n    async loadCategoryTypes() {\n      try {\n        const res = await fetch(`${globalVariable}/category-types`);\n        const data = await res.json();\n        this.categoryTypes = data;\n      } catch (error) {\n        console.error(\"Failed to load category types:\", error);\n      }\n    },\n\n    async loadCategories() {\n      try {\n        const res = await fetch(`${globalVariable}/categories/${this.selectedCategoryType}`);\n        const data = await res.json();\n        this.categories = data;\n        if (!this.currentCategoryInfo || this.currentCategoryInfo.category_types_id !== this.selectedCategoryType) {\n          this.form.categories_id = \"\";\n        }\n      } catch (error) {\n        console.error(\"Failed to load categories:\", error);\n      }\n    },\n\n    handleFileChange(field, event) {\n      this.form[field] = event.target.files[0];\n    },\n\n    async handleSubmit() {\n      this.isSubmitting = true;\n      \n      const formData = new FormData();\n      for (const key of [\n        \"first_name\", \"last_name\", \"gender\", \"fathers_name\", \"mothers_name\", \"telephone\",\n        \"province\", \"district\", \"sector\", \"cell\", \"village\", \"bio\", \"salary\",\n        \"date_of_birth\", \"disability\", \"categories_id\"\n      ]) {\n        formData.append(key, this.form[key]);\n      }\n      if (this.form.image) formData.append(\"image\", this.form.image);\n      if (this.form.id) formData.append(\"id\", this.form.id);\n      if (this.form.cv) formData.append(\"cv\", this.form.cv);\n      formData.append(\"is_editable\", 0);\n\n      try {\n        const res = await fetch(`${globalVariable}/seeker/update_profile/${this.userId}`, {\n          method: \"PUT\",\n          headers: {\n            Authorization: `Bearer ${localStorage.getItem(\"employeeToken\")}`,\n          },\n          body: formData,\n        });\n        const data = await res.json();\n        if (res.ok) {\n          this.message = \"Profile updated successfully.\";\n          this.$router.push('/dashboard/view-profile');\n          this.messageType = \"alert-success\";\n          await this.fetchProfile();\n          await this.fetchCurrentCategoryInfo();\n        } else {\n          this.message = data.message || \"Failed to update profile.\";\n          this.messageType = \"alert-danger\";\n        }\n      } catch (error) {\n        console.error(\"Error updating profile:\", error);\n        this.message = \"An error occurred during update.\";\n        this.messageType = \"alert-danger\";\n      } finally {\n        this.isSubmitting = false;\n      }\n    },\n  },\n};\n</script>\n\n    <style scoped>\n    .modal-overlay {\n       position: fixed;\n        top: 0;\n        left: 0;\n        width: 100%;\n        height: 100%;\n        background: rgba(0, 0, 0, 0.5);\n        display: flex;\n        justify-content: center;\n        align-items: center;\n        z-index: 1000;\n      }\n      \n      /* Modal content styling */\n      .modal-content {\n        background-color: white;\n        padding: 20px;\n        border-radius: 8px;\n        text-align: center;\n        width: 300px;\n      }\n    \n      .container-fluid {\n        max-width: 800px;\n        margin: auto;\n        padding: 20px;\n        background-color: #ffffff;\n        border-radius: 8px;\n        box-shadow: 0 8px 30px rgba(0, 0, 0, 0.2);\n      }\n      \n      h5 {\n        color: #333;\n        margin-bottom: 20px;\n      }\n      .custom-select {\n        width: 100%;\n        padding: 15px;\n        height: 50px;\n        border: 1px solid #ccc;\n        border-radius: 5px;\n        box-sizing: border-box;\n        transition: border-color 0.3s, box-shadow 0.3s;\n        font-size: 16px;\n  \n      }\n      .form-control {\n        width: 100%;\n        padding: 15px;\n        height: 50px;\n        border: 1px solid #ccc;\n        border-radius: 5px;\n        box-sizing: border-box;\n        transition: border-color 0.3s, box-shadow 0.3s;\n        font-size: 16px;\n      }\n      \n      .form-control:focus {\n        border-color: #E960A6;\n        box-shadow: 0 0 5px rgba(0, 123, 255, 0.5);\n        outline: none;\n      }\n      \n      .form-label {\n        font-weight: bold;\n        margin-bottom: 5px;\n        display: block;\n      }\n      \n      .btn-primary {\n        background-color: #E960A6;\n        color: white;\n        position: relative;\n      }\n      \n      .btn-primary:hover {\n        background-color: #E960A6;\n        color: teal;\n      }\n\n      .btn-primary:disabled {\n        background-color: #E960A6;\n        opacity: 0.7;\n        cursor: not-allowed;\n      }\n\n      .spinner-border-sm {\n        width: 1rem;\n        height: 1rem;\n      }\n      \n      .form-group {\n        margin-bottom: 15px;\n      }\n      \n      </style>"],"mappings":";;;;AAqMA,SAASA,cAAa,QAAS,UAAU;AACzC,OAAOC,cAAa,MAAO,sBAAsB;AACjD,SACEC,YAAY,EACZC,sBAAsB,EACtBC,oBAAoB,EACpBC,gBAAgB,EAChBC,iBAAgB,QACX,sBAAsB;AAE7B,eAAe;EACbC,IAAI,EAAE,kBAAkB;EACxBC,UAAU,EAAE;IAAEP;EAAe,CAAC;EAC9BQ,IAAIA,CAAA,EAAG;IACL,OAAO;MACLC,YAAY,EAAE,KAAK;MACnBC,IAAI,EAAE;QACJC,UAAU,EAAE,EAAE;QACdC,SAAS,EAAE,EAAE;QACbC,MAAM,EAAE,EAAE;QACVC,YAAY,EAAE,EAAE;QAChBC,YAAY,EAAE,EAAE;QAChBC,SAAS,EAAE,EAAE;QACbC,QAAQ,EAAE,EAAE;QACZC,QAAQ,EAAE,EAAE;QACZC,MAAM,EAAE,EAAE;QACVC,IAAI,EAAE,EAAE;QACRC,OAAO,EAAE,EAAE;QACXC,GAAG,EAAE,EAAE;QACPC,MAAM,EAAE,EAAE;QACVC,aAAa,EAAE,EAAE;QACjBC,UAAU,EAAE,EAAE;QACdC,EAAE,EAAE,IAAI;QACRC,EAAE,EAAE,IAAI;QACRC,KAAK,EAAE,IAAI;QACXC,aAAa,EAAE,EAAE;QACjBC,MAAM,EAAE,IAAI;QACZC,MAAM,EAAE,IAAI;QACZC,SAAS,EAAE;MACb,CAAC;MACDC,UAAU,EAAE,GAAGlC,cAAc,mBAAmB;MAChDmC,oBAAoB,EAAE,EAAE;MACxBC,MAAM,EAAE,EAAE;MACVC,SAAS,EAAE,EAAE;MACbC,OAAO,EAAE,IAAI;MACbC,WAAW,EAAE,IAAI;MACjBC,aAAa,EAAE,EAAE;MACjBC,UAAU,EAAE,EAAE;MACdC,mBAAmB,EAAE,IAAI;MAEzB;MACAC,SAAS,EAAE,EAAE;MACbC,SAAS,EAAE,EAAE;MACbC,OAAO,EAAE,EAAE;MACXC,KAAK,EAAE,EAAE;MACTC,QAAQ,EAAE,EAAE;MAEZC,cAAc,EAAE,CACd;QAAEC,KAAK,EAAE,YAAY;QAAEC,KAAK,EAAE,YAAY;QAAEC,IAAI,EAAE;MAAO,CAAC,EAC1D;QAAEF,KAAK,EAAE,WAAW;QAAEC,KAAK,EAAE,WAAW;QAAEC,IAAI,EAAE;MAAO,CAAC,EACxD;QAAEF,KAAK,EAAE,eAAe;QAAEC,KAAK,EAAE,cAAc;QAAEC,IAAI,EAAE;MAAO,CAAC,EAC/D;QAAEF,KAAK,EAAE,eAAe;QAAEC,KAAK,EAAE,cAAc;QAAEC,IAAI,EAAE;MAAO,CAAC,EAC/D;QAAEF,KAAK,EAAE,eAAe;QAAEC,KAAK,EAAE,eAAe;QAAEC,IAAI,EAAE;MAAO,CAAC,EAChE;QAAEF,KAAK,EAAE,WAAW;QAAEC,KAAK,EAAE,WAAW;QAAEC,IAAI,EAAE;MAAM,CAAC;IAE3D,CAAC;EACH,CAAC;EACDC,QAAQ,EAAE;IACRC,cAAcA,CAAA,EAAG;MACf,MAAMC,KAAI,GAAI,IAAIC,IAAI,CAAC,CAAC;MACxBD,KAAK,CAACE,WAAW,CAACF,KAAK,CAACG,WAAW,CAAC,IAAI,EAAE,CAAC;MAC3C,OAAOH,KAAK,CAACI,WAAW,CAAC,CAAC,CAACC,KAAK,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC;IAC1C;EACF,CAAC;EACDC,OAAOA,CAAA,EAAG;IACR,IAAI,CAACC,aAAa,CAAC,CAAC;IACpB,IAAI,CAACC,kBAAkB,CAAC,CAAC;IACzB,IAAI,CAACC,iBAAiB,CAAC,CAAC;EAC1B,CAAC;EACDC,OAAO,EAAE;IACP;IACAH,aAAaA,CAAA,EAAG;MACd,IAAI,CAAClB,SAAQ,GAAIzC,YAAY,CAAC,CAAC;IACjC,CAAC;IAED+D,aAAaA,CAAA,EAAG;MACd,IAAI,IAAI,CAACtD,IAAI,CAACO,QAAQ,EAAE;QACtB,IAAI,CAAC0B,SAAQ,GAAIzC,sBAAsB,CAAC,IAAI,CAACQ,IAAI,CAACO,QAAQ,CAAC;QAC3D;QACA,IAAI,CAAC2B,OAAM,GAAI,EAAE;QACjB,IAAI,CAACC,KAAI,GAAI,EAAE;QACf,IAAI,CAACC,QAAO,GAAI,EAAE;QAClB,IAAI,CAACpC,IAAI,CAACQ,QAAO,GAAI,EAAE;QACvB,IAAI,CAACR,IAAI,CAACS,MAAK,GAAI,EAAE;QACrB,IAAI,CAACT,IAAI,CAACU,IAAG,GAAI,EAAE;QACnB,IAAI,CAACV,IAAI,CAACW,OAAM,GAAI,EAAE;MACxB;IACF,CAAC;IAED4C,WAAWA,CAAA,EAAG;MACZ,IAAI,IAAI,CAACvD,IAAI,CAACO,QAAO,IAAK,IAAI,CAACP,IAAI,CAACQ,QAAQ,EAAE;QAC5C,IAAI,CAAC0B,OAAM,GAAIzC,oBAAoB,CAAC,IAAI,CAACO,IAAI,CAACO,QAAQ,EAAE,IAAI,CAACP,IAAI,CAACQ,QAAQ,CAAC;QAC3E;QACA,IAAI,CAAC2B,KAAI,GAAI,EAAE;QACf,IAAI,CAACC,QAAO,GAAI,EAAE;QAClB,IAAI,CAACpC,IAAI,CAACS,MAAK,GAAI,EAAE;QACrB,IAAI,CAACT,IAAI,CAACU,IAAG,GAAI,EAAE;QACnB,IAAI,CAACV,IAAI,CAACW,OAAM,GAAI,EAAE;MACxB;IACF,CAAC;IAED6C,SAASA,CAAA,EAAG;MACV,IAAI,IAAI,CAACxD,IAAI,CAACO,QAAO,IAAK,IAAI,CAACP,IAAI,CAACQ,QAAO,IAAK,IAAI,CAACR,IAAI,CAACS,MAAM,EAAE;QAChE,IAAI,CAAC0B,KAAI,GAAIzC,gBAAgB,CAAC,IAAI,CAACM,IAAI,CAACO,QAAQ,EAAE,IAAI,CAACP,IAAI,CAACQ,QAAQ,EAAE,IAAI,CAACR,IAAI,CAACS,MAAM,CAAC;QACvF;QACA,IAAI,CAAC2B,QAAO,GAAI,EAAE;QAClB,IAAI,CAACpC,IAAI,CAACU,IAAG,GAAI,EAAE;QACnB,IAAI,CAACV,IAAI,CAACW,OAAM,GAAI,EAAE;MACxB;IACF,CAAC;IAED8C,YAAYA,CAAA,EAAG;MACb,IAAI,IAAI,CAACzD,IAAI,CAACO,QAAO,IAAK,IAAI,CAACP,IAAI,CAACQ,QAAO,IAAK,IAAI,CAACR,IAAI,CAACS,MAAK,IAAK,IAAI,CAACT,IAAI,CAACU,IAAI,EAAE;QAClF,IAAI,CAAC0B,QAAO,GAAIzC,iBAAiB,CAAC,IAAI,CAACK,IAAI,CAACO,QAAQ,EAAE,IAAI,CAACP,IAAI,CAACQ,QAAQ,EAAE,IAAI,CAACR,IAAI,CAACS,MAAM,EAAE,IAAI,CAACT,IAAI,CAACU,IAAI,CAAC;QAC3G,IAAI,CAACV,IAAI,CAACW,OAAM,GAAI,EAAE;MACxB;IACF,CAAC;IAED;IACA,MAAM+C,oBAAoBA,CAAA,EAAG;MAC3B,IAAI,IAAI,CAAC1D,IAAI,CAACO,QAAQ,EAAE;QACtB,IAAI,CAAC0B,SAAQ,GAAIzC,sBAAsB,CAAC,IAAI,CAACQ,IAAI,CAACO,QAAQ,CAAC;QAE3D,IAAI,IAAI,CAACP,IAAI,CAACQ,QAAQ,EAAE;UACtB,IAAI,CAAC0B,OAAM,GAAIzC,oBAAoB,CAAC,IAAI,CAACO,IAAI,CAACO,QAAQ,EAAE,IAAI,CAACP,IAAI,CAACQ,QAAQ,CAAC;UAE3E,IAAI,IAAI,CAACR,IAAI,CAACS,MAAM,EAAE;YACpB,IAAI,CAAC0B,KAAI,GAAIzC,gBAAgB,CAAC,IAAI,CAACM,IAAI,CAACO,QAAQ,EAAE,IAAI,CAACP,IAAI,CAACQ,QAAQ,EAAE,IAAI,CAACR,IAAI,CAACS,MAAM,CAAC;YAEvF,IAAI,IAAI,CAACT,IAAI,CAACU,IAAI,EAAE;cAClB,IAAI,CAAC0B,QAAO,GAAIzC,iBAAiB,CAAC,IAAI,CAACK,IAAI,CAACO,QAAQ,EAAE,IAAI,CAACP,IAAI,CAACQ,QAAQ,EAAE,IAAI,CAACR,IAAI,CAACS,MAAM,EAAE,IAAI,CAACT,IAAI,CAACU,IAAI,CAAC;YAC7G;UACF;QACF;MACF;IACF,CAAC;IAEDiD,oBAAoBA,CAACC,KAAK,EAAE;MAC1B;MACA,IAAIC,KAAI,GAAID,KAAK,CAACE,MAAM,CAACD,KAAK,CAACE,OAAO,CAAC,KAAK,EAAE,EAAE,CAAC;;MAEjD;MACA,IAAIF,KAAK,CAACG,MAAK,GAAI,EAAE,EAAE;QACrBH,KAAI,GAAIA,KAAK,CAACI,SAAS,CAAC,CAAC,EAAE,EAAE,CAAC;MAChC;;MAEA;MACA,IAAI,CAACjE,IAAI,CAACM,SAAQ,GAAIuD,KAAK;;MAE3B;MACAD,KAAK,CAACE,MAAM,CAACD,KAAI,GAAIA,KAAK;IAC5B,CAAC;IAED,MAAMV,kBAAkBA,CAAA,EAAG;MACzB,MAAMe,KAAI,GAAIC,YAAY,CAACC,OAAO,CAAC,eAAe,CAAC;MACnD,IAAI,CAACF,KAAK,EAAE;MACZ,IAAI;QACF,MAAMG,OAAM,GAAIC,IAAI,CAACC,KAAK,CAACC,IAAI,CAACN,KAAK,CAAClB,KAAK,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;QACrD,IAAI,CAACtB,SAAQ,GAAI2C,OAAO,CAACI,KAAK;QAC9B,MAAMC,GAAE,GAAI,MAAMC,KAAK,CAAC,GAAGtF,cAAc,yBAAyB,IAAI,CAACqC,SAAS,EAAE,EAAE;UAClFkD,OAAO,EAAE;YAAEC,aAAa,EAAE,UAAUX,KAAK;UAAG;QAC9C,CAAC,CAAC;QACF,MAAMpE,IAAG,GAAI,MAAM4E,GAAG,CAACI,IAAI,CAAC,CAAC;QAC7B,IAAIJ,GAAG,CAACK,EAAE,EAAE;UACV,IAAI,CAACtD,MAAK,GAAI3B,IAAI,CAACkF,QAAQ;UAC3B,IAAI,CAACC,YAAY,CAAC,CAAC;UACnB,IAAI,CAACC,wBAAwB,CAAC,CAAC;QACjC,OAAO;UACL,IAAI,CAACvD,OAAM,GAAI7B,IAAI,CAAC6B,OAAM,IAAK,wBAAwB;UACvD,IAAI,CAACC,WAAU,GAAI,cAAc;QACnC;MACF,EAAE,OAAOuD,GAAG,EAAE;QACZC,OAAO,CAACC,KAAK,CAAC,yBAAyB,EAAEF,GAAG,CAAC;QAC7C,IAAI,CAACxD,OAAM,GAAI,0BAA0B;QACzC,IAAI,CAACC,WAAU,GAAI,cAAc;MACnC;IACF,CAAC;IAED,MAAMsD,wBAAwBA,CAAA,EAAG;MAC/B,IAAI;QACF,MAAMR,GAAE,GAAI,MAAMC,KAAK,CAAC,GAAGtF,cAAc,oBAAoB,IAAI,CAACoC,MAAM,EAAE,EAAE;UAC1EmD,OAAO,EAAE;YAAEC,aAAa,EAAE,UAAUV,YAAY,CAACC,OAAO,CAAC,eAAe,CAAC;UAAG;QAC9E,CAAC,CAAC;QACF,MAAMtE,IAAG,GAAI,MAAM4E,GAAG,CAACI,IAAI,CAAC,CAAC;QAC7B,IAAIJ,GAAG,CAACK,EAAE,EAAE;UACV,IAAI,CAAChD,mBAAkB,GAAIjC,IAAI;UAC/B,IAAI,CAAC0B,oBAAmB,GAAI1B,IAAI,CAACwF,iBAAiB;UAClD,IAAI,CAACtF,IAAI,CAACmB,aAAY,GAAIrB,IAAI,CAACyF,WAAW;UAC1C,MAAM,IAAI,CAACC,cAAc,CAAC,CAAC;QAC7B,OAAO;UACLJ,OAAO,CAACK,GAAG,CAAC,oCAAoC,CAAC;QACnD;MACF,EAAE,OAAON,GAAG,EAAE;QACZC,OAAO,CAACC,KAAK,CAAC,uCAAuC,EAAEF,GAAG,CAAC;MAC7D;IACF,CAAC;IAED,MAAMF,YAAYA,CAAA,EAAG;MACnB,IAAI;QACF,MAAMP,GAAE,GAAI,MAAMC,KAAK,CAAC,GAAGtF,cAAc,wBAAwB,IAAI,CAACoC,MAAM,EAAE,EAAE;UAC9EmD,OAAO,EAAE;YAAEC,aAAa,EAAE,UAAUV,YAAY,CAACC,OAAO,CAAC,eAAe,CAAC;UAAG;QAC9E,CAAC,CAAC;QACF,MAAMtE,IAAG,GAAI,MAAM4E,GAAG,CAACI,IAAI,CAAC,CAAC;QAC7B,IAAIJ,GAAG,CAACK,EAAE,EAAE;UACV,IAAI,CAAC/E,IAAI,CAACc,aAAY,GAAIhB,IAAI,CAACgB,aAAY,GAAIhB,IAAI,CAACgB,aAAa,CAACkC,KAAK,CAAC,GAAG,CAAC,CAAC,CAAC,IAAI,EAAE;UACpF,IAAI,CAAChD,IAAI,CAACa,MAAK,GAAIf,IAAI,CAACe,MAAK,IAAK,EAAE;UACpC6E,MAAM,CAACC,IAAI,CAAC,IAAI,CAAC3F,IAAI,CAAC,CAAC4F,OAAO,CAACC,GAAE,IAAK;YACpC,IAAIA,GAAE,KAAM,eAAc,IAAKA,GAAE,KAAM,QAAQ,EAAE;cAC/C,IAAI,CAAC7F,IAAI,CAAC6F,GAAG,IAAI/F,IAAI,CAAC+F,GAAG,KAAK,IAAI,CAAC7F,IAAI,CAAC6F,GAAG,CAAC;YAC9C;UACF,CAAC,CAAC;UACF,IAAI,CAAC7F,IAAI,CAACoB,MAAK,GAAItB,IAAI,CAACmB,EAAC,GAAI,GAAG5B,cAAc,oBAAoBS,IAAI,CAACmB,EAAE,EAAC,GAAI,IAAI;UAClF,IAAI,CAACjB,IAAI,CAACqB,MAAK,GAAIvB,IAAI,CAACkB,EAAC,GAAI,GAAG3B,cAAc,oBAAoBS,IAAI,CAACkB,EAAE,EAAC,GAAI,IAAI;UAClF,IAAI,CAAChB,IAAI,CAACsB,SAAQ,GAAIxB,IAAI,CAACoB,KAAI,GAAI,GAAG7B,cAAc,oBAAoBS,IAAI,CAACoB,KAAK,EAAC,GAAI,IAAI;;UAE3F;UACA,MAAM,IAAI,CAACwC,oBAAoB,CAAC,CAAC;QACnC,OAAO;UACL,IAAI,CAAC/B,OAAM,GAAI7B,IAAI,CAAC6B,OAAM,IAAK,yBAAyB;UACxD,IAAI,CAACC,WAAU,GAAI,cAAc;QACnC;MACF,EAAE,OAAOuD,GAAG,EAAE;QACZC,OAAO,CAACC,KAAK,CAAC,yBAAyB,EAAEF,GAAG,CAAC;QAC7C,IAAI,CAACxD,OAAM,GAAI,wBAAwB;QACvC,IAAI,CAACC,WAAU,GAAI,cAAc;MACnC;IACF,CAAC;IAED,MAAMwB,iBAAiBA,CAAA,EAAG;MACxB,IAAI;QACF,MAAMsB,GAAE,GAAI,MAAMC,KAAK,CAAC,GAAGtF,cAAc,iBAAiB,CAAC;QAC3D,MAAMS,IAAG,GAAI,MAAM4E,GAAG,CAACI,IAAI,CAAC,CAAC;QAC7B,IAAI,CAACjD,aAAY,GAAI/B,IAAI;MAC3B,EAAE,OAAOuF,KAAK,EAAE;QACdD,OAAO,CAACC,KAAK,CAAC,gCAAgC,EAAEA,KAAK,CAAC;MACxD;IACF,CAAC;IAED,MAAMG,cAAcA,CAAA,EAAG;MACrB,IAAI;QACF,MAAMd,GAAE,GAAI,MAAMC,KAAK,CAAC,GAAGtF,cAAc,eAAe,IAAI,CAACmC,oBAAoB,EAAE,CAAC;QACpF,MAAM1B,IAAG,GAAI,MAAM4E,GAAG,CAACI,IAAI,CAAC,CAAC;QAC7B,IAAI,CAAChD,UAAS,GAAIhC,IAAI;QACtB,IAAI,CAAC,IAAI,CAACiC,mBAAkB,IAAK,IAAI,CAACA,mBAAmB,CAACuD,iBAAgB,KAAM,IAAI,CAAC9D,oBAAoB,EAAE;UACzG,IAAI,CAACxB,IAAI,CAACmB,aAAY,GAAI,EAAE;QAC9B;MACF,EAAE,OAAOkE,KAAK,EAAE;QACdD,OAAO,CAACC,KAAK,CAAC,4BAA4B,EAAEA,KAAK,CAAC;MACpD;IACF,CAAC;IAEDS,gBAAgBA,CAACC,KAAK,EAAEnC,KAAK,EAAE;MAC7B,IAAI,CAAC5D,IAAI,CAAC+F,KAAK,IAAInC,KAAK,CAACE,MAAM,CAACkC,KAAK,CAAC,CAAC,CAAC;IAC1C,CAAC;IAED,MAAMC,YAAYA,CAAA,EAAG;MACnB,IAAI,CAAClG,YAAW,GAAI,IAAI;MAExB,MAAMmG,QAAO,GAAI,IAAIC,QAAQ,CAAC,CAAC;MAC/B,KAAK,MAAMN,GAAE,IAAK,CAChB,YAAY,EAAE,WAAW,EAAE,QAAQ,EAAE,cAAc,EAAE,cAAc,EAAE,WAAW,EAChF,UAAU,EAAE,UAAU,EAAE,QAAQ,EAAE,MAAM,EAAE,SAAS,EAAE,KAAK,EAAE,QAAQ,EACpE,eAAe,EAAE,YAAY,EAAE,eAAc,CAC9C,EAAE;QACDK,QAAQ,CAACE,MAAM,CAACP,GAAG,EAAE,IAAI,CAAC7F,IAAI,CAAC6F,GAAG,CAAC,CAAC;MACtC;MACA,IAAI,IAAI,CAAC7F,IAAI,CAACkB,KAAK,EAAEgF,QAAQ,CAACE,MAAM,CAAC,OAAO,EAAE,IAAI,CAACpG,IAAI,CAACkB,KAAK,CAAC;MAC9D,IAAI,IAAI,CAAClB,IAAI,CAACiB,EAAE,EAAEiF,QAAQ,CAACE,MAAM,CAAC,IAAI,EAAE,IAAI,CAACpG,IAAI,CAACiB,EAAE,CAAC;MACrD,IAAI,IAAI,CAACjB,IAAI,CAACgB,EAAE,EAAEkF,QAAQ,CAACE,MAAM,CAAC,IAAI,EAAE,IAAI,CAACpG,IAAI,CAACgB,EAAE,CAAC;MACrDkF,QAAQ,CAACE,MAAM,CAAC,aAAa,EAAE,CAAC,CAAC;MAEjC,IAAI;QACF,MAAM1B,GAAE,GAAI,MAAMC,KAAK,CAAC,GAAGtF,cAAc,0BAA0B,IAAI,CAACoC,MAAM,EAAE,EAAE;UAChF4E,MAAM,EAAE,KAAK;UACbzB,OAAO,EAAE;YACPC,aAAa,EAAE,UAAUV,YAAY,CAACC,OAAO,CAAC,eAAe,CAAC;UAChE,CAAC;UACDkC,IAAI,EAAEJ;QACR,CAAC,CAAC;QACF,MAAMpG,IAAG,GAAI,MAAM4E,GAAG,CAACI,IAAI,CAAC,CAAC;QAC7B,IAAIJ,GAAG,CAACK,EAAE,EAAE;UACV,IAAI,CAACpD,OAAM,GAAI,+BAA+B;UAC9C,IAAI,CAAC4E,OAAO,CAACC,IAAI,CAAC,yBAAyB,CAAC;UAC5C,IAAI,CAAC5E,WAAU,GAAI,eAAe;UAClC,MAAM,IAAI,CAACqD,YAAY,CAAC,CAAC;UACzB,MAAM,IAAI,CAACC,wBAAwB,CAAC,CAAC;QACvC,OAAO;UACL,IAAI,CAACvD,OAAM,GAAI7B,IAAI,CAAC6B,OAAM,IAAK,2BAA2B;UAC1D,IAAI,CAACC,WAAU,GAAI,cAAc;QACnC;MACF,EAAE,OAAOyD,KAAK,EAAE;QACdD,OAAO,CAACC,KAAK,CAAC,yBAAyB,EAAEA,KAAK,CAAC;QAC/C,IAAI,CAAC1D,OAAM,GAAI,kCAAkC;QACjD,IAAI,CAACC,WAAU,GAAI,cAAc;MACnC,UAAU;QACR,IAAI,CAAC7B,YAAW,GAAI,KAAK;MAC3B;IACF;EACF;AACF,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}