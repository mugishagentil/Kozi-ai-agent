{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport \"core-js/modules/web.dom-exception.stack.js\";\nimport { globalVariable } from \"@/global\";\nimport IndexComponent from \"./IndexComponent.vue\";\nimport { getProvinces, getDistrictsByProvince, getSectorsByDistrict, getCellsBySector, getVillagesByCell } from 'rwanda-geo-structure';\nexport default {\n  name: \"ProfileComponent\",\n  components: {\n    IndexComponent\n  },\n  data() {\n    return {\n      form: {\n        first_name: \"\",\n        last_name: \"\",\n        country: \"\",\n        category: \"\",\n        telephone: \"\",\n        province: \"\",\n        district: \"\",\n        sector: \"\",\n        cell: \"\",\n        village: \"\",\n        gender: \"\",\n        image: null,\n        image_url: \"\"\n      },\n      uploadsUrl: `${globalVariable}/uploads/profile/`,\n      userId: \"\",\n      userEmail: \"\",\n      message: null,\n      messageType: null,\n      isSubmitting: false,\n      // Location data arrays\n      provinces: [],\n      districts: [],\n      sectors: [],\n      cells: [],\n      villages: [],\n      // Field definitions for different categories\n      individualFields: [{\n        label: \"First Name\",\n        model: \"first_name\",\n        type: \"text\"\n      }, {\n        label: \"Last Name\",\n        model: \"last_name\",\n        type: \"text\"\n      }, {\n        label: \"Country\",\n        model: \"country\",\n        type: \"text\"\n      }, {\n        label: \"Telephone\",\n        model: \"telephone\",\n        type: \"text\"\n      }],\n      companyFields: [{\n        label: \"Company First Name\",\n        model: \"first_name\",\n        type: \"text\"\n      }, {\n        label: \"Company Last Name\",\n        model: \"last_name\",\n        type: \"text\"\n      }, {\n        label: \"Country\",\n        model: \"country\",\n        type: \"text\"\n      }, {\n        label: \"Telephone\",\n        model: \"telephone\",\n        type: \"text\"\n      }]\n    };\n  },\n  computed: {\n    currentFields() {\n      return this.form.category === 'Company' ? this.companyFields : this.individualFields;\n    },\n    uploadLabel() {\n      return this.form.category === 'Company' ? 'Upload Logo' : 'Upload Profile Image';\n    }\n  },\n  mounted() {\n    this.getUserIdFromEmail();\n    this.loadProvinces();\n  },\n  methods: {\n    handleCategoryChange() {\n      // Set gender to \"Other\" when Company is selected\n      if (this.form.category === 'Company') {\n        this.form.gender = 'Other';\n      } else {\n        // Reset gender when switching back to Individual (optional)\n        this.form.gender = '';\n      }\n    },\n    async getUserIdFromEmail() {\n      const token = localStorage.getItem(\"employerToken\");\n      if (!token) return;\n      try {\n        const payload = JSON.parse(atob(token.split(\".\")[1]));\n        this.userEmail = payload.email;\n        const res = await fetch(`${globalVariable}/get_user_id_by_email/${this.userEmail}`, {\n          headers: {\n            Authorization: `Bearer ${token}`\n          }\n        });\n        const data = await res.json();\n        if (res.ok) {\n          this.userId = data.users_id;\n          this.fetchProfile();\n        } else {\n          this.message = data.message || \"Unable to get user ID.\";\n          this.messageType = \"alert-danger\";\n        }\n      } catch (err) {\n        console.error(\"Error getting users_id:\", err);\n        this.message = \"Failed to fetch user ID.\";\n        this.messageType = \"alert-danger\";\n      }\n    },\n    async fetchProfile() {\n      try {\n        const res = await fetch(`${globalVariable}/provider/view_profile/${this.userId}`, {\n          headers: {\n            Authorization: `Bearer ${localStorage.getItem(\"employerToken\")}`\n          }\n        });\n        const data = await res.json();\n        if (res.ok) {\n          this.form = {\n            ...this.form,\n            ...data\n          };\n          // Check if image_url is returned from the backend\n          if (data.image_url) {\n            this.form.image_url = data.image_url;\n          }\n          // Load location data based on existing profile data\n          if (this.form.province) {\n            this.loadDistricts();\n          }\n          if (this.form.district) {\n            this.loadSectors();\n          }\n          if (this.form.sector) {\n            this.loadCells();\n          }\n          if (this.form.cell) {\n            this.loadVillages();\n          }\n        } else {\n          this.message = data.message || \"Failed to fetch profile\";\n          this.messageType = \"alert-danger\";\n        }\n      } catch (err) {\n        console.error(\"Error fetching profile:\", err);\n        this.message = \"Error loading profile.\";\n        this.messageType = \"alert-danger\";\n      }\n    },\n    // Location loading methods\n    loadProvinces() {\n      try {\n        this.provinces = getProvinces();\n      } catch (error) {\n        console.error(\"Error loading provinces:\", error);\n        this.message = \"Failed to load provinces.\";\n        this.messageType = \"alert-warning\";\n      }\n    },\n    loadDistricts() {\n      try {\n        if (this.form.province) {\n          this.districts = getDistrictsByProvince(this.form.province);\n          // Clear dependent fields if province changes\n          if (!this.districts.includes(this.form.district)) {\n            this.sectors = [];\n            this.cells = [];\n            this.villages = [];\n            this.form.district = \"\";\n            this.form.sector = \"\";\n            this.form.cell = \"\";\n            this.form.village = \"\";\n          }\n        }\n      } catch (error) {\n        console.error(\"Error loading districts:\", error);\n        this.message = \"Failed to load districts.\";\n        this.messageType = \"alert-warning\";\n      }\n    },\n    loadSectors() {\n      try {\n        if (this.form.province && this.form.district) {\n          this.sectors = getSectorsByDistrict(this.form.province, this.form.district);\n          // Clear dependent fields if district changes\n          if (!this.sectors.includes(this.form.sector)) {\n            this.cells = [];\n            this.villages = [];\n            this.form.sector = \"\";\n            this.form.cell = \"\";\n            this.form.village = \"\";\n          }\n        }\n      } catch (error) {\n        console.error(\"Error loading sectors:\", error);\n        this.message = \"Failed to load sectors.\";\n        this.messageType = \"alert-warning\";\n      }\n    },\n    loadCells() {\n      try {\n        if (this.form.province && this.form.district && this.form.sector) {\n          this.cells = getCellsBySector(this.form.province, this.form.district, this.form.sector);\n          // Clear dependent fields if sector changes\n          if (!this.cells.includes(this.form.cell)) {\n            this.villages = [];\n            this.form.cell = \"\";\n            this.form.village = \"\";\n          }\n        }\n      } catch (error) {\n        console.error(\"Error loading cells:\", error);\n        this.message = \"Failed to load cells.\";\n        this.messageType = \"alert-warning\";\n      }\n    },\n    loadVillages() {\n      try {\n        if (this.form.province && this.form.district && this.form.sector && this.form.cell) {\n          this.villages = getVillagesByCell(this.form.province, this.form.district, this.form.sector, this.form.cell);\n          // Clear village if cell changes\n          if (!this.villages.includes(this.form.village)) {\n            this.form.village = \"\";\n          }\n        }\n      } catch (error) {\n        console.error(\"Error loading villages:\", error);\n        this.message = \"Failed to load villages.\";\n        this.messageType = \"alert-warning\";\n      }\n    },\n    handleFileChange(fieldName, event) {\n      const file = event.target.files[0];\n      if (file) {\n        this.form[fieldName] = file;\n        this.form.image_url = URL.createObjectURL(file);\n      }\n    },\n    async handleSubmit() {\n      // Set loading state to true\n      this.isSubmitting = true;\n\n      // Clear any previous messages\n      this.message = null;\n      this.messageType = null;\n      const formData = new FormData();\n      for (const key in this.form) {\n        if (key === \"image\") {\n          if (this.form.image instanceof File) {\n            formData.append(\"image\", this.form.image); // send new image\n          } else {\n            // Do not append if it's just a string, instead send filename separately\n            formData.append(\"image_name\", this.form.image);\n          }\n        } else if (key !== \"image_url\") {\n          // Don't send image_url to backend\n          if (this.form[key] !== null && this.form[key] !== undefined) {\n            formData.append(key, this.form[key]);\n          }\n        }\n      }\n      try {\n        const response = await fetch(`${globalVariable}/provider/update_profile/${this.userId}`, {\n          method: \"PUT\",\n          headers: {\n            Authorization: `Bearer ${localStorage.getItem(\"employerToken\")}`\n          },\n          body: formData\n        });\n        const result = await response.json();\n        if (response.ok) {\n          this.message = result.message;\n          this.messageType = \"alert-success\";\n          this.$router.push('/employer/view-profile');\n          this.fetchProfile();\n        } else {\n          this.message = result.message || \"Failed to update profile.\";\n          this.messageType = \"alert-danger\";\n        }\n      } catch (error) {\n        console.error(\"Error updating profile:\", error);\n        this.message = \"An error occurred while updating profile.\";\n        this.messageType = \"alert-danger\";\n      } finally {\n        // Reset loading state\n        this.isSubmitting = false;\n      }\n    }\n  }\n};","map":{"version":3,"names":["globalVariable","IndexComponent","getProvinces","getDistrictsByProvince","getSectorsByDistrict","getCellsBySector","getVillagesByCell","name","components","data","form","first_name","last_name","country","category","telephone","province","district","sector","cell","village","gender","image","image_url","uploadsUrl","userId","userEmail","message","messageType","isSubmitting","provinces","districts","sectors","cells","villages","individualFields","label","model","type","companyFields","computed","currentFields","uploadLabel","mounted","getUserIdFromEmail","loadProvinces","methods","handleCategoryChange","token","localStorage","getItem","payload","JSON","parse","atob","split","email","res","fetch","headers","Authorization","json","ok","users_id","fetchProfile","err","console","error","loadDistricts","loadSectors","loadCells","loadVillages","includes","handleFileChange","fieldName","event","file","target","files","URL","createObjectURL","handleSubmit","formData","FormData","key","File","append","undefined","response","method","body","result","$router","push"],"sources":["/Users/gentil/Desktop/Kozi-ai-agent/src/views/jobprovider/EditProfile.vue"],"sourcesContent":["<template>\n  <IndexComponent />\n  <div\n    class=\"page-wrapper\"\n    id=\"main-wrapper\"\n    data-layout=\"vertical\"\n    data-navbarbg=\"skin6\"\n    data-sidebartype=\"full\"\n    data-sidebar-description=\"fixed\"\n    data-header-description=\"fixed\"\n    style=\"position: absolute; top: 0; left: 0; right: 0; bottom: 0; z-index: 1;\"\n  >\n     <div class=\"body-wrapper\" style=\"margin-top: 70px; margin-left: 270px; background: white; min-height: calc(100vh - 70px); padding: 20px; overflow-y: auto; max-height: calc(100vh - 70px);\">\n     <h5 class=\"card-title fw-semibold mb-4\" style=\"color: #E960A6;\"><i class=\"ti ti-user-plus\"></i>  Update Profile</h5>\n\n      <form @submit.prevent=\"handleSubmit\" class=\"mx-4\" enctype=\"multipart/form-data\">\n        \n        <div class=\"form-group row\">\n          <div class=\"col-md-6\">\n            <label class=\"form-label\">Select Category</label>\n            <select v-model=\"form.category\" @change=\"handleCategoryChange\" class=\"form-control\" style=\"height: 54px;\" required>\n              <option value=\"Individual\">Individual</option>\n              <option value=\"Company\">Company</option>\n            </select>\n          </div>\n          <div class=\"col-md-6\" v-for=\"(field, index) in currentFields\" :key=\"index\">\n            <label :for=\"field.model\" class=\"form-label\">{{ field.label }}</label>\n            <input :type=\"field.type\" v-model=\"form[field.model]\" class=\"form-control\" :id=\"field.model\" required />\n          </div>\n          \n          <!-- Location Cascade Dropdowns -->\n          <div class=\"col-md-6\">\n            <label class=\"form-label\">Province</label>\n            <select v-model=\"form.province\" @change=\"loadDistricts\"  class=\"form-control\" style=\"height: 48px; padding-top: 8px; padding-bottom: 8px;\" required>\n              <option value=\"\">Select Province</option>\n              <option v-for=\"province in provinces\" :key=\"province\" :value=\"province\">{{ province }}</option>\n            </select>\n          </div>\n          \n          <div class=\"col-md-6\">\n            <label class=\"form-label\">District</label>\n            <select v-model=\"form.district\" @change=\"loadSectors\" class=\"form-control\" :disabled=\"!form.province\" style=\"height: 48px; padding-top: 8px; padding-bottom: 8px;\" required>\n              <option value=\"\">Select District</option>\n              <option v-for=\"district in districts\" :key=\"district\" :value=\"district\">{{ district }}</option>\n            </select>\n          </div>\n          \n          <div class=\"col-md-6\">\n            <label class=\"form-label\">Sector</label>\n            <select v-model=\"form.sector\" @change=\"loadCells\" class=\"form-control\" :disabled=\"!form.district\" style=\"height: 48px; padding-top: 8px; padding-bottom: 8px;\" required>\n              <option value=\"\">Select Sector</option>\n              <option v-for=\"sector in sectors\" :key=\"sector\" :value=\"sector\">{{ sector }}</option>\n            </select>\n          </div>\n          \n          <div class=\"col-md-6\">\n            <label class=\"form-label\">Cell</label>\n            <select v-model=\"form.cell\" @change=\"loadVillages\" class=\"form-control\" :disabled=\"!form.sector\" style=\"height: 48px; padding-top: 8px; padding-bottom: 8px;\" required>\n              <option value=\"\">Select Cell</option>\n              <option v-for=\"cell in cells\" :key=\"cell\" :value=\"cell\">{{ cell }}</option>\n            </select>\n          </div>\n          \n          <div class=\"col-md-6\">\n            <label class=\"form-label\">Village</label>\n            <select v-model=\"form.village\" class=\"form-control\" :disabled=\"!form.cell\" style=\"height: 48px; padding-top: 8px; padding-bottom: 8px;\" required>\n              <option value=\"\">Select Village</option>\n              <option v-for=\"village in villages\" :key=\"village\" :value=\"village\">{{ village }}</option>\n            </select>\n          </div>\n          \n          <div class=\"col-md-6 mt-3\">\n            <label class=\"form-label\">Gender</label>\n            <select v-model=\"form.gender\" class=\"form-control\" :disabled=\"form.category === 'Company'\" required>\n              <option value=\"Male\">Male</option>\n              <option value=\"Female\">Female</option>\n              <option value=\"Other\">Other</option>\n            </select>\n          </div>\n          \n          <div class=\"col-md-6 mt-3\">\n          <label class=\"form-label\">{{ uploadLabel }}</label>\n          <input type=\"file\" @change=\"handleFileChange('image', $event)\" class=\"form-control\" />\n           <small class=\"form-text text-muted\">Maximum file size: 1MB</small>\n          <!-- Show current image if available -->\n          <a :href=\"uploadsUrl + form.image\" target=\"_blank\" v-if=\"form.image && typeof form.image === 'string'\">\n              <img :src=\"uploadsUrl + form.image\" alt=\"Profile\" class=\"img-thumbnail\" width=\"250\" />\n            </a>\n            <!-- Show preview of new image -->\n            <img v-if=\"form.image_url\" :src=\"form.image_url\" alt=\"Profile Preview\" class=\"img-thumbnail\" width=\"250\" />\n            <br>    \n        </div>\n        </div>\n        <div v-if=\"message\" :class=\"['alert', messageType]\">{{ message }}</div>\n        <!-- Profile Image Display -->\n        <button type=\"submit\" class=\"btn btn-primary mb-5\" :disabled=\"isSubmitting\">\n          <span v-if=\"isSubmitting\" class=\"spinner-border spinner-border-sm me-2\" role=\"status\" aria-hidden=\"true\"></span>\n          {{ isSubmitting ? 'Updating Profile...' : 'Update Profile' }}\n        </button>\n      </form>\n    </div>\n  </div>\n</template>\n\n<script>\nimport { globalVariable } from \"@/global\";\nimport IndexComponent from \"./IndexComponent.vue\";\nimport {\n  getProvinces,\n  getDistrictsByProvince,\n  getSectorsByDistrict,\n  getCellsBySector,\n  getVillagesByCell\n} from 'rwanda-geo-structure';\n\n\nexport default {\n  name: \"ProfileComponent\",\n  components: { IndexComponent },\n  data() {\n    return {\n      form: {\n        first_name: \"\",\n        last_name: \"\",\n        country: \"\",\n        category: \"\",\n        telephone: \"\",\n        province: \"\",\n        district: \"\",\n        sector: \"\",\n        cell: \"\",\n        village: \"\",\n        gender: \"\",\n        image: null,\n        image_url: \"\",  \n      },\n      uploadsUrl: `${globalVariable}/uploads/profile/`,\n      userId: \"\",\n      userEmail: \"\",\n      message: null,\n      messageType: null,\n      isSubmitting: false,\n      // Location data arrays\n      provinces: [],\n      districts: [],\n      sectors: [],\n      cells: [],\n      villages: [],\n      // Field definitions for different categories\n      individualFields: [\n        { label: \"First Name\", model: \"first_name\", type: \"text\" },\n        { label: \"Last Name\", model: \"last_name\", type: \"text\" },\n        { label: \"Country\", model: \"country\", type: \"text\" },\n        { label: \"Telephone\", model: \"telephone\", type: \"text\" }\n      ],\n      companyFields: [\n        { label: \"Company First Name\", model: \"first_name\", type: \"text\" },\n        { label: \"Company Last Name\", model: \"last_name\", type: \"text\" },\n        { label: \"Country\", model: \"country\", type: \"text\" },\n        { label: \"Telephone\", model: \"telephone\", type: \"text\" }\n      ],\n    };\n  },\n  computed: {\n    currentFields() {\n      return this.form.category === 'Company' ? this.companyFields : this.individualFields;\n    },\n    uploadLabel() {\n      return this.form.category === 'Company' ? 'Upload Logo' : 'Upload Profile Image';\n    }\n  },\n  mounted() {\n    this.getUserIdFromEmail();\n    this.loadProvinces();\n  },\n  methods: {\n    handleCategoryChange() {\n      // Set gender to \"Other\" when Company is selected\n      if (this.form.category === 'Company') {\n        this.form.gender = 'Other';\n      } else {\n        // Reset gender when switching back to Individual (optional)\n        this.form.gender = '';\n      }\n    },\n    \n    async getUserIdFromEmail() {\n      const token = localStorage.getItem(\"employerToken\");\n      if (!token) return;\n      try {\n        const payload = JSON.parse(atob(token.split(\".\")[1]));\n        this.userEmail = payload.email;\n        const res = await fetch(`${globalVariable}/get_user_id_by_email/${this.userEmail}`, {\n          headers: { Authorization: `Bearer ${token}` },\n        });\n        const data = await res.json();\n        if (res.ok) {\n          this.userId = data.users_id;\n          this.fetchProfile();\n        } else {\n          this.message = data.message || \"Unable to get user ID.\";\n          this.messageType = \"alert-danger\";\n        }\n      } catch (err) {\n        console.error(\"Error getting users_id:\", err);\n        this.message = \"Failed to fetch user ID.\";\n        this.messageType = \"alert-danger\";\n      }\n    },\n    \n    async fetchProfile() {\n      try {\n        const res = await fetch(`${globalVariable}/provider/view_profile/${this.userId}`, {\n          headers: { Authorization: `Bearer ${localStorage.getItem(\"employerToken\")}` },\n        });\n        const data = await res.json();\n        if (res.ok) {\n          this.form = { ...this.form, ...data };\n          // Check if image_url is returned from the backend\n          if (data.image_url) {\n            this.form.image_url = data.image_url;\n          }\n          // Load location data based on existing profile data\n          if (this.form.province) {\n            this.loadDistricts();\n          }\n          if (this.form.district) {\n            this.loadSectors();\n          }\n          if (this.form.sector) {\n            this.loadCells();\n          }\n          if (this.form.cell) {\n            this.loadVillages();\n          }\n        } else {\n          this.message = data.message || \"Failed to fetch profile\";\n          this.messageType = \"alert-danger\";\n        }\n      } catch (err) {\n        console.error(\"Error fetching profile:\", err);\n        this.message = \"Error loading profile.\";\n        this.messageType = \"alert-danger\";\n      }\n    },\n\n    // Location loading methods\n    loadProvinces() {\n      try {\n        this.provinces = getProvinces();\n      } catch (error) {\n        console.error(\"Error loading provinces:\", error);\n        this.message = \"Failed to load provinces.\";\n        this.messageType = \"alert-warning\";\n      }\n    },\n    \n    loadDistricts() {\n      try {\n        if (this.form.province) {\n          this.districts = getDistrictsByProvince(this.form.province);\n          // Clear dependent fields if province changes\n          if (!this.districts.includes(this.form.district)) {\n            this.sectors = [];\n            this.cells = [];\n            this.villages = [];\n            this.form.district = \"\";\n            this.form.sector = \"\";\n            this.form.cell = \"\";\n            this.form.village = \"\";\n          }\n        }\n      } catch (error) {\n        console.error(\"Error loading districts:\", error);\n        this.message = \"Failed to load districts.\";\n        this.messageType = \"alert-warning\";\n      }\n    },\n    \n    loadSectors() {\n      try {\n        if (this.form.province && this.form.district) {\n          this.sectors = getSectorsByDistrict(this.form.province, this.form.district);\n          // Clear dependent fields if district changes\n          if (!this.sectors.includes(this.form.sector)) {\n            this.cells = [];\n            this.villages = [];\n            this.form.sector = \"\";\n            this.form.cell = \"\";\n            this.form.village = \"\";\n          }\n        }\n      } catch (error) {\n        console.error(\"Error loading sectors:\", error);\n        this.message = \"Failed to load sectors.\";\n        this.messageType = \"alert-warning\";\n      }\n    },\n    \n    loadCells() {\n      try {\n        if (this.form.province && this.form.district && this.form.sector) {\n          this.cells = getCellsBySector(this.form.province, this.form.district, this.form.sector);\n          // Clear dependent fields if sector changes\n          if (!this.cells.includes(this.form.cell)) {\n            this.villages = [];\n            this.form.cell = \"\";\n            this.form.village = \"\";\n          }\n        }\n      } catch (error) {\n        console.error(\"Error loading cells:\", error);\n        this.message = \"Failed to load cells.\";\n        this.messageType = \"alert-warning\";\n      }\n    },\n    \n    loadVillages() {\n      try {\n        if (this.form.province && this.form.district && this.form.sector && this.form.cell) {\n          this.villages = getVillagesByCell(this.form.province, this.form.district, this.form.sector, this.form.cell);\n          // Clear village if cell changes\n          if (!this.villages.includes(this.form.village)) {\n            this.form.village = \"\";\n          }\n        }\n      } catch (error) {\n        console.error(\"Error loading villages:\", error);\n        this.message = \"Failed to load villages.\";\n        this.messageType = \"alert-warning\";\n      }\n    },\n\n    handleFileChange(fieldName, event) {\n      const file = event.target.files[0];\n      if (file) {\n        this.form[fieldName] = file;\n        this.form.image_url = URL.createObjectURL(file); \n      }\n    },\n\n    async handleSubmit() {\n      // Set loading state to true\n      this.isSubmitting = true;\n      \n      // Clear any previous messages\n      this.message = null;\n      this.messageType = null;\n\n      const formData = new FormData();\n\n      for (const key in this.form) {\n        if (key === \"image\") {\n          if (this.form.image instanceof File) {\n            formData.append(\"image\", this.form.image); // send new image\n          } else {\n            // Do not append if it's just a string, instead send filename separately\n            formData.append(\"image_name\", this.form.image); \n          }\n        } else if (key !== \"image_url\") { // Don't send image_url to backend\n          if (this.form[key] !== null && this.form[key] !== undefined) {\n            formData.append(key, this.form[key]);\n          }\n        }\n      }\n\n      try {\n        const response = await fetch(`${globalVariable}/provider/update_profile/${this.userId}`, {\n          method: \"PUT\",\n          headers: {\n            Authorization: `Bearer ${localStorage.getItem(\"employerToken\")}`,\n          },\n          body: formData,\n        });\n\n        const result = await response.json();\n        if (response.ok) {\n          this.message = result.message;\n          this.messageType = \"alert-success\";\n          this.$router.push('/employer/view-profile');\n          this.fetchProfile();\n        } else {\n          this.message = result.message || \"Failed to update profile.\";\n          this.messageType = \"alert-danger\";\n        }\n      } catch (error) {\n        console.error(\"Error updating profile:\", error);\n        this.message = \"An error occurred while updating profile.\";\n        this.messageType = \"alert-danger\";\n      } finally {\n        // Reset loading state\n        this.isSubmitting = false;\n      }\n    },\n  },\n};\n</script>\n\n<style scoped>\n.modal-overlay {\n   position: fixed;\n    top: 0;\n    left: 0;\n    width: 100%;\n    height: 100%;\n    background: rgba(0, 0, 0, 0.5);\n    display: flex;\n    justify-content: center;\n    align-items: center;\n    z-index: 1000;\n  }\n  \n  /* Modal content styling */\n  .modal-content {\n    background-color: white;\n    padding: 20px;\n    border-radius: 8px;\n    text-align: center;\n    width: 300px;\n  }\n\n  .container-fluid {\n    max-width: 800px;\n    margin: auto;\n    padding: 20px;\n    background-color: #ffffff;\n    border-radius: 8px;\n    box-shadow: 0 8px 30px rgba(0, 0, 0, 0.2);\n  }\n  \n  h5 {\n    color: #333;\n    margin-bottom: 20px;\n  }\n  .custom-select {\n    width: 100%;\n    padding: 15px;\n    height: 50px;\n    border: 1px solid #ccc;\n    border-radius: 5px;\n    box-sizing: border-box;\n    transition: border-color 0.3s, box-shadow 0.3s;\n    font-size: 16px;\n\n  }\n  .form-control {\n    width: 100%;\n    padding: 15px;\n    height: 50px;\n    border: 1px solid #ccc;\n    border-radius: 5px;\n    box-sizing: border-box;\n    transition: border-color 0.3s, box-shadow 0.3s;\n    font-size: 16px;\n  }\n  \n  .form-control:focus {\n    border-color: #E960A6;\n    box-shadow: 0 0 5px rgba(0, 123, 255, 0.5);\n    outline: none;\n  }\n  \n  .form-label {\n    font-weight: bold;\n    margin-bottom: 5px;\n    display: block;\n  }\n  \n  .btn-primary {\n    background-color: #E960A6;\n    color: white;\n    transition: all 0.3s ease;\n    position: relative;\n  }\n  \n  .btn-primary:hover:not(:disabled) {\n    background-color: #d14d95;\n    color: white;\n  }\n  \n  .btn-primary:disabled {\n    background-color: #E960A6;\n    opacity: 0.7;\n    cursor: not-allowed;\n  }\n  \n  .form-group {\n    margin-bottom: 15px;\n  }\n  \n  /* Spinner animation */\n  .spinner-border {\n    width: 1rem;\n    height: 1rem;\n  }\n  \n  .me-2 {\n    margin-right: 0.5rem;\n  }\n</style>"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}