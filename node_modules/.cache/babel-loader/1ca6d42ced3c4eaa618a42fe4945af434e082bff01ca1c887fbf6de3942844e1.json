{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport \"core-js/modules/es.iterator.constructor.js\";\nimport \"core-js/modules/es.iterator.filter.js\";\nimport \"core-js/modules/web.dom-exception.stack.js\";\nimport IndexComponent from \"./IndexComponent.vue\";\nimport { globalVariable } from \"@/global\";\nexport default {\n  name: \"MainWrapper\",\n  components: {\n    IndexComponent\n  },\n  data() {\n    return {\n      uploadsUrl: globalVariable + \"/uploads/logo/\",\n      form: {\n        users_id: null,\n        job_title: \"\",\n        company: \"\",\n        deadline_date: \"\",\n        job_description: \"\",\n        logo: \"\",\n        location: \"\"\n      },\n      jobs: [],\n      isSubmitting: false,\n      status: {\n        success: false,\n        message: \"\"\n      },\n      userEmail: \"\",\n      userId: \"\",\n      showModal: false,\n      selectedAboutId: null,\n      // Search & Pagination\n      searchQuery: \"\",\n      currentPage: 1,\n      perPage: 20,\n      isLoading: true,\n      // Feedback functionality\n      selectedMessage: null,\n      showFeedbackModal: false,\n      isSubmittingFeedback: false,\n      feedbackForm: {\n        feedback: \"\"\n      },\n      feedbackStatus: {\n        success: false,\n        message: \"\"\n      }\n    };\n  },\n  computed: {\n    pagesToShow() {\n      const total = this.totalPages;\n      const current = this.currentPage;\n      const delta = 2; // how many pages to show before and after current\n      const range = [];\n      for (let i = Math.max(1, current - delta); i <= Math.min(total, current + delta); i++) {\n        range.push(i);\n      }\n      return range;\n    },\n    filteredJobs() {\n      const query = this.searchQuery.toLowerCase();\n      return this.jobs.filter(job => {\n        const fullName = `${job.first_name} ${job.last_name}`.toLowerCase();\n        return fullName.includes(query) || job.telephone.toLowerCase().includes(query);\n      });\n    },\n    displayedJobs() {\n      const start = (this.currentPage - 1) * this.perPage;\n      const end = start + this.perPage;\n      return this.filteredJobs.slice(start, end);\n    },\n    totalPages() {\n      return Math.ceil(this.filteredJobs.length / this.perPage);\n    }\n  },\n  watch: {\n    searchQuery() {\n      this.currentPage = 1;\n    }\n  },\n  mounted() {\n    this.userEmail = localStorage.getItem(\"userEmail\") || \"\";\n    if (this.userEmail) {\n      this.getUserIdFromEmail();\n    }\n  },\n  methods: {\n    changePage(page) {\n      if (page >= 1 && page <= this.totalPages) {\n        this.currentPage = page;\n      }\n    },\n    handleFileUpload(event) {\n      this.form.logo = event.target.files[0];\n    },\n    async fetchJobsByUser() {\n      this.isLoading = true;\n      try {\n        const token = localStorage.getItem(\"adminToken\");\n        if (!this.userId) return;\n        const res = await fetch(`${globalVariable}/admin/seekers_messages`, {\n          headers: {\n            Authorization: `Bearer ${token}`\n          }\n        });\n        if (!res.ok) throw new Error(\"Failed to fetch jobs\");\n        const data = await res.json();\n        this.jobs = data;\n      } catch (err) {\n        console.error(\"Error fetching jobs for user:\", err);\n      } finally {\n        this.isLoading = false;\n      }\n    },\n    async getUserIdFromEmail() {\n      const token = localStorage.getItem(\"adminToken\");\n      if (!token) return;\n      try {\n        const payload = JSON.parse(atob(token.split(\".\")[1]));\n        if (!this.userEmail) {\n          this.userEmail = payload.email;\n        }\n        const res = await fetch(`${globalVariable}/get_user_id_by_email/${this.userEmail}`, {\n          headers: {\n            Authorization: `Bearer ${token}`\n          }\n        });\n        const data = await res.json();\n        if (res.ok) {\n          this.userId = data.users_id;\n          this.fetchJobsByUser();\n        } else {\n          this.status = {\n            success: false,\n            message: data.message || \"Unable to get user ID.\"\n          };\n        }\n      } catch (err) {\n        console.error(\"Error getting users_id:\", err);\n        this.status = {\n          success: false,\n          message: \"Failed to fetch user ID.\"\n        };\n      }\n    },\n    formatDateTime(datetime) {\n      if (!datetime) return '';\n      const date = new Date(datetime);\n      const year = date.getFullYear();\n      const month = String(date.getMonth() + 1).padStart(2, '0');\n      const day = String(date.getDate()).padStart(2, '0');\n      let hours = date.getHours();\n      const minutes = String(date.getMinutes()).padStart(2, '0');\n      const seconds = String(date.getSeconds()).padStart(2, '0');\n      const ampm = hours >= 12 ? 'PM' : 'AM';\n      hours = hours % 12 || 12;\n      return `${year}-${month}-${day} ${String(hours).padStart(2, '0')}:${minutes}:${seconds} ${ampm}`;\n    },\n    // Feedback Methods\n    openFeedbackModal(message) {\n      this.selectedMessage = {\n        ...message\n      };\n      this.feedbackForm.feedback = message.feedback || \"\";\n      this.showFeedbackModal = true;\n      this.clearFeedbackStatus();\n\n      // Prevent body scroll when modal is open\n      document.body.style.overflow = 'hidden';\n    },\n    closeFeedbackModal() {\n      this.selectedMessage = null;\n      this.feedbackForm.feedback = \"\";\n      this.showFeedbackModal = false;\n      this.clearFeedbackStatus();\n\n      // Restore body scroll\n      document.body.style.overflow = 'auto';\n    },\n    async saveFeedback() {\n      if (!this.feedbackForm.feedback.trim()) {\n        this.feedbackStatus = {\n          success: false,\n          message: \"Please enter feedback before saving.\"\n        };\n        return;\n      }\n      if (!this.selectedMessage) {\n        this.feedbackStatus = {\n          success: false,\n          message: \"No message selected.\"\n        };\n        return;\n      }\n      this.isSubmittingFeedback = true;\n      try {\n        const token = localStorage.getItem(\"adminToken\");\n        const response = await fetch(`${globalVariable}/admin/feedback_update/${this.selectedMessage.message_id}`, {\n          method: 'PUT',\n          headers: {\n            'Content-Type': 'application/json',\n            'Authorization': `Bearer ${token}`\n          },\n          body: JSON.stringify({\n            feedback: this.feedbackForm.feedback,\n            feedback_made_by: this.userEmail\n          })\n        });\n        const data = await response.json();\n        if (response.ok) {\n          // Update the local job data\n          const jobIndex = this.jobs.findIndex(job => job.message_id === this.selectedMessage.message_id);\n          if (jobIndex !== -1) {\n            this.jobs[jobIndex].feedback = this.feedbackForm.feedback;\n            this.jobs[jobIndex].feedback_made_by = this.userEmail;\n          }\n          this.feedbackStatus = {\n            success: true,\n            message: \"Feedback saved successfully!\"\n          };\n\n          // Close modal after a brief delay to show success message\n          setTimeout(() => {\n            this.closeFeedbackModal();\n            // Clear success message after closing modal\n            setTimeout(() => {\n              this.clearFeedbackStatus();\n            }, 3000);\n          }, 1500);\n        } else {\n          this.feedbackStatus = {\n            success: false,\n            message: data.message || \"Failed to save feedback.\"\n          };\n        }\n      } catch (error) {\n        console.error(\"Error saving feedback:\", error);\n        this.feedbackStatus = {\n          success: false,\n          message: \"An error occurred while saving feedback.\"\n        };\n      } finally {\n        this.isSubmittingFeedback = false;\n      }\n    },\n    clearFeedbackStatus() {\n      this.feedbackStatus = {\n        success: false,\n        message: \"\"\n      };\n    }\n  }\n};","map":{"version":3,"names":["IndexComponent","globalVariable","name","components","data","uploadsUrl","form","users_id","job_title","company","deadline_date","job_description","logo","location","jobs","isSubmitting","status","success","message","userEmail","userId","showModal","selectedAboutId","searchQuery","currentPage","perPage","isLoading","selectedMessage","showFeedbackModal","isSubmittingFeedback","feedbackForm","feedback","feedbackStatus","computed","pagesToShow","total","totalPages","current","delta","range","i","Math","max","min","push","filteredJobs","query","toLowerCase","filter","job","fullName","first_name","last_name","includes","telephone","displayedJobs","start","end","slice","ceil","length","watch","mounted","localStorage","getItem","getUserIdFromEmail","methods","changePage","page","handleFileUpload","event","target","files","fetchJobsByUser","token","res","fetch","headers","Authorization","ok","Error","json","err","console","error","payload","JSON","parse","atob","split","email","formatDateTime","datetime","date","Date","year","getFullYear","month","String","getMonth","padStart","day","getDate","hours","getHours","minutes","getMinutes","seconds","getSeconds","ampm","openFeedbackModal","clearFeedbackStatus","document","body","style","overflow","closeFeedbackModal","saveFeedback","trim","response","message_id","method","stringify","feedback_made_by","jobIndex","findIndex","setTimeout"],"sources":["/Users/gentil/Desktop/Kozi-ai-agent/src/views/admin/OpenTicket.vue"],"sourcesContent":["<template>\n  <IndexComponent />\n  <div\n    class=\"page-wrapper\"\n    id=\"main-wrapper\"\n    data-layout=\"vertical\"\n    data-navbarbg=\"skin6\"\n    data-sidebartype=\"full\"\n    data-sidebar-description=\"fixed\"\n    data-header-description=\"fixed\"\n  >\n    <div class=\"body-wrapper\">\n      <!-- <h5 class=\"text-center\">Logged in as:</h5>\n      <h6 class=\"text-center text-muted\">{{ userEmail }}</h6>\n      <h6 class=\"text-center text-muted\">{{ userId}}</h6>\n      <h6 class=\"text-center text-muted\">{{  userIdurl}}</h6> -->\n      <h5 class=\"card-title fw-semibold mb-4\" style=\"color: #E960A6;\">\n        <i class=\"ti ti-user-plus\"></i> Open Ticket\n      </h5>\n\n      <!-- Search Input -->\n      <div class=\"d-flex justify-content-center mb-3\">\n        <input\n          v-model=\"searchQuery\"\n          type=\"text\"\n          class=\"form-control\"\n          style=\"max-width: 550px\"\n          placeholder=\"Search by name or telephone...\"\n        />\n      </div>\n      \n      <!-- Loading Spinner -->\n      <div v-if=\"isLoading\" class=\"d-flex justify-content-center my-5\">\n        <div class=\"text-center\">\n          <div\n            class=\"spinner-border text-primary\"\n            role=\"status\"\n            style=\"width: 3rem; height: 3rem;\"\n          >\n            <span class=\"visually-hidden\">Loading...</span>\n          </div>\n          <div class=\"mt-2\">\n            <p class=\"text-muted\">Loading tickets...</p>\n          </div>\n        </div>\n      </div>\n\n      <!-- No tickets found -->\n      <div v-if=\"!isLoading && filteredJobs.length === 0\" class=\"d-flex justify-content-center my-4\">\n        <div class=\"alert alert-danger text-center\" style=\"width: 40rem;\">\n          No Open Ticket found.\n        </div>\n      </div>\n\n      <!-- Tickets Table -->\n      <div v-else-if=\"!isLoading\" class=\"table-responsive\">\n        <table class=\"table table-bordered\">\n          <thead class=\"table-light\">\n            <tr>\n              <th>ID</th>\n              <th>NAMES</th>\n              <th>MESSAGE</th>\n              <th>TELEPHONE</th>\n              <th>MESSAGE ON</th>\n              <th>FEEDBACK</th>\n              <th>FEEDBACK MADE BY</th>\n              <th>ACTIONS</th>\n            </tr>\n          </thead>\n          <tbody>\n            <tr v-for=\"(approved, index) in displayedJobs\" :key=\"approved.message_id\">\n              <td>{{ (currentPage - 1) * perPage + index + 1 }}</td>\n              <td>{{ approved.first_name }} {{ approved.last_name }}</td>\n              <td>{{ approved.message }}</td>\n              <td>{{ approved.telephone }}</td>\n              <td>{{ formatDateTime(approved.msg_created_at) }}</td>\n              <td>\n                <div class=\"feedback-text\" :title=\"approved.feedback\">\n                  {{ approved.feedback ? (approved.feedback.length > 50 ? approved.feedback.substring(0, 50) + '...' : approved.feedback) : 'No feedback yet' }}\n                </div>\n              </td>\n              <td>{{ approved.feedback_made_by || '-' }}</td>\n              \n              <td>\n                <button\n                  @click=\"openFeedbackModal(approved)\"\n                  class=\"btn btn-primary btn-sm\"\n                >\n                  <i class=\"ti ti-edit\"></i> \n                  {{ approved.feedback ? 'Edit' : 'Add' }} Feedback\n                </button>\n              </td>\n            </tr>\n          </tbody>\n        </table>\n      </div>\n\n      <!-- Pagination -->\n      <div v-if=\"!isLoading && totalPages > 1\" class=\"d-flex flex-column align-items-center my-3\">\n        <nav aria-label=\"Page navigation\">\n          <ul class=\"pagination\">\n            <li :class=\"['page-item', { disabled: currentPage === 1 }]\">\n              <button class=\"page-link\" @click=\"changePage(currentPage - 1)\">Previous</button>\n            </li>\n\n            <li\n              v-for=\"page in pagesToShow\"\n              :key=\"page\"\n              :class=\"['page-item', { active: currentPage === page }]\"\n            >\n              <button class=\"page-link\" @click=\"changePage(page)\">{{ page }}</button>\n            </li>\n\n            <li :class=\"['page-item', { disabled: currentPage === totalPages }]\">\n              <button class=\"page-link\" @click=\"changePage(currentPage + 1)\">Next</button>\n            </li>\n          </ul>\n        </nav>\n      </div>\n\n      <!-- Success/Error Messages -->\n      <div v-if=\"feedbackStatus.message\" class=\"alert\" :class=\"feedbackStatus.success ? 'alert-success' : 'alert-danger'\">\n        {{ feedbackStatus.message }}\n      </div>\n\n      <!-- Custom CSS Modal - Simplified -->\n      <div v-if=\"showFeedbackModal\" class=\"modal-overlay\" @click=\"closeFeedbackModal\">\n        <div class=\"feedback-modal\" @click.stop>\n          <div class=\"modal-header\">\n            <h3 class=\"modal-title\">\n              <i class=\"ti ti-message-circle\"></i>\n              {{ selectedMessage?.feedback ? 'Edit Feedback' : 'Add Feedback' }}\n            </h3>\n            <button class=\"close-btn\" @click=\"closeFeedbackModal\">&times;</button>\n          </div>\n\n          <div class=\"modal-body\">\n            <!-- Current Feedback (if exists) -->\n            <div v-if=\"selectedMessage?.feedback\" class=\"info-card current-feedback\">\n              <div class=\"card-header current\">\n                <h4><i class=\"ti ti-message-check\"></i> Current Feedback</h4>\n              </div>\n              <div class=\"card-content\">\n                <div class=\"current-feedback-text\">{{ selectedMessage.feedback }}</div>\n                <small class=\"feedback-author\">\n                  <i class=\"ti ti-user\"></i>\n                  By: {{ selectedMessage.feedback_made_by }}\n                </small>\n              </div>\n            </div>\n\n            <!-- Feedback Input -->\n            <div class=\"info-card feedback-input\">\n              <div class=\"card-header\" :class=\"selectedMessage?.feedback ? 'update' : 'new'\">\n                <h4>\n                  <i class=\"ti ti-edit\"></i>\n                  {{ selectedMessage?.feedback ? 'Update Feedback' : 'New Feedback' }}\n                </h4>\n              </div>\n              <div class=\"card-content\">\n                <div class=\"form-group\">\n                  <label class=\"form-label\">\n                    <strong>Your Feedback:</strong>\n                  </label>\n                  <textarea\n                    v-model=\"feedbackForm.feedback\"\n                    class=\"feedback-textarea\"\n                    rows=\"6\"\n                    placeholder=\"Enter your feedback for this message...\"\n                    :disabled=\"isSubmittingFeedback\"\n                  ></textarea>\n                  <div class=\"char-count\">\n                    Character count: {{ feedbackForm.feedback.length }}\n                  </div>\n                </div>\n                <div class=\"attribution-info\">\n                  <small>\n                    <i class=\"ti ti-info-circle\"></i>\n                    Feedback will be attributed to: <strong>{{ userEmail }}</strong>\n                  </small>\n                </div>\n              </div>\n            </div>\n          </div>\n\n          <div class=\"modal-footer\">\n            <button \n              class=\"btn btn-cancel\"\n              @click=\"closeFeedbackModal\"\n              :disabled=\"isSubmittingFeedback\"\n            >\n              <i class=\"ti ti-x\"></i>\n              Cancel\n            </button>\n            <button \n              class=\"btn btn-primary\"\n              @click=\"saveFeedback\"\n              :disabled=\"isSubmittingFeedback || !feedbackForm.feedback.trim()\"\n            >\n              <span v-if=\"isSubmittingFeedback\" class=\"spinner\"></span>\n              <i v-else class=\"ti ti-check\"></i>\n              {{ isSubmittingFeedback ? 'Saving...' : 'Save Feedback' }}\n            </button>\n          </div>\n        </div>\n      </div>\n    </div>\n  </div>\n</template>\n\n<script>\nimport IndexComponent from \"./IndexComponent.vue\";\nimport { globalVariable } from \"@/global\";\n\nexport default {\n  name: \"MainWrapper\",\n  components: { IndexComponent },\n  data() {\n    return {\n      uploadsUrl: globalVariable + \"/uploads/logo/\",\n      form: {\n        users_id: null,\n        job_title: \"\",\n        company: \"\",\n        deadline_date: \"\",\n        job_description: \"\",\n        logo: \"\",\n        location: \"\",\n      },\n      jobs: [],\n      isSubmitting: false,\n      status: {\n        success: false,\n        message: \"\",\n      },\n      userEmail: \"\",\n      userId: \"\",\n      showModal: false,\n      selectedAboutId: null,\n\n      // Search & Pagination\n      searchQuery: \"\",\n      currentPage: 1,\n      perPage: 20,\n      isLoading: true,\n\n      // Feedback functionality\n      selectedMessage: null,\n      showFeedbackModal: false,\n      isSubmittingFeedback: false,\n      feedbackForm: {\n        feedback: \"\",\n      },\n      feedbackStatus: {\n        success: false,\n        message: \"\",\n      },\n    };\n  },\n\n  computed: {\n    pagesToShow() {\n      const total = this.totalPages;\n      const current = this.currentPage;\n      const delta = 2; // how many pages to show before and after current\n      const range = [];\n\n      for (let i = Math.max(1, current - delta); i <= Math.min(total, current + delta); i++) {\n        range.push(i);\n      }\n\n      return range;\n    },\n    filteredJobs() {\n      const query = this.searchQuery.toLowerCase();\n      return this.jobs.filter((job) => {\n        const fullName = `${job.first_name} ${job.last_name}`.toLowerCase();\n        return (\n          fullName.includes(query) || job.telephone.toLowerCase().includes(query)\n        );\n      });\n    },\n    displayedJobs() {\n      const start = (this.currentPage - 1) * this.perPage;\n      const end = start + this.perPage;\n      return this.filteredJobs.slice(start, end);\n    },\n    totalPages() {\n      return Math.ceil(this.filteredJobs.length / this.perPage);\n    },\n  },\n\n  watch: {\n    searchQuery() {\n      this.currentPage = 1;\n    },\n  },\n\n  mounted() {\n    this.userEmail = localStorage.getItem(\"userEmail\") || \"\";\n    if (this.userEmail) {\n      this.getUserIdFromEmail();\n    }\n  },\n\n  methods: {\n    changePage(page) {\n      if (page >= 1 && page <= this.totalPages) {\n        this.currentPage = page;\n      }\n    },\n\n    handleFileUpload(event) {\n      this.form.logo = event.target.files[0];\n    },\n\n    async fetchJobsByUser() {\n      this.isLoading = true;\n      try {\n        const token = localStorage.getItem(\"adminToken\");\n        if (!this.userId) return;\n        const res = await fetch(`${globalVariable}/admin/seekers_messages`, {\n          headers: {\n            Authorization: `Bearer ${token}`,\n          },\n        });\n        if (!res.ok) throw new Error(\"Failed to fetch jobs\");\n        const data = await res.json();\n        this.jobs = data;\n      } catch (err) {\n        console.error(\"Error fetching jobs for user:\", err);\n      } finally {\n        this.isLoading = false;\n      }\n    },\n\n    async getUserIdFromEmail() {\n      const token = localStorage.getItem(\"adminToken\");\n      if (!token) return;\n      try {\n        const payload = JSON.parse(atob(token.split(\".\")[1]));\n        if (!this.userEmail) {\n          this.userEmail = payload.email;\n        }\n        const res = await fetch(`${globalVariable}/get_user_id_by_email/${this.userEmail}`, {\n          headers: { Authorization: `Bearer ${token}` },\n        });\n        const data = await res.json();\n        if (res.ok) {\n          this.userId = data.users_id;\n          this.fetchJobsByUser();\n        } else {\n          this.status = {\n            success: false,\n            message: data.message || \"Unable to get user ID.\",\n          };\n        }\n      } catch (err) {\n        console.error(\"Error getting users_id:\", err);\n        this.status = {\n          success: false,\n          message: \"Failed to fetch user ID.\",\n        };\n      }\n    },\n\n    formatDateTime(datetime) {\n      if (!datetime) return '';\n      const date = new Date(datetime);\n      const year = date.getFullYear();\n      const month = String(date.getMonth() + 1).padStart(2, '0');\n      const day = String(date.getDate()).padStart(2, '0');\n      let hours = date.getHours();\n      const minutes = String(date.getMinutes()).padStart(2, '0');\n      const seconds = String(date.getSeconds()).padStart(2, '0');\n      const ampm = hours >= 12 ? 'PM' : 'AM';\n      hours = hours % 12 || 12;\n      return `${year}-${month}-${day} ${String(hours).padStart(2, '0')}:${minutes}:${seconds} ${ampm}`;\n    },\n\n    // Feedback Methods\n    openFeedbackModal(message) {\n      this.selectedMessage = { ...message };\n      this.feedbackForm.feedback = message.feedback || \"\";\n      this.showFeedbackModal = true;\n      this.clearFeedbackStatus();\n      \n      // Prevent body scroll when modal is open\n      document.body.style.overflow = 'hidden';\n    },\n\n    closeFeedbackModal() {\n      this.selectedMessage = null;\n      this.feedbackForm.feedback = \"\";\n      this.showFeedbackModal = false;\n      this.clearFeedbackStatus();\n      \n      // Restore body scroll\n      document.body.style.overflow = 'auto';\n    },\n\n    async saveFeedback() {\n      if (!this.feedbackForm.feedback.trim()) {\n        this.feedbackStatus = {\n          success: false,\n          message: \"Please enter feedback before saving.\",\n        };\n        return;\n      }\n\n      if (!this.selectedMessage) {\n        this.feedbackStatus = {\n          success: false,\n          message: \"No message selected.\",\n        };\n        return;\n      }\n\n      this.isSubmittingFeedback = true;\n      try {\n        const token = localStorage.getItem(\"adminToken\");\n        const response = await fetch(`${globalVariable}/admin/feedback_update/${this.selectedMessage.message_id}`, {\n          method: 'PUT',\n          headers: {\n            'Content-Type': 'application/json',\n            'Authorization': `Bearer ${token}`,\n          },\n          body: JSON.stringify({\n            feedback: this.feedbackForm.feedback,\n            feedback_made_by: this.userEmail,\n          }),\n        });\n\n        const data = await response.json();\n\n        if (response.ok) {\n          // Update the local job data\n          const jobIndex = this.jobs.findIndex(job => job.message_id === this.selectedMessage.message_id);\n          if (jobIndex !== -1) {\n            this.jobs[jobIndex].feedback = this.feedbackForm.feedback;\n            this.jobs[jobIndex].feedback_made_by = this.userEmail;\n          }\n\n          this.feedbackStatus = {\n            success: true,\n            message: \"Feedback saved successfully!\",\n          };\n\n          // Close modal after a brief delay to show success message\n          setTimeout(() => {\n            this.closeFeedbackModal();\n            // Clear success message after closing modal\n            setTimeout(() => {\n              this.clearFeedbackStatus();\n            }, 3000);\n          }, 1500);\n        } else {\n          this.feedbackStatus = {\n            success: false,\n            message: data.message || \"Failed to save feedback.\",\n          };\n        }\n      } catch (error) {\n        console.error(\"Error saving feedback:\", error);\n        this.feedbackStatus = {\n          success: false,\n          message: \"An error occurred while saving feedback.\",\n        };\n      } finally {\n        this.isSubmittingFeedback = false;\n      }\n    },\n\n    clearFeedbackStatus() {\n      this.feedbackStatus = {\n        success: false,\n        message: \"\",\n      };\n    },\n  },\n};\n</script>\n\n<style scoped>\n.page-item.active .page-link {\n  background-color: #E960A6;\n  color: white;\n  border-color: #E960A6;\n}\n\n.page-link {\n  border-radius: 4px;\n  padding: 0.4rem 0.75rem;\n  cursor: pointer;\n  color:#336Cb6\n}\n\n/* Custom Modal Styles */\n.modal-overlay {\n  position: fixed;\n  top: 0;\n  left: 0;\n  width: 100%;\n  height: 100%;\n  background: rgba(0, 0, 0, 0.6);\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  z-index: 1000;\n  overflow-y: auto;\n  padding: 20px;\n}\n\n.feedback-modal {\n  background: white;\n  border-radius: 12px;\n  box-shadow: 0 15px 35px rgba(0, 0, 0, 0.3);\n  max-width: 600px;\n  width: 100%;\n  max-height: 90vh;\n  overflow-y: auto;\n  animation: modalSlideIn 0.3s ease-out;\n}\n\n@keyframes modalSlideIn {\n  from {\n    opacity: 0;\n    transform: translateY(-30px) scale(0.95);\n  }\n  to {\n    opacity: 1;\n    transform: translateY(0) scale(1);\n  }\n}\n\n.modal-header {\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  padding: 20px 24px;\n  border-bottom: 2px solid #f0f0f0;\n  background: linear-gradient(135deg, #E960A6, #d155a0);\n  color: white;\n  border-radius: 12px 12px 0 0;\n}\n\n.modal-title {\n  margin: 0;\n  font-size: 1.4rem;\n  font-weight: 600;\n}\n\n.close-btn {\n  background: none;\n  border: none;\n  font-size: 2rem;\n  color: white;\n  cursor: pointer;\n  padding: 0;\n  width: 30px;\n  height: 30px;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  border-radius: 50%;\n  transition: all 0.3s ease;\n}\n\n.close-btn:hover {\n  background: rgba(255, 255, 255, 0.2);\n  transform: scale(1.1);\n}\n\n.modal-body {\n  padding: 24px;\n  max-height: 60vh;\n  overflow-y: auto;\n}\n\n.info-card {\n  background: #f8f9fa;\n  border-radius: 8px;\n  margin-bottom: 20px;\n  border: 1px solid #e9ecef;\n  overflow: hidden;\n}\n\n.card-header {\n  padding: 12px 16px;\n  background: #e9ecef;\n  border-bottom: 1px solid #dee2e6;\n}\n\n.card-header.current {\n  background: linear-gradient(135deg, #17a2b8, #138496);\n  color: white;\n}\n\n.card-header.update {\n  background: linear-gradient(135deg, #ffc107, #e0a800);\n  color: #212529;\n}\n\n.card-header.new {\n  background: linear-gradient(135deg, #28a745, #1e7e34);\n  color: white;\n}\n\n.card-header h4 {\n  margin: 0;\n  font-size: 1.1rem;\n  font-weight: 600;\n}\n\n.card-content {\n  padding: 16px;\n}\n\n.current-feedback-text {\n  background: white;\n  border: 1px solid #dee2e6;\n  border-radius: 6px;\n  padding: 12px;\n  margin-bottom: 8px;\n  line-height: 1.5;\n}\n\n.feedback-author {\n  color: #6c757d;\n  font-style: italic;\n}\n\n.form-group {\n  margin-bottom: 16px;\n}\n\n.form-label {\n  display: block;\n  margin-bottom: 8px;\n  font-weight: 600;\n  color: #495057;\n}\n\n.feedback-textarea {\n  width: 100%;\n  padding: 12px;\n  border: 2px solid #dee2e6;\n  border-radius: 6px;\n  font-size: 14px;\n  font-family: inherit;\n  line-height: 1.5;\n  resize: vertical;\n  transition: border-color 0.3s ease, box-shadow 0.3s ease;\n}\n\n.feedback-textarea:focus {\n  outline: none;\n  border-color: #E960A6;\n  box-shadow: 0 0 0 3px rgba(233, 96, 166, 0.1);\n}\n\n.feedback-textarea:disabled {\n  background-color: #f8f9fa;\n  cursor: not-allowed;\n}\n\n.char-count {\n  font-size: 12px;\n  color: #6c757d;\n  text-align: right;\n  margin-top: 4px;\n}\n\n.attribution-info {\n  background: #e7f3ff;\n  border-left: 4px solid #0066cc;\n  padding: 8px 12px;\n  color: #0066cc;\n}\n\n.modal-footer {\n  display: flex;\n  justify-content: flex-end;\n  gap: 12px;\n  padding: 20px 24px;\n  border-top: 2px solid #f0f0f0;\n  background: #f8f9fa;\n}\n\n.btn {\n  padding: 10px 20px;\n  border: none;\n  border-radius: 6px;\n  font-size: 14px;\n  font-weight: 600;\n  cursor: pointer;\n  transition: all 0.3s ease;\n  display: inline-flex;\n  align-items: center;\n  gap: 8px;\n}\n\n.btn:disabled {\n  opacity: 0.6;\n  cursor: not-allowed;\n  transform: none !important;\n}\n\n.btn:not(:disabled):hover {\n  transform: translateY(-1px);\n  box-shadow: 0 4px 12px rgba(0, 0, 0, 0.15);\n}\n\n.btn-primary {\n  background: linear-gradient(135deg, #E960A6, #d155a0);\n  color: white;\n}\n\n.btn-cancel {\n  background: linear-gradient(135deg, #6c757d, #5a6268);\n  color: white;\n}\n\n.spinner {\n  width: 16px;\n  height: 16px;\n  border: 2px solid transparent;\n  border-top: 2px solid currentColor;\n  border-radius: 50%;\n  animation: spin 1s linear infinite;\n}\n\n@keyframes spin {\n  to {\n    transform: rotate(360deg);\n  }\n}\n\n/* Responsive Design */\n@media (max-width: 768px) {\n  .modal-overlay {\n    padding: 10px;\n  }\n  \n  .feedback-modal {\n    max-height: 95vh;\n  }\n  \n  .modal-footer {\n    flex-direction: column;\n  }\n  \n  .btn {\n    width: 100%;\n    justify-content: center;\n  }\n}\n\n.container-fluid {\n  max-width: 800px;\n  margin: auto;\n  padding: 20px;\n  background-color: #ffffff;\n  border-radius: 8px;\n  box-shadow: 0 8px 30px rgba(0, 0, 0, 0.2);\n}\n\nh5 {\n  color: #333;\n  margin-bottom: 20px;\n}\n\n.custom-select {\n  width: 100%;\n  padding: 15px;\n  height: 50px;\n  border: 1px solid #ccc;\n  border-radius: 5px;\n  box-sizing: border-box;\n  transition: border-color 0.3s, box-shadow 0.3s;\n  font-size: 16px;\n}\n\n.form-control {\n  width: 100%;\n  padding: 15px;\n  height: 50px;\n  border: 1px solid #ccc;\n  border-radius: 5px;\n  box-sizing: border-box;\n  transition: border-color 0.3s, box-shadow 0.3s;\n  font-size: 16px;\n}\n\n.form-control:focus {\n  border-color: #E960A6;\n  box-shadow: 0 0 5px rgba(0, 123, 255, 0.5);\n  outline: none;\n}\n\n.btn-primary {\n  background-color: #E960A6;\n  color: white;\n}\n\n.btn-primary:hover {\n  background-color: #E960A6;\n  color: teal;\n}\n\n.btn-cancel {\n  background-color: teal;\n  color: white;\n}\n\n.btn-cancel:hover {\n  background-color: teal;\n  color: #E960A6;\n}\n\n.form-group {\n  margin-bottom: 15px;\n}\n</style>"],"mappings":";;;;AAmNA,OAAOA,cAAa,MAAO,sBAAsB;AACjD,SAASC,cAAa,QAAS,UAAU;AAEzC,eAAe;EACbC,IAAI,EAAE,aAAa;EACnBC,UAAU,EAAE;IAAEH;EAAe,CAAC;EAC9BI,IAAIA,CAAA,EAAG;IACL,OAAO;MACLC,UAAU,EAAEJ,cAAa,GAAI,gBAAgB;MAC7CK,IAAI,EAAE;QACJC,QAAQ,EAAE,IAAI;QACdC,SAAS,EAAE,EAAE;QACbC,OAAO,EAAE,EAAE;QACXC,aAAa,EAAE,EAAE;QACjBC,eAAe,EAAE,EAAE;QACnBC,IAAI,EAAE,EAAE;QACRC,QAAQ,EAAE;MACZ,CAAC;MACDC,IAAI,EAAE,EAAE;MACRC,YAAY,EAAE,KAAK;MACnBC,MAAM,EAAE;QACNC,OAAO,EAAE,KAAK;QACdC,OAAO,EAAE;MACX,CAAC;MACDC,SAAS,EAAE,EAAE;MACbC,MAAM,EAAE,EAAE;MACVC,SAAS,EAAE,KAAK;MAChBC,eAAe,EAAE,IAAI;MAErB;MACAC,WAAW,EAAE,EAAE;MACfC,WAAW,EAAE,CAAC;MACdC,OAAO,EAAE,EAAE;MACXC,SAAS,EAAE,IAAI;MAEf;MACAC,eAAe,EAAE,IAAI;MACrBC,iBAAiB,EAAE,KAAK;MACxBC,oBAAoB,EAAE,KAAK;MAC3BC,YAAY,EAAE;QACZC,QAAQ,EAAE;MACZ,CAAC;MACDC,cAAc,EAAE;QACdf,OAAO,EAAE,KAAK;QACdC,OAAO,EAAE;MACX;IACF,CAAC;EACH,CAAC;EAEDe,QAAQ,EAAE;IACRC,WAAWA,CAAA,EAAG;MACZ,MAAMC,KAAI,GAAI,IAAI,CAACC,UAAU;MAC7B,MAAMC,OAAM,GAAI,IAAI,CAACb,WAAW;MAChC,MAAMc,KAAI,GAAI,CAAC,EAAE;MACjB,MAAMC,KAAI,GAAI,EAAE;MAEhB,KAAK,IAAIC,CAAA,GAAIC,IAAI,CAACC,GAAG,CAAC,CAAC,EAAEL,OAAM,GAAIC,KAAK,CAAC,EAAEE,CAAA,IAAKC,IAAI,CAACE,GAAG,CAACR,KAAK,EAAEE,OAAM,GAAIC,KAAK,CAAC,EAAEE,CAAC,EAAE,EAAE;QACrFD,KAAK,CAACK,IAAI,CAACJ,CAAC,CAAC;MACf;MAEA,OAAOD,KAAK;IACd,CAAC;IACDM,YAAYA,CAAA,EAAG;MACb,MAAMC,KAAI,GAAI,IAAI,CAACvB,WAAW,CAACwB,WAAW,CAAC,CAAC;MAC5C,OAAO,IAAI,CAACjC,IAAI,CAACkC,MAAM,CAAEC,GAAG,IAAK;QAC/B,MAAMC,QAAO,GAAI,GAAGD,GAAG,CAACE,UAAU,IAAIF,GAAG,CAACG,SAAS,EAAE,CAACL,WAAW,CAAC,CAAC;QACnE,OACEG,QAAQ,CAACG,QAAQ,CAACP,KAAK,KAAKG,GAAG,CAACK,SAAS,CAACP,WAAW,CAAC,CAAC,CAACM,QAAQ,CAACP,KAAK;MAE1E,CAAC,CAAC;IACJ,CAAC;IACDS,aAAaA,CAAA,EAAG;MACd,MAAMC,KAAI,GAAI,CAAC,IAAI,CAAChC,WAAU,GAAI,CAAC,IAAI,IAAI,CAACC,OAAO;MACnD,MAAMgC,GAAE,GAAID,KAAI,GAAI,IAAI,CAAC/B,OAAO;MAChC,OAAO,IAAI,CAACoB,YAAY,CAACa,KAAK,CAACF,KAAK,EAAEC,GAAG,CAAC;IAC5C,CAAC;IACDrB,UAAUA,CAAA,EAAG;MACX,OAAOK,IAAI,CAACkB,IAAI,CAAC,IAAI,CAACd,YAAY,CAACe,MAAK,GAAI,IAAI,CAACnC,OAAO,CAAC;IAC3D;EACF,CAAC;EAEDoC,KAAK,EAAE;IACLtC,WAAWA,CAAA,EAAG;MACZ,IAAI,CAACC,WAAU,GAAI,CAAC;IACtB;EACF,CAAC;EAEDsC,OAAOA,CAAA,EAAG;IACR,IAAI,CAAC3C,SAAQ,GAAI4C,YAAY,CAACC,OAAO,CAAC,WAAW,KAAK,EAAE;IACxD,IAAI,IAAI,CAAC7C,SAAS,EAAE;MAClB,IAAI,CAAC8C,kBAAkB,CAAC,CAAC;IAC3B;EACF,CAAC;EAEDC,OAAO,EAAE;IACPC,UAAUA,CAACC,IAAI,EAAE;MACf,IAAIA,IAAG,IAAK,KAAKA,IAAG,IAAK,IAAI,CAAChC,UAAU,EAAE;QACxC,IAAI,CAACZ,WAAU,GAAI4C,IAAI;MACzB;IACF,CAAC;IAEDC,gBAAgBA,CAACC,KAAK,EAAE;MACtB,IAAI,CAAChE,IAAI,CAACM,IAAG,GAAI0D,KAAK,CAACC,MAAM,CAACC,KAAK,CAAC,CAAC,CAAC;IACxC,CAAC;IAED,MAAMC,eAAeA,CAAA,EAAG;MACtB,IAAI,CAAC/C,SAAQ,GAAI,IAAI;MACrB,IAAI;QACF,MAAMgD,KAAI,GAAIX,YAAY,CAACC,OAAO,CAAC,YAAY,CAAC;QAChD,IAAI,CAAC,IAAI,CAAC5C,MAAM,EAAE;QAClB,MAAMuD,GAAE,GAAI,MAAMC,KAAK,CAAC,GAAG3E,cAAc,yBAAyB,EAAE;UAClE4E,OAAO,EAAE;YACPC,aAAa,EAAE,UAAUJ,KAAK;UAChC;QACF,CAAC,CAAC;QACF,IAAI,CAACC,GAAG,CAACI,EAAE,EAAE,MAAM,IAAIC,KAAK,CAAC,sBAAsB,CAAC;QACpD,MAAM5E,IAAG,GAAI,MAAMuE,GAAG,CAACM,IAAI,CAAC,CAAC;QAC7B,IAAI,CAACnE,IAAG,GAAIV,IAAI;MAClB,EAAE,OAAO8E,GAAG,EAAE;QACZC,OAAO,CAACC,KAAK,CAAC,+BAA+B,EAAEF,GAAG,CAAC;MACrD,UAAU;QACR,IAAI,CAACxD,SAAQ,GAAI,KAAK;MACxB;IACF,CAAC;IAED,MAAMuC,kBAAkBA,CAAA,EAAG;MACzB,MAAMS,KAAI,GAAIX,YAAY,CAACC,OAAO,CAAC,YAAY,CAAC;MAChD,IAAI,CAACU,KAAK,EAAE;MACZ,IAAI;QACF,MAAMW,OAAM,GAAIC,IAAI,CAACC,KAAK,CAACC,IAAI,CAACd,KAAK,CAACe,KAAK,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;QACrD,IAAI,CAAC,IAAI,CAACtE,SAAS,EAAE;UACnB,IAAI,CAACA,SAAQ,GAAIkE,OAAO,CAACK,KAAK;QAChC;QACA,MAAMf,GAAE,GAAI,MAAMC,KAAK,CAAC,GAAG3E,cAAc,yBAAyB,IAAI,CAACkB,SAAS,EAAE,EAAE;UAClF0D,OAAO,EAAE;YAAEC,aAAa,EAAE,UAAUJ,KAAK;UAAG;QAC9C,CAAC,CAAC;QACF,MAAMtE,IAAG,GAAI,MAAMuE,GAAG,CAACM,IAAI,CAAC,CAAC;QAC7B,IAAIN,GAAG,CAACI,EAAE,EAAE;UACV,IAAI,CAAC3D,MAAK,GAAIhB,IAAI,CAACG,QAAQ;UAC3B,IAAI,CAACkE,eAAe,CAAC,CAAC;QACxB,OAAO;UACL,IAAI,CAACzD,MAAK,GAAI;YACZC,OAAO,EAAE,KAAK;YACdC,OAAO,EAAEd,IAAI,CAACc,OAAM,IAAK;UAC3B,CAAC;QACH;MACF,EAAE,OAAOgE,GAAG,EAAE;QACZC,OAAO,CAACC,KAAK,CAAC,yBAAyB,EAAEF,GAAG,CAAC;QAC7C,IAAI,CAAClE,MAAK,GAAI;UACZC,OAAO,EAAE,KAAK;UACdC,OAAO,EAAE;QACX,CAAC;MACH;IACF,CAAC;IAEDyE,cAAcA,CAACC,QAAQ,EAAE;MACvB,IAAI,CAACA,QAAQ,EAAE,OAAO,EAAE;MACxB,MAAMC,IAAG,GAAI,IAAIC,IAAI,CAACF,QAAQ,CAAC;MAC/B,MAAMG,IAAG,GAAIF,IAAI,CAACG,WAAW,CAAC,CAAC;MAC/B,MAAMC,KAAI,GAAIC,MAAM,CAACL,IAAI,CAACM,QAAQ,CAAC,IAAI,CAAC,CAAC,CAACC,QAAQ,CAAC,CAAC,EAAE,GAAG,CAAC;MAC1D,MAAMC,GAAE,GAAIH,MAAM,CAACL,IAAI,CAACS,OAAO,CAAC,CAAC,CAAC,CAACF,QAAQ,CAAC,CAAC,EAAE,GAAG,CAAC;MACnD,IAAIG,KAAI,GAAIV,IAAI,CAACW,QAAQ,CAAC,CAAC;MAC3B,MAAMC,OAAM,GAAIP,MAAM,CAACL,IAAI,CAACa,UAAU,CAAC,CAAC,CAAC,CAACN,QAAQ,CAAC,CAAC,EAAE,GAAG,CAAC;MAC1D,MAAMO,OAAM,GAAIT,MAAM,CAACL,IAAI,CAACe,UAAU,CAAC,CAAC,CAAC,CAACR,QAAQ,CAAC,CAAC,EAAE,GAAG,CAAC;MAC1D,MAAMS,IAAG,GAAIN,KAAI,IAAK,EAAC,GAAI,IAAG,GAAI,IAAI;MACtCA,KAAI,GAAIA,KAAI,GAAI,EAAC,IAAK,EAAE;MACxB,OAAO,GAAGR,IAAI,IAAIE,KAAK,IAAII,GAAG,IAAIH,MAAM,CAACK,KAAK,CAAC,CAACH,QAAQ,CAAC,CAAC,EAAE,GAAG,CAAC,IAAIK,OAAO,IAAIE,OAAO,IAAIE,IAAI,EAAE;IAClG,CAAC;IAED;IACAC,iBAAiBA,CAAC5F,OAAO,EAAE;MACzB,IAAI,CAACS,eAAc,GAAI;QAAE,GAAGT;MAAQ,CAAC;MACrC,IAAI,CAACY,YAAY,CAACC,QAAO,GAAIb,OAAO,CAACa,QAAO,IAAK,EAAE;MACnD,IAAI,CAACH,iBAAgB,GAAI,IAAI;MAC7B,IAAI,CAACmF,mBAAmB,CAAC,CAAC;;MAE1B;MACAC,QAAQ,CAACC,IAAI,CAACC,KAAK,CAACC,QAAO,GAAI,QAAQ;IACzC,CAAC;IAEDC,kBAAkBA,CAAA,EAAG;MACnB,IAAI,CAACzF,eAAc,GAAI,IAAI;MAC3B,IAAI,CAACG,YAAY,CAACC,QAAO,GAAI,EAAE;MAC/B,IAAI,CAACH,iBAAgB,GAAI,KAAK;MAC9B,IAAI,CAACmF,mBAAmB,CAAC,CAAC;;MAE1B;MACAC,QAAQ,CAACC,IAAI,CAACC,KAAK,CAACC,QAAO,GAAI,MAAM;IACvC,CAAC;IAED,MAAME,YAAYA,CAAA,EAAG;MACnB,IAAI,CAAC,IAAI,CAACvF,YAAY,CAACC,QAAQ,CAACuF,IAAI,CAAC,CAAC,EAAE;QACtC,IAAI,CAACtF,cAAa,GAAI;UACpBf,OAAO,EAAE,KAAK;UACdC,OAAO,EAAE;QACX,CAAC;QACD;MACF;MAEA,IAAI,CAAC,IAAI,CAACS,eAAe,EAAE;QACzB,IAAI,CAACK,cAAa,GAAI;UACpBf,OAAO,EAAE,KAAK;UACdC,OAAO,EAAE;QACX,CAAC;QACD;MACF;MAEA,IAAI,CAACW,oBAAmB,GAAI,IAAI;MAChC,IAAI;QACF,MAAM6C,KAAI,GAAIX,YAAY,CAACC,OAAO,CAAC,YAAY,CAAC;QAChD,MAAMuD,QAAO,GAAI,MAAM3C,KAAK,CAAC,GAAG3E,cAAc,0BAA0B,IAAI,CAAC0B,eAAe,CAAC6F,UAAU,EAAE,EAAE;UACzGC,MAAM,EAAE,KAAK;UACb5C,OAAO,EAAE;YACP,cAAc,EAAE,kBAAkB;YAClC,eAAe,EAAE,UAAUH,KAAK;UAClC,CAAC;UACDuC,IAAI,EAAE3B,IAAI,CAACoC,SAAS,CAAC;YACnB3F,QAAQ,EAAE,IAAI,CAACD,YAAY,CAACC,QAAQ;YACpC4F,gBAAgB,EAAE,IAAI,CAACxG;UACzB,CAAC;QACH,CAAC,CAAC;QAEF,MAAMf,IAAG,GAAI,MAAMmH,QAAQ,CAACtC,IAAI,CAAC,CAAC;QAElC,IAAIsC,QAAQ,CAACxC,EAAE,EAAE;UACf;UACA,MAAM6C,QAAO,GAAI,IAAI,CAAC9G,IAAI,CAAC+G,SAAS,CAAC5E,GAAE,IAAKA,GAAG,CAACuE,UAAS,KAAM,IAAI,CAAC7F,eAAe,CAAC6F,UAAU,CAAC;UAC/F,IAAII,QAAO,KAAM,CAAC,CAAC,EAAE;YACnB,IAAI,CAAC9G,IAAI,CAAC8G,QAAQ,CAAC,CAAC7F,QAAO,GAAI,IAAI,CAACD,YAAY,CAACC,QAAQ;YACzD,IAAI,CAACjB,IAAI,CAAC8G,QAAQ,CAAC,CAACD,gBAAe,GAAI,IAAI,CAACxG,SAAS;UACvD;UAEA,IAAI,CAACa,cAAa,GAAI;YACpBf,OAAO,EAAE,IAAI;YACbC,OAAO,EAAE;UACX,CAAC;;UAED;UACA4G,UAAU,CAAC,MAAM;YACf,IAAI,CAACV,kBAAkB,CAAC,CAAC;YACzB;YACAU,UAAU,CAAC,MAAM;cACf,IAAI,CAACf,mBAAmB,CAAC,CAAC;YAC5B,CAAC,EAAE,IAAI,CAAC;UACV,CAAC,EAAE,IAAI,CAAC;QACV,OAAO;UACL,IAAI,CAAC/E,cAAa,GAAI;YACpBf,OAAO,EAAE,KAAK;YACdC,OAAO,EAAEd,IAAI,CAACc,OAAM,IAAK;UAC3B,CAAC;QACH;MACF,EAAE,OAAOkE,KAAK,EAAE;QACdD,OAAO,CAACC,KAAK,CAAC,wBAAwB,EAAEA,KAAK,CAAC;QAC9C,IAAI,CAACpD,cAAa,GAAI;UACpBf,OAAO,EAAE,KAAK;UACdC,OAAO,EAAE;QACX,CAAC;MACH,UAAU;QACR,IAAI,CAACW,oBAAmB,GAAI,KAAK;MACnC;IACF,CAAC;IAEDkF,mBAAmBA,CAAA,EAAG;MACpB,IAAI,CAAC/E,cAAa,GAAI;QACpBf,OAAO,EAAE,KAAK;QACdC,OAAO,EAAE;MACX,CAAC;IACH;EACF;AACF,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}