{"ast":null,"code":"import { computed, ref, watch, nextTick, onMounted, onUnmounted } from 'vue';\nimport JobCard from './JobCard.vue';\nimport CandidateCard from './CandidateCard.vue';\nexport default {\n  name: 'ChatArea',\n  components: {\n    JobCard,\n    CandidateCard\n  },\n  props: {\n    messages: {\n      type: Array,\n      default: () => []\n    },\n    loading: {\n      type: Boolean,\n      default: false\n    },\n    isNewChat: {\n      type: Boolean,\n      default: true\n    }\n  },\n  emits: ['suggestion-click'],\n  setup(props, {\n    emit\n  }) {\n    const chatContainer = ref(null);\n    const isDarkMode = ref(false);\n    const updateDarkMode = () => {\n      isDarkMode.value = document.body.classList.contains('dark');\n    };\n    onMounted(() => {\n      updateDarkMode();\n      const observer = new MutationObserver(updateDarkMode);\n      observer.observe(document.body, {\n        attributes: true,\n        attributeFilter: ['class']\n      });\n      window._themeObserver = observer;\n    });\n    onUnmounted(() => {\n      if (window._themeObserver) {\n        window._themeObserver.disconnect();\n        delete window._themeObserver;\n      }\n    });\n    const botLogo = computed(() => {\n      return '/logo.png';\n    });\n    watch(() => props.messages, async () => {\n      await nextTick();\n      if (chatContainer.value) {\n        chatContainer.value.scrollTop = chatContainer.value.scrollHeight;\n      }\n    }, {\n      deep: true\n    });\n    const showWelcomeScreen = computed(() => {\n      console.log('🔍 Welcome screen check:', {\n        isNewChat: props.isNewChat,\n        messageCount: props.messages.length,\n        loading: props.loading\n      });\n      return props.isNewChat && props.messages.length === 0 || props.messages.length === 0 && !props.loading;\n    });\n\n    // Dynamic welcome message based on time of day\n    const welcomeMessage = computed(() => {\n      const hour = new Date().getHours();\n      if (hour >= 5 && hour < 12) {\n        return 'Good Morning, Ready to dive in?';\n      } else if (hour >= 12 && hour < 17) {\n        return 'Good Afternoon, Ready to dive in?';\n      } else {\n        return 'Good Evening, Ready to dive in?';\n      }\n    });\n\n    // Role-aware suggestion cards\n    const suggestionCards = computed(() => {\n      // Detect user role\n      const currentPath = window.location.pathname;\n\n      // Check for admin first\n      const isAdmin = currentPath.includes('/admin/');\n      if (isAdmin) {\n        // Admin-specific cards\n        return [{\n          icon: 'fas fa-money-bill-wave',\n          text: 'Payment Reminders',\n          msg: 'Show me upcoming salary payments'\n        }, {\n          icon: 'fas fa-database',\n          text: 'Database Query',\n          msg: 'Help me query the database for job seekers and employers'\n        }, {\n          icon: 'fas fa-envelope',\n          text: 'Gmail Support',\n          msg: 'Show me recent emails and help me draft replies'\n        }, {\n          icon: 'fas fa-chart-line',\n          text: 'Platform Analytics',\n          msg: 'Show me platform insights and statistics'\n        }];\n      }\n\n      // Check for employer\n      const isEmployer = currentPath.includes('/employer/');\n      if (isEmployer) {\n        // Employer-specific cards\n        return [{\n          icon: 'fas fa-briefcase',\n          text: 'add a Job',\n          msg: 'How do I post a new job listing?'\n        }, {\n          icon: 'fas fa-search',\n          text: 'Find Candidates',\n          msg: 'How do I search for qualified candidates?'\n        }, {\n          icon: 'fas fa-file-alt',\n          text: 'Hiring Process',\n          msg: 'Help me with the hiring and interview process'\n        }, {\n          icon: 'fas fa-building',\n          text: 'Company Profile',\n          msg: 'How do I manage my company profile?'\n        }];\n      }\n\n      // Default: Job seeker cards (employee)\n      return [{\n        icon: 'fas fa-user',\n        text: 'Complete Profile',\n        msg: 'How do I complete my profile?'\n      }, {\n        icon: 'fas fa-file-alt',\n        text: 'CV Writing Help',\n        msg: 'Help me write a professional CV'\n      }, {\n        icon: 'fas fa-briefcase',\n        text: 'Find Jobs',\n        msg: 'Show me available jobs'\n      }];\n    });\n    const handleSuggestionClick = message => {\n      emit('suggestion-click', message);\n    };\n    return {\n      chatContainer,\n      isDarkMode,\n      botLogo,\n      showWelcomeScreen,\n      welcomeMessage,\n      suggestionCards,\n      handleSuggestionClick\n    };\n  }\n};","map":{"version":3,"names":["computed","ref","watch","nextTick","onMounted","onUnmounted","JobCard","CandidateCard","name","components","props","messages","type","Array","default","loading","Boolean","isNewChat","emits","setup","emit","chatContainer","isDarkMode","updateDarkMode","value","document","body","classList","contains","observer","MutationObserver","observe","attributes","attributeFilter","window","_themeObserver","disconnect","botLogo","scrollTop","scrollHeight","deep","showWelcomeScreen","console","log","messageCount","length","welcomeMessage","hour","Date","getHours","suggestionCards","currentPath","location","pathname","isAdmin","includes","icon","text","msg","isEmployer","handleSuggestionClick","message"],"sources":["/Users/gentil/Desktop/Kozi-ai-agent/src/components/ChatArea.vue"],"sourcesContent":["<template>\n  <div class=\"chat-messages\" ref=\"chatContainer\">\n    <!-- Welcome Screen (show ONLY for truly new/empty chats) -->\n    <div v-if=\"showWelcomeScreen\" class=\"welcome-screen\">\n      <div class=\"welcome-content\">\n        <h1>{{ welcomeMessage }}</h1>\n        <p>I'm here to help you with everything related to Kozi platform</p>\n\n        <div class=\"suggestion-cards\">\n          <div\n            v-for=\"(suggestion, index) in suggestionCards\"\n            :key=\"index\"\n            class=\"suggestion-card\"\n            @click=\"handleSuggestionClick(suggestion.msg)\"\n          >\n            <i :class=\"suggestion.icon\"></i>\n            <span>{{ suggestion.text }}</span>\n          </div>\n        </div>\n      </div>\n    </div>\n\n    <template v-else>\n      <div\n        v-for=\"(message, index) in messages\"\n        :key=\"index\"\n        :class=\"[\n          'message',\n          message.sender === 'user' ? 'user-message' : 'bot-message',\n          { 'streaming': message.streaming }\n        ]\"\n      >\n        <!-- Bot messages: keep wrapper for avatar alignment -->\n        <template v-if=\"message.sender !== 'user'\">\n          <div class=\"message-avatar\">\n            <img\n              :src=\"botLogo\"\n              alt=\"Kozi AI\"\n              class=\"bot-logo\"\n            />\n          </div>\n          <div class=\"message-content\">\n            <div\n              class=\"formatted-content\"\n              v-html=\"message.text\"\n            ></div>\n\n                 <!-- Job Cards -->\n                 <div v-if=\"message.jobs && message.jobs.length > 0\" class=\"job-cards-container\">\n                   <div class=\"job-cards-grid\">\n                     <JobCard \n                       v-for=\"job in message.jobs\" \n                       :key=\"job.id || job.job_id\" \n                       :job=\"job\"\n                     />\n                   </div>\n                 </div>\n\n                 <!-- Candidate Cards -->\n                 <div v-if=\"message.candidates && message.candidates.length > 0\" class=\"candidate-cards-container\">\n                   <div class=\"candidate-cards-grid\">\n                     <CandidateCard \n                       v-for=\"candidate in message.candidates\" \n                       :key=\"candidate.users_id || candidate.id\" \n                       :candidate=\"candidate\"\n                     />\n                   </div>\n                 </div>\n\n            <div \n              v-if=\"message.streaming\" \n              class=\"typing-indicator\"\n            >\n              <span class=\"typing-dot\"></span>\n              <span class=\"typing-dot\"></span>\n              <span class=\"typing-dot\"></span>\n            </div>\n          </div>\n        </template>\n        \n        <!-- User messages: NO wrapper, direct bubble -->\n        <div v-else class=\"message-text\">\n          {{ message.text }}\n        </div>\n      </div>\n\n      <div v-if=\"loading && messages.length === 0\" class=\"loading-indicator\">\n        <i class=\"fas fa-spinner fa-spin\"></i>\n        Initializing chat...\n      </div>\n    </template>\n  </div>\n</template>\n\n<script>\nimport { computed, ref, watch, nextTick, onMounted, onUnmounted } from 'vue'\nimport JobCard from './JobCard.vue'\nimport CandidateCard from './CandidateCard.vue'\n\nexport default {\n  name: 'ChatArea',\n  components: {\n    JobCard,\n    CandidateCard\n  },\n  props: {\n    messages: {\n      type: Array,\n      default: () => []\n    },\n    loading: {\n      type: Boolean,\n      default: false\n    },\n    isNewChat: {\n      type: Boolean,\n      default: true\n    }\n  },\n  emits: ['suggestion-click'],\n  setup(props, { emit }) {\nconst chatContainer = ref(null)\nconst isDarkMode = ref(false)\nconst updateDarkMode = () => {\n  isDarkMode.value = document.body.classList.contains('dark')\n}\n\nonMounted(() => {\n  updateDarkMode()\n  \n  const observer = new MutationObserver(updateDarkMode)\n  observer.observe(document.body, {\n    attributes: true,\n    attributeFilter: ['class']\n  })\n  \n  window._themeObserver = observer\n})\n\nonUnmounted(() => {\n  if (window._themeObserver) {\n    window._themeObserver.disconnect()\n    delete window._themeObserver\n  }\n})\n\nconst botLogo = computed(() => {\n  return '/logo.png'\n})\n\nwatch(\n  () => props.messages,\n  async () => {\n    await nextTick()\n    if (chatContainer.value) {\n      chatContainer.value.scrollTop = chatContainer.value.scrollHeight\n    }\n  },\n  { deep: true }\n)\n\nconst showWelcomeScreen = computed(() => {\n  console.log('🔍 Welcome screen check:', {\n    isNewChat: props.isNewChat,\n    messageCount: props.messages.length,\n    loading: props.loading\n  })\n  \n  return (props.isNewChat && props.messages.length === 0) || \n         (props.messages.length === 0 && !props.loading)\n})\n\n// Dynamic welcome message based on time of day\nconst welcomeMessage = computed(() => {\n  const hour = new Date().getHours()\n  \n  if (hour >= 5 && hour < 12) {\n    return 'Good Morning, Ready to dive in?'\n  } else if (hour >= 12 && hour < 17) {\n    return 'Good Afternoon, Ready to dive in?'\n  } else {\n    return 'Good Evening, Ready to dive in?'\n  }\n})\n\n// Role-aware suggestion cards\nconst suggestionCards = computed(() => {\n  // Detect user role\n  const currentPath = window.location.pathname\n  \n  // Check for admin first\n  const isAdmin = currentPath.includes('/admin/')\n  \n  if (isAdmin) {\n    // Admin-specific cards\n    return [\n      {\n        icon: 'fas fa-money-bill-wave',\n        text: 'Payment Reminders',\n        msg: 'Show me upcoming salary payments'\n      },\n      {\n        icon: 'fas fa-database',\n        text: 'Database Query',\n        msg: 'Help me query the database for job seekers and employers'\n      },\n      {\n        icon: 'fas fa-envelope',\n        text: 'Gmail Support',\n        msg: 'Show me recent emails and help me draft replies'\n      },\n      {\n        icon: 'fas fa-chart-line',\n        text: 'Platform Analytics',\n        msg: 'Show me platform insights and statistics'\n      }\n    ]\n  }\n  \n  // Check for employer\n  const isEmployer = currentPath.includes('/employer/')\n  \n  if (isEmployer) {\n    // Employer-specific cards\n    return [\n      {\n        icon: 'fas fa-briefcase',\n        text: 'add a Job',\n        msg: 'How do I post a new job listing?'\n      },\n      {\n        icon: 'fas fa-search',\n        text: 'Find Candidates',\n        msg: 'How do I search for qualified candidates?'\n      },\n      {\n        icon: 'fas fa-file-alt',\n        text: 'Hiring Process',\n        msg: 'Help me with the hiring and interview process'\n      },\n      {\n        icon: 'fas fa-building',\n        text: 'Company Profile',\n        msg: 'How do I manage my company profile?'\n      }\n    ]\n  }\n  \n  // Default: Job seeker cards (employee)\n  return [\n    {\n      icon: 'fas fa-user',\n      text: 'Complete Profile',\n      msg: 'How do I complete my profile?'\n    },\n    {\n      icon: 'fas fa-file-alt',\n      text: 'CV Writing Help',\n      msg: 'Help me write a professional CV'\n    },\n    {\n      icon: 'fas fa-briefcase',\n      text: 'Find Jobs',\n      msg: 'Show me available jobs'\n    }\n  ]\n})\n\nconst handleSuggestionClick = (message) => {\n  emit('suggestion-click', message)\n}\n\n    return {\n      chatContainer,\n      isDarkMode,\n      botLogo,\n      showWelcomeScreen,\n      welcomeMessage,\n      suggestionCards,\n      handleSuggestionClick\n    }\n  }\n}\n</script>\n\n<style scoped>\n.chat-messages {\n  /* Make ChatArea fill available space and scroll correctly */\n  flex: 1;\n  min-height: 0;\n  height: 100%;\n  overflow-y: auto;\n  padding: 1.25rem 1.25rem 6.5rem; /* bottom padding to avoid input overlap */\n  background: #ffffff;\n}\n\n/* Welcome screen */\n.welcome-screen {\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  height: 100%;\n}\n.welcome-content {\n  max-width: 840px;\n  text-align: center;\n}\n.welcome-content h1 {\n  font-size: 2rem;\n  font-weight: 800;\n  color: #2a2a2a;\n  margin-bottom: 0.5rem;\n}\n.welcome-content p {\n  color: #6b7280;\n  margin-bottom: 1.5rem;\n}\n.suggestion-cards {\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  gap: 0.75rem;\n  flex-wrap: wrap;\n}\n.suggestion-card {\n  display: flex;\n  align-items: center;\n  gap: 0.5rem;\n  padding: 0.65rem 1rem;\n  border: 1px solid #e5e7eb;\n  border-radius: 24px;\n  cursor: pointer;\n  transition: all .15s ease-in-out;\n  background: #fff;\n  font-size: 0.9rem;\n  white-space: nowrap;\n}\n.suggestion-card:hover { \n  border-color: #EA60A6; \n  box-shadow: 0 4px 14px rgba(234,96,166,.15);\n  transform: translateY(-1px);\n}\n.suggestion-card i { \n  color: #EA60A6;\n  font-size: 0.95rem;\n}\n\n/* Messages */\n.message {\n  display: flex;\n  gap: 0.6rem;\n  margin: 0.9rem 0;\n  align-items: center; /* vertically center avatar with bubble */\n}\n.message.user-message { flex-direction: row-reverse; }\n.message-avatar {\n  width: 44px;\n  height: 44px;\n  border-radius: 50%;\n  background: #f3f4f6;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  color: #6b7280;\n  flex-shrink: 0;\n  box-shadow: 0 4px 12px rgba(0,0,0,.06);\n}\n.bot-logo { width: 28px; height: 28px; }\n\n.message-content { max-width: 760px; }\n.bot-message .message-content { margin-right: auto; }\n.user-message .message-content { margin-left: auto; }\n\n/* Avatar spacing relative to bubble side */\n.bot-message .message-avatar { margin-right: 14px; margin-left: 0; }\n.user-message .message-avatar { margin-left: 14px; margin-right: 0; }\n\n.message-text,\n.formatted-content {\n  padding: 0.65rem 0.9rem;\n  border-radius: 18px;\n  line-height: 1.55;\n  font-size: 0.98rem;\n}\n.user-message .message-text {\n  background: linear-gradient(135deg, #E41E79 0%, #C0126E 100%) !important;\n  color: #ffffff !important;\n  border: 0 !important;\n  border-radius: 26px !important;\n  box-shadow: 0 2px 8px rgba(226, 46, 122, 0.15) !important;\n  padding: 0.4rem 0.6rem !important;\n  margin-left: auto !important;\n  margin-right: 0 !important;\n  max-width: 760px !important;\n}\n.bot-message .formatted-content { \n  background: transparent;\n  border: none;\n  box-shadow: none;\n  padding: 0.3rem 0 0.3rem 0;\n}\n\n/* Align bubbles nearer to center like ref UI */\n.bot-message { justify-content: flex-start; }\n.user-message { justify-content: flex-end; }\n\n/* Typing */\n.typing-indicator { display: flex; gap: 4px; margin-top: 6px; }\n.typing-dot {\n  width: 6px; height: 6px; border-radius: 50%; background: #9ca3af;\n  animation: blink 1.2s infinite ease-in-out;\n}\n.typing-dot:nth-child(2){ animation-delay: .2s }\n.typing-dot:nth-child(3){ animation-delay: .4s }\n@keyframes blink { 0%,80%,100%{opacity:.2} 40%{opacity:1} }\n\n/* Large formatted blocks */\n.formatted-content .section-header { font-weight: 700; margin: .6rem 0 .2rem; }\n.formatted-content .bullet-item { margin: .25rem 0; }\n.formatted-content .numbered-item { margin: .25rem 0; }\n.formatted-content .large-font { font-size: 1rem; }\n\n/* Dark support */\nbody.dark .chat-messages { background: #0f1115; }\nbody.dark .welcome-content h1 { color: #fff; }\nbody.dark .welcome-content p { color: #a1a1aa; }\nbody.dark .suggestion-card { border-color: #2a2a2a; background: #111318; }\nbody.dark .message-text, body.dark .formatted-content { color: #e5e7eb }\nbody.dark .bot-message .formatted-content { \n  background: transparent;\n  border: none;\n  box-shadow: none;\n  padding: 0.3rem 0 0.3rem 0;\n}\nbody.dark .user-message .message-text { background: linear-gradient(135deg, #c73e8a 0%, #a93272 100%); border-color: transparent; }\n\n/* Job Cards */\n.job-cards-container {\n  margin-top: 1rem;\n}\n\n.job-cards-grid {\n  display: grid;\n  grid-template-columns: repeat(auto-fit, minmax(300px, 1fr));\n  gap: 1rem;\n  margin-top: 0.75rem;\n}\n\n/* Candidate Cards */\n.candidate-cards-container {\n  margin-top: 1rem;\n}\n\n.candidate-cards-grid {\n  display: grid;\n  grid-template-columns: repeat(auto-fit, minmax(320px, 1fr));\n  gap: 1rem;\n  margin-top: 0.75rem;\n}\n\n/* Mobile responsiveness */\n@media (max-width: 768px) {\n  .chat-messages { \n    padding: 0.75rem 0.75rem 6rem;\n    width: 100%;\n    max-width: 100vw;\n    overflow-x: hidden;\n  }\n  \n  /* Welcome screen adjustments for mobile */\n  .welcome-content h1 {\n    font-size: 1.25rem;\n    font-weight: 700;\n  }\n  \n  .welcome-content p {\n    display: none; /* Hide subtitle on mobile */\n  }\n  \n  .suggestion-cards {\n    gap: 0.5rem;\n  }\n  \n  .suggestion-card {\n    padding: 0.55rem 0.85rem;\n    font-size: 0.85rem;\n    border-radius: 20px;\n  }\n  \n  .suggestion-card i {\n    font-size: 0.85rem;\n  }\n  \n  .message-content { max-width: 100%; }\n  .message-avatar { width: 36px; height: 36px; }\n  .bot-message .message-avatar { margin-right: 10px; }\n  .user-message .message-avatar { margin-left: 10px; }\n  .message-text, .formatted-content { padding: 0.6rem 0.8rem; border-radius: 18px; }\n  .user-message .message-text { \n    padding: 0.35rem 0.55rem !important;\n    margin-left: auto !important;\n    margin-right: 0 !important;\n    max-width: 100% !important;\n  }\n  \n  /* Mobile-specific bot message optimization - hide avatar for maximum width */\n  .bot-message .message-avatar { \n    display: none !important;\n  }\n  \n  .bot-message .message-content { \n    flex: 1;\n    width: 100%;\n    margin-left: 0;\n  }\n  \n  .bot-message .formatted-content { \n    padding: 0.55rem 0.8rem !important;\n    width: 100%;\n    max-width: 100%;\n  }\n  \n  .bot-message {\n    display: flex;\n    width: 100%;\n  }\n  \n  /* Mobile job cards */\n  .job-cards-grid {\n    grid-template-columns: 1fr;\n    gap: 0.75rem;\n  }\n}\n\n</style>"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}