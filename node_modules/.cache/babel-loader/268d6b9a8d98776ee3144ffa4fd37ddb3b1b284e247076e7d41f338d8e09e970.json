{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport IndexComponent from \"./IndexComponent.vue\";\nimport { globalVariable } from \"@/global\";\nexport default {\n  name: \"WelcomeComponent\",\n  components: {\n    IndexComponent\n  },\n  data() {\n    return {\n      uploadsUrl: globalVariable + \"/uploads/logo/\",\n      categories: [],\n      userCounts: {},\n      // Store user counts by category id\n      message: \"\",\n      messageType: \"\",\n      defaultImage: require('@/assets/img/user-1.jpg'),\n      // Default fallback image\n      currentPage: 1,\n      itemsPerPage: 12\n    };\n  },\n  computed: {\n    // Responsive items per page based on screen size\n    responsiveItemsPerPage() {\n      if (typeof window !== 'undefined') {\n        const width = window.innerWidth;\n        if (width < 576) return 4; // Mobile: 2 per row × 2 rows = 4 items\n        if (width < 768) return 6; // Small tablets: 2 per row × 3 rows = 6 items\n        if (width < 992) return 8; // Tablets: 2 per row × 4 rows = 8 items\n        return 12; // Desktop: 4 per row × 3 rows = 12 items\n      }\n      return 12;\n    },\n    totalPages() {\n      return Math.ceil(this.categories.length / this.responsiveItemsPerPage);\n    },\n    paginatedCategories() {\n      const start = (this.currentPage - 1) * this.responsiveItemsPerPage;\n      const end = start + this.responsiveItemsPerPage;\n      return this.categories.slice(start, end);\n    },\n    visiblePages() {\n      const pages = [];\n      const total = this.totalPages;\n      const current = this.currentPage;\n\n      // Show maximum 5 page numbers\n      let start = Math.max(1, current - 2);\n      let end = Math.min(total, current + 2);\n\n      // Adjust if we're near the beginning or end\n      if (end - start < 4) {\n        if (start === 1) {\n          end = Math.min(total, start + 4);\n        } else if (end === total) {\n          start = Math.max(1, end - 4);\n        }\n      }\n      for (let i = start; i <= end; i++) {\n        pages.push(i);\n      }\n      return pages;\n    }\n  },\n  methods: {\n    getCategoryImage(logo) {\n      console.log('Logo value:', logo);\n      console.log('Full URL would be:', this.uploadsUrl + logo);\n      if (logo && logo.trim() !== '') {\n        return this.uploadsUrl + logo;\n      }\n      console.log('Using default image');\n      return this.defaultImage;\n    },\n    handleImageError(event) {\n      console.log('Image failed to load:', event.target.src);\n      event.target.src = this.defaultImage;\n    },\n    changePage(page) {\n      if (page >= 1 && page <= this.totalPages) {\n        this.currentPage = page;\n        // Scroll to top when changing pages\n        window.scrollTo({\n          top: 0,\n          behavior: 'smooth'\n        });\n      }\n    },\n    handleResize() {\n      // Reset to first page when screen size changes to prevent empty pages\n      this.$nextTick(() => {\n        if (this.currentPage > this.totalPages) {\n          this.currentPage = 1;\n        }\n      });\n    },\n    async fetchCategory() {\n      try {\n        const token = localStorage.getItem(\"employerToken\");\n        if (!token) {\n          this.message = \"Authentication required.\";\n          this.messageType = \"alert-danger\";\n          return;\n        }\n        const response = await fetch(`${globalVariable}/name_and_id`, {\n          headers: {\n            Authorization: `Bearer ${token}`\n          }\n        });\n        const data = await response.json();\n        if (!response.ok) {\n          this.message = data.message || \"Failed to fetch categories.\";\n          this.messageType = \"alert-danger\";\n        } else {\n          // Debug: Log the fetched categories\n          console.log('Fetched categories:', data);\n          this.categories = data;\n\n          // Fetch user count for each category\n          for (const category of data) {\n            this.fetchUserCount(category.id);\n          }\n        }\n      } catch (error) {\n        console.error(\"Error fetching categories:\", error);\n        this.message = \"Error fetching categories.\";\n        this.messageType = \"alert-danger\";\n      }\n    },\n    async fetchUserCount(categoryId) {\n      try {\n        const token = localStorage.getItem(\"employerToken\");\n        const response = await fetch(`${globalVariable}/seekers/category/count/${categoryId}`, {\n          headers: {\n            Authorization: `Bearer ${token}`\n          }\n        });\n        const data = await response.json();\n        if (response.ok) {\n          this.userCounts[categoryId] = data.count || 0;\n        } else {\n          console.warn(`Failed to fetch user count for category ${categoryId}`);\n          this.userCounts[categoryId] = 0;\n        }\n      } catch (error) {\n        console.error(`Error fetching user count for category ${categoryId}:`, error);\n        this.userCounts[categoryId] = 0;\n      }\n    }\n  },\n  mounted() {\n    this.fetchCategory();\n    // Add resize listener for responsive pagination\n    window.addEventListener('resize', this.handleResize);\n  },\n  beforeUnmount() {\n    // Clean up resize listener\n    window.removeEventListener('resize', this.handleResize);\n  }\n};","map":{"version":3,"names":["IndexComponent","globalVariable","name","components","data","uploadsUrl","categories","userCounts","message","messageType","defaultImage","require","currentPage","itemsPerPage","computed","responsiveItemsPerPage","window","width","innerWidth","totalPages","Math","ceil","length","paginatedCategories","start","end","slice","visiblePages","pages","total","current","max","min","i","push","methods","getCategoryImage","logo","console","log","trim","handleImageError","event","target","src","changePage","page","scrollTo","top","behavior","handleResize","$nextTick","fetchCategory","token","localStorage","getItem","response","fetch","headers","Authorization","json","ok","category","fetchUserCount","id","error","categoryId","count","warn","mounted","addEventListener","beforeUnmount","removeEventListener"],"sources":["/Users/gentil/Desktop/Kozi-ai-agent/src/views/jobprovider/CategoryComponent.vue"],"sourcesContent":["<template>\n  <IndexComponent />\n  <div\n    class=\"page-wrapper\"\n    id=\"main-wrapper\"\n    data-layout=\"vertical\"\n    data-navbarbg=\"skin6\"\n    data-sidebartype=\"full\"\n    data-sidebar-description=\"fixed\"\n    data-header-description=\"fixed\"\n  >\n     <div class=\"body-wrapper\" style=\"margin-top: -4rem;\">\n      <div class=\"container-fluid\">\n        <div class=\"row\">\n           <h5 class=\"card-title fw-semibold mb-4\" style=\"color: #E960A6;\"><i class=\"ti ti-category-2\"></i>   All Categories</h5>\n        </div>\n\n        <div class=\"row\">\n          <div\n            class=\"col-6 col-sm-6 col-md-4 col-lg-3 col-xl-3 mb-4\"\n            v-for=\"category in paginatedCategories\"\n            :key=\"category.id\"\n          >\n            <router-link :to=\"`/employer/category/${category.id}`\">\n              <div class=\"card h-70 text-center p-3\">\n                <!-- Fixed image display with proper fallback -->\n                <img \n                  :src=\"getCategoryImage(category.logo)\" \n                  :alt=\"category.name\" \n                  class=\"category-logo rounded-circle img-fluid\" \n                  @error=\"handleImageError\"\n                />\n                \n                <div class=\"card-body px-2\">\n                  <h5 class=\"card-title mb-1\"><b>{{ category.name }}</b></h5>\n                  <p class=\"mb-0\">{{ userCounts[category.id] || 0 }}</p>\n\n                  \n                </div>\n              </div>\n            </router-link>\n          </div>\n        </div>\n\n        <!-- Pagination -->\n        <div class=\"row\">\n          <div class=\"col-12\">\n            <nav aria-label=\"Categories pagination\">\n              <ul class=\"pagination justify-content-center\">\n                <!-- Previous Button -->\n                <li class=\"page-item\" :class=\"{ disabled: currentPage === 1 }\">\n                  <a \n                    class=\"page-link\" \n                    href=\"#\" \n                    @click.prevent=\"changePage(currentPage - 1)\"\n                    :tabindex=\"currentPage === 1 ? -1 : 0\"\n                  >\n                    Previous\n                  </a>\n                </li>\n\n                <!-- Page Numbers -->\n                <li \n                  class=\"page-item\" \n                  v-for=\"page in visiblePages\" \n                  :key=\"page\"\n                  :class=\"{ active: page === currentPage }\"\n                >\n                  <a \n                    class=\"page-link\" \n                    href=\"#\" \n                    @click.prevent=\"changePage(page)\"\n                  >\n                    {{ page }}\n                  </a>\n                </li>\n\n                <!-- Next Button -->\n                <li class=\"page-item\" :class=\"{ disabled: currentPage === totalPages }\">\n                  <a \n                    class=\"page-link\" \n                    href=\"#\" \n                    @click.prevent=\"changePage(currentPage + 1)\"\n                    :tabindex=\"currentPage === totalPages ? -1 : 0\"\n                  >\n                    Next\n                  </a>\n                </li>\n              </ul>\n            </nav>\n          </div>\n        </div>\n      </div>\n    </div>\n  </div>\n</template>\n\n<script>\nimport IndexComponent from \"./IndexComponent.vue\";\n\nimport { globalVariable } from \"@/global\";\n\nexport default {\n  name: \"WelcomeComponent\",\n  components: {\n    IndexComponent\n\n  },\n  data() {\n    return {\n      uploadsUrl: globalVariable + \"/uploads/logo/\",\n      categories: [],\n      userCounts: {}, // Store user counts by category id\n      message: \"\",\n      messageType: \"\",\n      defaultImage: require('@/assets/img/user-1.jpg'), // Default fallback image\n      currentPage: 1,\n      itemsPerPage: 12,\n    };\n  },\n  computed: {\n    // Responsive items per page based on screen size\n    responsiveItemsPerPage() {\n      if (typeof window !== 'undefined') {\n        const width = window.innerWidth;\n        if (width < 576) return 4; // Mobile: 2 per row × 2 rows = 4 items\n        if (width < 768) return 6; // Small tablets: 2 per row × 3 rows = 6 items\n        if (width < 992) return 8; // Tablets: 2 per row × 4 rows = 8 items\n        return 12; // Desktop: 4 per row × 3 rows = 12 items\n      }\n      return 12;\n    },\n\n    totalPages() {\n      return Math.ceil(this.categories.length / this.responsiveItemsPerPage);\n    },\n    \n    paginatedCategories() {\n      const start = (this.currentPage - 1) * this.responsiveItemsPerPage;\n      const end = start + this.responsiveItemsPerPage;\n      return this.categories.slice(start, end);\n    },\n\n    visiblePages() {\n      const pages = [];\n      const total = this.totalPages;\n      const current = this.currentPage;\n      \n      // Show maximum 5 page numbers\n      let start = Math.max(1, current - 2);\n      let end = Math.min(total, current + 2);\n      \n      // Adjust if we're near the beginning or end\n      if (end - start < 4) {\n        if (start === 1) {\n          end = Math.min(total, start + 4);\n        } else if (end === total) {\n          start = Math.max(1, end - 4);\n        }\n      }\n      \n      for (let i = start; i <= end; i++) {\n        pages.push(i);\n      }\n      \n      return pages;\n    }\n  },\n  methods: {\n    getCategoryImage(logo) {\n\n      console.log('Logo value:', logo);\n      console.log('Full URL would be:', this.uploadsUrl + logo);\n\n      if (logo && logo.trim() !== '') {\n        return this.uploadsUrl + logo;\n      }\n\n      console.log('Using default image');\n      return this.defaultImage;\n    },\n\n    handleImageError(event) {\n\n      console.log('Image failed to load:', event.target.src);\n\n      event.target.src = this.defaultImage;\n    },\n\n    changePage(page) {\n      if (page >= 1 && page <= this.totalPages) {\n        this.currentPage = page;\n        // Scroll to top when changing pages\n        window.scrollTo({ top: 0, behavior: 'smooth' });\n      }\n    },\n\n    handleResize() {\n      // Reset to first page when screen size changes to prevent empty pages\n      this.$nextTick(() => {\n        if (this.currentPage > this.totalPages) {\n          this.currentPage = 1;\n        }\n      });\n    },\n\n    async fetchCategory() {\n      try {\n        const token = localStorage.getItem(\"employerToken\");\n        if (!token) {\n          this.message = \"Authentication required.\";\n          this.messageType = \"alert-danger\";\n          return;\n        }\n\n        const response = await fetch(`${globalVariable}/name_and_id`, {\n          headers: {\n            Authorization: `Bearer ${token}`,\n          },\n        });\n\n        const data = await response.json();\n\n        if (!response.ok) {\n          this.message = data.message || \"Failed to fetch categories.\";\n          this.messageType = \"alert-danger\";\n        } else {\n          // Debug: Log the fetched categories\n          console.log('Fetched categories:', data);\n          this.categories = data;\n\n          // Fetch user count for each category\n          for (const category of data) {\n            this.fetchUserCount(category.id);\n          }\n        }\n      } catch (error) {\n        console.error(\"Error fetching categories:\", error);\n        this.message = \"Error fetching categories.\";\n        this.messageType = \"alert-danger\";\n      }\n    },\n\n    async fetchUserCount(categoryId) {\n      try {\n        const token = localStorage.getItem(\"employerToken\");\n\n        const response = await fetch(\n          `${globalVariable}/seekers/category/count/${categoryId}`,\n          {\n            headers: {\n              Authorization: `Bearer ${token}`,\n            },\n          }\n        );\n\n        const data = await response.json();\n\n        if (response.ok) {\n          this.userCounts[categoryId] = data.count || 0;\n        } else {\n          console.warn(`Failed to fetch user count for category ${categoryId}`);\n          this.userCounts[categoryId] = 0;\n        }\n      } catch (error) {\n        console.error(`Error fetching user count for category ${categoryId}:`, error);\n        this.userCounts[categoryId] = 0;\n      }\n    },\n  },\n  mounted() {\n    this.fetchCategory();\n    // Add resize listener for responsive pagination\n    window.addEventListener('resize', this.handleResize);\n  },\n  \n  beforeUnmount() {\n    // Clean up resize listener\n    window.removeEventListener('resize', this.handleResize);\n  },\n};\n</script>\n\n<style scoped>\n/* Responsive Card Styles */\n.card {\n  transition: box-shadow 0.3s ease;\n  height: 100%;\n  min-height: 280px;\n}\n\n.card:hover {\n  box-shadow: 0 4px 15px rgba(0, 0, 0, 0.1);\n}\n\n.card img {\n  object-fit: cover;\n  max-width: 100%;\n  height: auto;\n  aspect-ratio: 1;\n}\n\n.category-logo {\n  transition: transform 0.3s ease;\n  border: 2px solid #f0f0f0;\n  width: 100%;\n  max-width: 180px;\n  height: auto;\n  margin: 0 auto;\n}\n\n.category-logo:hover {\n  transform: scale(1.05);\n}\n\n.card-title {\n  font-size: 1rem;\n  line-height: 1.2;\n}\n\n/* Mobile Responsive Styles */\n@media (max-width: 575.98px) {\n  .card {\n    min-height: 220px;\n  }\n  \n  .category-logo {\n    max-width: 120px;\n  }\n  \n  .card-title {\n    font-size: 0.9rem;\n  }\n  \n  .card-body {\n    padding: 0.75rem 0.5rem;\n  }\n  \n  .pagination {\n    margin-top: 1rem;\n  }\n  \n  .page-link {\n    padding: 0.375rem 0.5rem;\n    font-size: 0.875rem;\n  }\n}\n\n/* Small tablets */\n@media (min-width: 576px) and (max-width: 767.98px) {\n  .card {\n    min-height: 250px;\n  }\n  \n  .category-logo {\n    max-width: 150px;\n  }\n}\n\n/* Tablets */\n@media (min-width: 768px) and (max-width: 991.98px) {\n  .card {\n    min-height: 260px;\n  }\n  \n  .category-logo {\n    max-width: 160px;\n  }\n}\n\n/* Desktop */\n@media (min-width: 992px) {\n  .card {\n    min-height: 280px;\n  }\n  \n  .category-logo {\n    max-width: 180px;\n  }\n}\n\n/* Pagination Styles */\n.pagination {\n  margin-top: 2rem;\n  flex-wrap: wrap;\n  justify-content: center;\n}\n\n.page-link {\n  color: #E960A6;\n  border-color: #E960A6;\n  padding: 0.5rem 0.75rem;\n  margin: 0.125rem;\n  border-radius: 0.375rem;\n  min-width: 44px;\n  text-align: center;\n}\n\n.page-link:hover {\n  color: #fff;\n  background-color: #E960A6;\n  border-color: #E960A6;\n}\n\n.page-item.active .page-link {\n  background-color: #E960A6;\n  border-color: #E960A6;\n  color: #fff;\n}\n\n.page-item.disabled .page-link {\n  color: #6c757d;\n  background-color: #fff;\n  border-color: #dee2e6;\n}\n\n.page-item.disabled .page-link:hover {\n  color: #6c757d;\n  background-color: #fff;\n  border-color: #dee2e6;\n}\n\n/* Responsive Pagination */\n\n\n@media (min-width: 576px) and (max-width: 767.98px) {\n  .page-link {\n    padding: 0.4rem 0.6rem;\n    font-size: 0.9rem;\n    min-width: 40px;\n  }\n}\n</style>"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}