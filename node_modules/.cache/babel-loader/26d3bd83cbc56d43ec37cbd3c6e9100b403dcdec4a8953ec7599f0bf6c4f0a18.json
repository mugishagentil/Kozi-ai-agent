{"ast":null,"code":"import \"core-js/modules/web.dom-exception.stack.js\";\nimport axios from \"axios\";\nimport { globalVariable } from \"@/global\";\nimport IndexComponent from \"./IndexComponent.vue\";\nexport default {\n  name: \"MainWrapper\",\n  components: {\n    IndexComponent\n  },\n  data() {\n    return {\n      userEmail: null,\n      users_id: null,\n      currentPassword: \"\",\n      newPassword: \"\",\n      confirmPassword: \"\",\n      passwordMessage: \"\",\n      passwordMessageClass: \"\",\n      feedback: \"\",\n      feedbackColor: \"green\",\n      loading: false\n    };\n  },\n  computed: {\n    applyStatusClass() {\n      return this.feedbackColor === \"green\" ? \"alert-success\" : \"alert-danger\";\n    }\n  },\n  mounted() {\n    const token = localStorage.getItem(\"employerToken\");\n    if (token) {\n      try {\n        const payload = JSON.parse(atob(token.split('.')[1]));\n        this.userEmail = payload.email;\n        this.getUserIdFromEmail();\n      } catch (e) {\n        console.error(\"Invalid JWT token:\", e);\n      }\n    }\n  },\n  methods: {\n    async getUserIdFromEmail() {\n      const token = localStorage.getItem(\"employerToken\");\n      if (!token || !this.userEmail) return;\n      try {\n        const res = await fetch(`${globalVariable}/get_user_id_by_email/${this.userEmail}`, {\n          headers: {\n            Authorization: `Bearer ${token}`\n          }\n        });\n        const data = await res.json();\n        if (res.ok) {\n          this.users_id = data.users_id;\n        } else {\n          this.feedback = data.message || \"Unable to get user ID.\";\n          this.feedbackColor = \"red\";\n        }\n      } catch (err) {\n        console.error(\"Error getting users_id:\", err);\n        this.feedback = \"Failed to fetch user ID.\";\n        this.feedbackColor = \"red\";\n      }\n    },\n    async changePassword() {\n      if (this.newPassword !== this.confirmPassword) {\n        this.passwordMessage = \"New passwords do not match.\";\n        this.passwordMessageClass = \"text-danger\";\n        return;\n      }\n      this.loading = true;\n      try {\n        const token = localStorage.getItem(\"employerToken\");\n        const response = await axios.post(`${globalVariable}/change-password`, {\n          current_password: this.currentPassword,\n          new_password: this.newPassword,\n          confirm_password: this.confirmPassword\n        }, {\n          headers: {\n            Authorization: `Bearer ${token}`\n          }\n        });\n        if (response.data.success) {\n          this.passwordMessage = response.data.message;\n          this.passwordMessageClass = \"text-success\";\n          this.currentPassword = \"\";\n          this.newPassword = \"\";\n          this.confirmPassword = \"\";\n        } else {\n          this.passwordMessage = response.data.message;\n          this.passwordMessageClass = \"text-danger\";\n        }\n      } catch (error) {\n        console.error(\"Error:\", error);\n        this.passwordMessage = error.response?.data?.message || \"An error occurred.\";\n        this.passwordMessageClass = \"text-danger\";\n      } finally {\n        this.loading = false;\n      }\n    }\n  }\n};","map":{"version":3,"names":["axios","globalVariable","IndexComponent","name","components","data","userEmail","users_id","currentPassword","newPassword","confirmPassword","passwordMessage","passwordMessageClass","feedback","feedbackColor","loading","computed","applyStatusClass","mounted","token","localStorage","getItem","payload","JSON","parse","atob","split","email","getUserIdFromEmail","e","console","error","methods","res","fetch","headers","Authorization","json","ok","message","err","changePassword","response","post","current_password","new_password","confirm_password","success"],"sources":["/Users/gentil/Desktop/Kozi-ai-agent/src/views/jobprovider/ChangePassword.vue"],"sourcesContent":["<template>\n  <IndexComponent />\n  <div\n    class=\"page-wrapper\"\n    id=\"main-wrapper\"\n    data-layout=\"vertical\"\n    data-navbarbg=\"skin6\"\n    data-sidebartype=\"full\"\n    data-sidebar-description=\"fixed\"\n    data-header-description=\"fixed\"\n    style=\"position: absolute; top: 0; left: 0; right: 0; bottom: 0; z-index: 1;\"\n  >\n     <div class=\"body-wrapper\" style=\"margin-top: 70px; margin-left: 270px; background: white; min-height: calc(100vh - 70px); padding: 20px; overflow-y: auto; max-height: calc(100vh - 70px);\">\n      <h2 style=\"margin-left:2rem;margin-right:2rem;\">Change Password</h2>\n      <form @submit.prevent=\"changePassword\" style=\"margin-left:2rem;margin-right:2rem;\">\n        <div class=\"form-group\">\n          <label for=\"current_password\" class=\"form-label\">Current password:</label>\n          <input\n            type=\"password\"\n            v-model=\"currentPassword\"\n            class=\"form-control\"\n            id=\"current_password\"\n            required\n          />\n        </div>\n        <div class=\"form-group\">\n          <label for=\"new_password\" class=\"form-label\">New password:</label>\n          <input\n            type=\"password\"\n            v-model=\"newPassword\"\n            class=\"form-control\"\n            id=\"new_password\"\n            required\n          />\n        </div>\n        <div class=\"form-group\">\n          <label for=\"confirm_password\" class=\"form-label\">Confirm New Password:</label>\n          <input\n            type=\"password\"\n            v-model=\"confirmPassword\"\n            class=\"form-control\"\n            id=\"confirm_password\"\n            required\n          />\n        </div>\n        <button type=\"submit\" class=\"btn btn-primary\" :disabled=\"loading\">\n          {{ loading ? 'Changing...' : 'Change' }}\n        </button>\n        <br><br>\n        <p class=\"alert alert-danger\" v-if=\"passwordMessage\" :class=\"passwordMessageClass\" style=\"margin-left:5rem;\">\n        {{ passwordMessage }}\n      </p>\n      </form>\n\n      \n    </div>\n  </div>\n</template>\n\n<script>\nimport axios from \"axios\";\nimport { globalVariable } from \"@/global\";\nimport IndexComponent from \"./IndexComponent.vue\";\n\nexport default {\n  name: \"MainWrapper\",\n  components: {\n    IndexComponent,\n  },\n  data() {\n    return {\n      userEmail: null,\n      users_id: null,\n      currentPassword: \"\",\n      newPassword: \"\",\n      confirmPassword: \"\",\n      passwordMessage: \"\",\n      passwordMessageClass: \"\",\n      feedback: \"\",\n      feedbackColor: \"green\",\n      loading: false,\n    };\n  },\n  computed: {\n    applyStatusClass() {\n      return this.feedbackColor === \"green\" ? \"alert-success\" : \"alert-danger\";\n    },\n  },\n  mounted() {\n    const token = localStorage.getItem(\"employerToken\");\n    if (token) {\n      try {\n        const payload = JSON.parse(atob(token.split('.')[1]));\n        this.userEmail = payload.email;\n        this.getUserIdFromEmail();\n      } catch (e) {\n        console.error(\"Invalid JWT token:\", e);\n      }\n    }\n  },\n  methods: {\n    async getUserIdFromEmail() {\n      const token = localStorage.getItem(\"employerToken\");\n      if (!token || !this.userEmail) return;\n\n      try {\n        const res = await fetch(`${globalVariable}/get_user_id_by_email/${this.userEmail}`, {\n          headers: { Authorization: `Bearer ${token}` },\n        });\n        const data = await res.json();\n        if (res.ok) {\n          this.users_id = data.users_id;\n        } else {\n          this.feedback = data.message || \"Unable to get user ID.\";\n          this.feedbackColor = \"red\";\n        }\n      } catch (err) {\n        console.error(\"Error getting users_id:\", err);\n        this.feedback = \"Failed to fetch user ID.\";\n        this.feedbackColor = \"red\";\n      }\n    },\n\n    async changePassword() {\n      if (this.newPassword !== this.confirmPassword) {\n        this.passwordMessage = \"New passwords do not match.\";\n        this.passwordMessageClass = \"text-danger\";\n        return;\n      }\n\n      this.loading = true;\n\n      try {\n        const token = localStorage.getItem(\"employerToken\");\n\n        const response = await axios.post(\n          `${globalVariable}/change-password`,\n          {\n            current_password: this.currentPassword,\n            new_password: this.newPassword,\n            confirm_password: this.confirmPassword,\n          },\n          {\n            headers: {\n              Authorization: `Bearer ${token}`,\n            },\n          }\n        );\n\n        if (response.data.success) {\n          this.passwordMessage = response.data.message;\n          this.passwordMessageClass = \"text-success\";\n          this.currentPassword = \"\";\n          this.newPassword = \"\";\n          this.confirmPassword = \"\";\n        } else {\n          this.passwordMessage = response.data.message;\n          this.passwordMessageClass = \"text-danger\";\n        }\n      } catch (error) {\n        console.error(\"Error:\", error);\n        this.passwordMessage =\n          error.response?.data?.message || \"An error occurred.\";\n        this.passwordMessageClass = \"text-danger\";\n      } finally {\n        this.loading = false;\n      }\n    },\n  },\n};\n</script>\n\n\n\n  \n  \n  \n  <style scoped>\n    .modal-overlay {\n        position: fixed;\n        top: 0;\n        left: 0;\n        width: 100%;\n        height: 100%;\n        background: rgba(0, 0, 0, 0.5);\n        display: flex;\n        justify-content: center;\n        align-items: center;\n        z-index: 1000;\n      }\n      \n      /* Modal content styling */\n      .modal-content {\n        background-color: white;\n        padding: 20px;\n        border-radius: 8px;\n        text-align: center;\n        width: 300px;\n      }\n    \n      .container-fluid {\n        max-width: 800px;\n        margin: auto;\n        padding: 20px;\n        background-color: #ffffff;\n        border-radius: 8px;\n        box-shadow: 0 8px 30px rgba(0, 0, 0, 0.2);\n      }\n      \n      h5 {\n        color: #333;\n        margin-bottom: 20px;\n      }\n      \n      .form-control {\n        width: 100%;\n        padding: 15px;\n        height: 50px;\n        border: 1px solid #ccc;\n        border-radius: 5px;\n        box-sizing: border-box;\n        transition: border-color 0.3s, box-shadow 0.3s;\n        font-size: 16px;\n      }\n      \n      .form-control:focus {\n        border-color: black;\n        box-shadow: 0 0 5px rgba(0, 123, 255, 0.5);\n        outline: none;\n      }\n      \n      .form-label {\n        font-weight: bold;\n        margin-bottom: 5px;\n        display: block;\n      }\n      \n      .btn-primary {\n        background-color:white;\n        color: black;\n        \n      }\n      \n      .btn-primary:hover {\n        background-color: #EA60A7;\n        color: white;\n        border: none;\n      }\n      \n      \n      .form-group {\n        margin-bottom: 15px;\n      }\n      \n      \n      </style>\n      "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}