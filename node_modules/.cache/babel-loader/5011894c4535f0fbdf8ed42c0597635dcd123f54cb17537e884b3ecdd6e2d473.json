{"ast":null,"code":"export default {\n  data() {\n    return {\n      isRegistering: false,\n      recaptchaSiteKey: '6Lc-YLMqAAAAABmJD7EYyZYjbRPCzX4M4eiia-nY',\n      loginForm: {\n        email: '',\n        password: ''\n      },\n      registerForm: {\n        email: '',\n        telephone: '',\n        first_name: '',\n        last_name: '',\n        password: ''\n      },\n      registerFields: [{\n        name: 'email',\n        placeholder: 'Email',\n        type: 'email',\n        icon: 'bx bxs-envelope'\n      }, {\n        name: 'telephone',\n        placeholder: 'Telephone',\n        type: 'text',\n        icon: 'bx bxs-phone'\n      }, {\n        name: 'first_name',\n        placeholder: 'First Name',\n        type: 'text',\n        icon: 'bx bxs-user'\n      }, {\n        name: 'last_name',\n        placeholder: 'Last Name',\n        type: 'text',\n        icon: 'bx bxs-user'\n      }, {\n        name: 'password',\n        placeholder: 'Password',\n        type: 'password',\n        icon: 'bx bxs-lock-alt'\n      }]\n    };\n  },\n  methods: {\n    async handleLogin() {\n      const response = await this.verifyRecaptcha();\n      if (!response.success) {\n        alert(\"reCAPTCHA verification failed. Please try again.\");\n        return;\n      }\n      // Replace with actual login API call\n      console.log(\"Logging in with:\", this.loginForm);\n    },\n    async handleRegister() {\n      const response = await this.verifyRecaptcha();\n      if (!response.success) {\n        alert(\"reCAPTCHA verification failed. Please try again.\");\n        return;\n      }\n      // Replace with actual register API call\n      console.log(\"Registering with:\", this.registerForm);\n    }\n  }\n};","map":{"version":3,"names":["data","isRegistering","recaptchaSiteKey","loginForm","email","password","registerForm","telephone","first_name","last_name","registerFields","name","placeholder","type","icon","methods","handleLogin","response","verifyRecaptcha","success","alert","console","log","handleRegister"],"sources":["/Users/gentil/Desktop/Kozi-ai-agent/src/views/Login2Component.vue"],"sourcesContent":["<template>\n    <div class=\"container\" :class=\"{ active: isRegistering }\">\n      <!-- Login Form -->\n      <div class=\"form-box login\">\n        <form @submit.prevent=\"handleLogin\">\n          <h1>Login</h1>\n          <div class=\"input-box\">\n            <input type=\"email\" v-model=\"loginForm.email\" placeholder=\"Email\" required />\n            <i class=\"bx bxs-envelope\"></i>\n          </div>\n          <div class=\"input-box\">\n            <input type=\"password\" v-model=\"loginForm.password\" placeholder=\"Password\" required />\n            <i class=\"bx bxs-lock-alt\"></i>\n          </div>\n          <div class=\"recaptcha\">\n            <div class=\"g-recaptcha\" :data-sitekey=\"recaptchaSiteKey\"></div>\n          </div>\n          <button class=\"btn\" type=\"submit\">Login</button>\n          <div class=\"social-icons\">\n            <button class=\"google-button\" type=\"button\">\n              <img src=\"img/google.png\" alt=\"Google Login\" />\n            </button>\n          </div>\n        </form>\n      </div>\n  \n      <!-- Register Form -->\n      <div class=\"form-box register\">\n        <form @submit.prevent=\"handleRegister\">\n          <h1>Registration</h1>\n          <div class=\"input-box\" v-for=\"field in registerFields\" :key=\"field.name\">\n            <input :type=\"field.type\" v-model=\"registerForm[field.name]\" :placeholder=\"field.placeholder\" required />\n            <i :class=\"field.icon\"></i>\n          </div>\n          <div class=\"recaptcha\">\n            <div class=\"g-recaptcha\" :data-sitekey=\"recaptchaSiteKey\"></div>\n          </div>\n          <button class=\"btn\" type=\"submit\">Register</button>\n          <div class=\"social-icons\">\n            <button class=\"google-button\" type=\"button\">\n              <img src=\"img/google.png\" alt=\"Google Login\" />\n            </button>\n          </div>\n        </form>\n      </div>\n  \n      <!-- Toggle Panel -->\n      <div class=\"toggle-box\">\n        <div class=\"toggle-panel toggle-left\">\n          <h1>Hello, Welcome!</h1>\n          <p>Don't have an Account?</p>\n          <button class=\"btn\" @click=\"isRegistering = true\">Register</button>\n        </div>\n        <div class=\"toggle-panel toggle-right\">\n          <h1>Welcome back!</h1>\n          <p>Already have an Account?</p>\n          <button class=\"btn\" @click=\"isRegistering = false\">Login</button>\n        </div>\n      </div>\n    </div>\n  </template>\n  \n  <script>\n  export default {\n    data() {\n      return {\n        isRegistering: false,\n        recaptchaSiteKey: '6Lc-YLMqAAAAABmJD7EYyZYjbRPCzX4M4eiia-nY',\n        loginForm: {\n          email: '',\n          password: '',\n        },\n        registerForm: {\n          email: '',\n          telephone: '',\n          first_name: '',\n          last_name: '',\n          password: '',\n        },\n        registerFields: [\n          { name: 'email', placeholder: 'Email', type: 'email', icon: 'bx bxs-envelope' },\n          { name: 'telephone', placeholder: 'Telephone', type: 'text', icon: 'bx bxs-phone' },\n          { name: 'first_name', placeholder: 'First Name', type: 'text', icon: 'bx bxs-user' },\n          { name: 'last_name', placeholder: 'Last Name', type: 'text', icon: 'bx bxs-user' },\n          { name: 'password', placeholder: 'Password', type: 'password', icon: 'bx bxs-lock-alt' },\n        ]\n      };\n    },\n    methods: {\n      async handleLogin() {\n        const response = await this.verifyRecaptcha();\n        if (!response.success) {\n          alert(\"reCAPTCHA verification failed. Please try again.\");\n          return;\n        }\n        // Replace with actual login API call\n        console.log(\"Logging in with:\", this.loginForm);\n      },\n      async handleRegister() {\n        const response = await this.verifyRecaptcha();\n        if (!response.success) {\n          alert(\"reCAPTCHA verification failed. Please try again.\");\n          return;\n        }\n        // Replace with actual register API call\n        console.log(\"Registering with:\", this.registerForm);\n      },\n      \n    }\n  };\n  </script>\n  \n  <style scoped>\n  \n  @import url('https://unpkg.com/boxicons@2.1.4/css/boxicons.min.css');\n\n  .google-button {\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  gap: 8px; /* Space between the icon and text */\n  background-color: #BDBFC2; /* Google blue */\n  color: #fff;\n  border: none;\n  border-radius: 5px;\n  height: 40px; /* Set the button height */\n  width: 250px; /* Set the button width */\n  font-size: 16px;\n  font-family: Arial, sans-serif;\n  cursor: pointer;\n  transition: background-color 0.3s ease, transform 0.2s ease;\n  box-shadow: 0 4px 6px rgba(0, 0, 0, 0.1);\n  padding-top:-7px;\n}\n\n.social-icons .google-button:hover {\n  background-color: #3367D6; /* Darker Google blue on hover */\n  transform: translateY(-2px);\n}\n\n.social-icons .google-button:active {\n  transform: translateY(0); /* Reset when clicked */\n}\n\n.social-icons .google-icon img{\n  width: 20px;\n  height: 20px;\n}\n.google-button img{\n    width: 20px;\n  height: 20px;\n}\n\n.btn-text {\n    text-decoration: none;\n    color: inherit; \n}\n\n\n@media screen and (max-width: 600px) {\n    form {\n        text-align: center;\n    }\n\n    .google-button {\n        display: flex;\n        align-items: center;\n        justify-content: center;\n        margin: 0 auto;\n        margin-top: 1rem;\n        padding: 10px 20px;\n        border: 1px solid #ccc;\n        border-radius: 5px;\n        background-color: #fff;\n        cursor: pointer;\n        text-align: center;\n        width: fit-content;\n    }\n\n    .google-icon {\n        width: 20px;\n        height: 20px;\n        margin-right: 10px;\n    }\n\n    .btn-text {\n        text-decoration: none;\n        color: #000;\n        font-weight: bold;\n    }\n}\n\n\n  *{\n    margin: 0;\n    padding: 0;\n    box-sizing: border-box;\n    font-family: 'Poppins', sans-serif;\n}\n\nbody{\n    display: flex;\n    justify-content: center;\n    align-items: center;\n    min-height: 100vh;\n    background: linear-gradient(90deg, #e2e2e2, #c9d6ff);\n}\n\n.container{\n    position: relative;\n    width : 950px;\n    height : 550px;\n    background : #fff;\n    border-radius : 30px;\n    box-shadow : 0 0 30px rgba(0, 0, 0, .2);\n    overflow: hidden;\n    margin: 20px;\n}\n\n.form-box{\n    position: absolute;\n    right: 0;\n    width: 50%;\n    height: 100%;\n    background: #fff;\n    display: flex;\n    align-items: center;\n    color: #333;\n    text-align: center;\n   \n    z-index: 1;\n    transition: .6s ease-in-out 1.2s, visibility 0s 1s;\n}\n\n.container.active .form-box{\n    right: 50%;\n}\n\n.form-box.register{\n    visibility: hidden;\n}\n\n.container.active .form-box.register{\n    visibility: visible;\n}\n\nform{\n    width: 100%;\n}\n\n.container h1{\n    font-size: 36px;\n    margin: -10px 0;\n}\n\n.input-box{\n    position: relative;\n    margin: 10px 0;\n}\n\n.input-box input{\n    width: 80%;\n    padding: 13px 0px 13px 20px;\n    background: #eee;\n    border-radius: 8px;\n    border: none;\n    outline: none;\n    font-size: 16px;\n    color: #333;\n    font-weight: 500;\n}\n\n.input-box input::placeholder {\n    color: #888;\n    font-weight: 400;\n\n}\n\n.input-box i{\n    position: absolute;\n    right: 20px;\n    top: 50%;\n    transform: translateY(-50%);\n}\n\n.forgot-link{\n    margin: -15px 0 15px;\n}\n\n.forgot-link a{\n    font-size: 14.5px;\n    color: #333;\n    text-decoration: none;\n}\n\n.btn{\n    width: 50%;\n    height: 48px;\n    background: cadetblue;\n    border-radius: 8px;\n    box-shadow: 0 0 10px rgba(0, 0, 0, .1);\n    border: none;\n    cursor: pointer;\n    font-size: 16px;\n    color: #fff;\n    font-weight: 600;\n}\n\n.container p{\n    font-size: 14.5px;\n    margin: 15px 0;\n}\n\n.social-icons{\n    display: flex;\n    justify-content: center;\n}\n\n.social-icons a{\n    display: inline-flex;\n    padding: 10px;\n    border: 2px solid #ccc;\n    border-radius: 8px;\n    font-size: 24px;\n    color: #333;\n    text-decoration: none;\n    margin: 0 8px;\n}\n\n.toggle-box{\n    position: absolute;\n    width: 100%;\n    height: 100%;\n}\n\n.toggle-box::before{\n    content: '';\n    position: absolute;\n    left: -250%;\n    width: 300%;\n    height: 100%;\n    background: #EA60A7;\n    border-radius: 150px;\n    z-index: 2;\n    transition: 1.8s ease-in-out;\n}\n\n.container.active .toggle-box::before{\n    left: 50%;\n}\n\n.toggle-panel{\n    position: absolute;\n    width: 50%;\n    height: 100%;\n    color: #fff;\n    display: flex;\n    flex-direction: column;\n    justify-content: center;\n    align-items: center;\n    z-index: 2;\n    transition: .6s ease-in-out;\n}\n\n.toggle-panel.toggle-left{\n    left: 0;\n    transition-delay: 1.2s;\n}\n\n.container.active .toggle-panel.toggle-left{\n    left: -50%;\n    transition-delay: .6s;\n}\n\n.toggle-panel.toggle-right{\n    right: -50%;\n    transition-delay: .6s;\n}\n\n.container.active .toggle-panel.toggle-right{\n    right: 0;\n    transition-delay: 1.2s;\n}\n\n.toggle-panel p{\n    margin-bottom: 20px;\n}\n\n.toggle-panel .btn{\n    width: 160px;\n    height: 46px;\n    background: transparent;\n    border: 2px solid #fff;\n    box-shadow: none;\n}\n\n@media screen and (max-width: 650px) {\n    \n    .container{\n    position: relative;\n    width : 1000px;\n    height : 850px;\n    background : #fff;\n    border-radius : 30px;\n    box-shadow : 0 0 30px rgba(0, 0, 0, .2);\n    overflow: hidden;\n    margin: 20px;\n}\n\n    .form-box{\n        bottom: 0;\n        width: 100%;\n        height: 50%;\n    }\n\n    .container.active .form-box{\n        right: 0;\n        bottom: 30%;\n    }\n\n    .toggle-box::before{\n        left: 0;\n        top: -270%;\n        width: 100%;\n        height: 300%;\n        border-radius: 20vw;\n    }\n\n    .container.active .toggle-box::before{\n        left: 0;\n        top: 70%;\n    }\n\n    .toggle-panel{\n        width: 100%;\n        height: 30%;\n    }\n\n    .toggle-panel.toggle-left{\n        top: 0;\n    }\n\n    .container.active .toggle-panel.toggle-left{\n        top: -30%;\n        left: 0;\n    }\n\n    .toggle-panel.toggle-right{\n        right: 0;\n        bottom: -30%;\n    }\n\n    .container.active .toggle-panel.toggle-right{\n        bottom: 0;\n    }\n}\n\n@media screen and (max-width:400px){\n    .form-box{\n        padding: 20px;\n    }\n\n    .toggle-panel h1{\n        font-size: 30px;\n    }\n}\n\n\n    @media (max-width: 480px) {\n        .g-recaptcha {\n            transform: scale(0.80); \n            max-width: 300px; \n        }\n    }\n\n\n  </style>\n  "],"mappings":"AA+DE,eAAe;EACbA,IAAIA,CAAA,EAAG;IACL,OAAO;MACLC,aAAa,EAAE,KAAK;MACpBC,gBAAgB,EAAE,0CAA0C;MAC5DC,SAAS,EAAE;QACTC,KAAK,EAAE,EAAE;QACTC,QAAQ,EAAE;MACZ,CAAC;MACDC,YAAY,EAAE;QACZF,KAAK,EAAE,EAAE;QACTG,SAAS,EAAE,EAAE;QACbC,UAAU,EAAE,EAAE;QACdC,SAAS,EAAE,EAAE;QACbJ,QAAQ,EAAE;MACZ,CAAC;MACDK,cAAc,EAAE,CACd;QAAEC,IAAI,EAAE,OAAO;QAAEC,WAAW,EAAE,OAAO;QAAEC,IAAI,EAAE,OAAO;QAAEC,IAAI,EAAE;MAAkB,CAAC,EAC/E;QAAEH,IAAI,EAAE,WAAW;QAAEC,WAAW,EAAE,WAAW;QAAEC,IAAI,EAAE,MAAM;QAAEC,IAAI,EAAE;MAAe,CAAC,EACnF;QAAEH,IAAI,EAAE,YAAY;QAAEC,WAAW,EAAE,YAAY;QAAEC,IAAI,EAAE,MAAM;QAAEC,IAAI,EAAE;MAAc,CAAC,EACpF;QAAEH,IAAI,EAAE,WAAW;QAAEC,WAAW,EAAE,WAAW;QAAEC,IAAI,EAAE,MAAM;QAAEC,IAAI,EAAE;MAAc,CAAC,EAClF;QAAEH,IAAI,EAAE,UAAU;QAAEC,WAAW,EAAE,UAAU;QAAEC,IAAI,EAAE,UAAU;QAAEC,IAAI,EAAE;MAAkB,CAAC;IAE5F,CAAC;EACH,CAAC;EACDC,OAAO,EAAE;IACP,MAAMC,WAAWA,CAAA,EAAG;MAClB,MAAMC,QAAO,GAAI,MAAM,IAAI,CAACC,eAAe,CAAC,CAAC;MAC7C,IAAI,CAACD,QAAQ,CAACE,OAAO,EAAE;QACrBC,KAAK,CAAC,kDAAkD,CAAC;QACzD;MACF;MACA;MACAC,OAAO,CAACC,GAAG,CAAC,kBAAkB,EAAE,IAAI,CAACnB,SAAS,CAAC;IACjD,CAAC;IACD,MAAMoB,cAAcA,CAAA,EAAG;MACrB,MAAMN,QAAO,GAAI,MAAM,IAAI,CAACC,eAAe,CAAC,CAAC;MAC7C,IAAI,CAACD,QAAQ,CAACE,OAAO,EAAE;QACrBC,KAAK,CAAC,kDAAkD,CAAC;QACzD;MACF;MACA;MACAC,OAAO,CAACC,GAAG,CAAC,mBAAmB,EAAE,IAAI,CAAChB,YAAY,CAAC;IACrD;EAEF;AACF,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}