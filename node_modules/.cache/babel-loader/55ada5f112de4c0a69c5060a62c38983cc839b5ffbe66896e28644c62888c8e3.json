{"ast":null,"code":"import \"core-js/modules/web.dom-exception.stack.js\";\nimport { globalVariable } from \"@/global\";\nimport IndexComponent from \"./IndexComponent.vue\";\nexport default {\n  components: {\n    IndexComponent\n  },\n  data() {\n    return {\n      job: null,\n      isApplying: false,\n      applyMessage: null,\n      applyStatusClass: \"\",\n      userEmail: null,\n      userId: null\n    };\n  },\n  async mounted() {\n    this.fetchJobDetails();\n    this.getUserEmail();\n    await this.fetchUserId();\n  },\n  methods: {\n    async fetchJobDetails() {\n      const jobId = this.$route.params.job_id;\n      try {\n        const token = localStorage.getItem(\"employeeToken\");\n        const response = await fetch(`${globalVariable}/admin/select_job/${jobId}`, {\n          headers: {\n            Authorization: `Bearer ${token}`\n          }\n        });\n        const data = await response.json();\n        if (!response.ok) {\n          console.error(\"Failed to fetch job:\", data.message);\n        } else {\n          this.job = data;\n        }\n      } catch (error) {\n        console.error(\"Error fetching job:\", error);\n      }\n    },\n    formatDate(dateStr) {\n      const date = new Date(dateStr);\n      return date.toLocaleDateString(\"en-US\", {\n        year: \"numeric\",\n        month: \"long\",\n        day: \"numeric\"\n      });\n    },\n    async applyForJob() {\n      this.isApplying = true;\n      this.applyMessage = null;\n      try {\n        const token = localStorage.getItem(\"employeeToken\");\n        const response = await fetch(`${globalVariable}/seeker/apply`, {\n          method: \"POST\",\n          headers: {\n            \"Content-Type\": \"application/json\",\n            Authorization: `Bearer ${token}`\n          },\n          body: JSON.stringify({\n            job_id: this.job?.job_id,\n            users_id: this.userId,\n            user_email: this.userEmail,\n            company: this.job?.company\n          })\n        });\n        const result = await response.json();\n        if (!response.ok) {\n          this.applyMessage = result.message || \"Failed to apply.\";\n          this.applyStatusClass = \"alert-danger\";\n        } else {\n          this.applyMessage = result.message;\n          this.applyStatusClass = \"alert-success\";\n        }\n      } catch (error) {\n        console.error(\"Error applying for job:\", error);\n        this.applyMessage = \"An error occurred while applying.\";\n        this.applyStatusClass = \"text-danger\";\n      } finally {\n        this.isApplying = false;\n      }\n    },\n    getUserEmail() {\n      const token = localStorage.getItem(\"employeeToken\");\n      if (token) {\n        const payload = token.split('.')[1];\n        const decodedPayload = atob(payload);\n        const parsedPayload = JSON.parse(decodedPayload);\n        this.userEmail = parsedPayload.email;\n      }\n    },\n    async fetchUserId() {\n      const email = this.userEmail;\n      const token = localStorage.getItem(\"employeeToken\");\n      if (email && token) {\n        try {\n          const response = await fetch(`${globalVariable}/get_user_id_by_email/${email}`, {\n            headers: {\n              Authorization: `Bearer ${token}`\n            }\n          });\n          const data = await response.json();\n          if (response.ok) {\n            this.userId = data.users_id;\n          } else {\n            console.error(\"Error fetching user ID:\", data.message);\n          }\n        } catch (error) {\n          console.error(\"Error fetching user ID:\", error);\n        }\n      }\n    }\n  }\n};","map":{"version":3,"names":["globalVariable","IndexComponent","components","data","job","isApplying","applyMessage","applyStatusClass","userEmail","userId","mounted","fetchJobDetails","getUserEmail","fetchUserId","methods","jobId","$route","params","job_id","token","localStorage","getItem","response","fetch","headers","Authorization","json","ok","console","error","message","formatDate","dateStr","date","Date","toLocaleDateString","year","month","day","applyForJob","method","body","JSON","stringify","users_id","user_email","company","result","payload","split","decodedPayload","atob","parsedPayload","parse","email"],"sources":["/Users/gentil/Desktop/Kozi-ai-agent/src/views/jobseeker/JobDetails.vue"],"sourcesContent":["<template>\n  <IndexComponent />\n  <div\n    class=\"page-wrapper\"\n    id=\"main-wrapper\"\n    data-layout=\"vertical\"\n    data-navbarbg=\"skin6\"\n    data-sidebartype=\"full\"\n    data-sidebar-description=\"fixed\"\n    data-header-description=\"fixed\"\n    style=\"position: absolute; top: 0; left: 0; right: 0; bottom: 0; z-index: 1;\"\n  >\n     <div class=\"body-wrapper\" style=\"margin-top: 70px; margin-left: 270px; background: white; min-height: calc(100vh - 70px); padding: 20px; overflow-y: auto; max-height: calc(100vh - 70px);\">\n      <div class=\"container-fluid\">\n        <div class=\"row\">\n          <div id=\"about\" class=\"section wb\">\n            <div v-if=\"userEmail\" class=\"mx-4 mb-4\">\n        <!-- <p><strong>Your email:</strong> {{ userEmail }}</p>\n        <p><strong>users_id:</strong> {{ userId }}</p> -->\n      </div>\n            <div class=\"container\">\n              <div v-if=\"job\" class=\"job-details\">\n                <div class=\"section-title text-center\">\n                  <h3 style=\"font-family: 'Michroma';\">{{ job.job_title }} - {{ job.location }}</h3>\n                  <p class=\"lead\" style=\"color: darkblue;\">\n                    <strong>Job Opportunity at: {{ job.company }}</strong> <br />\n                    <strong>Published Date: {{ formatDate(job.published_date) }}</strong><br />\n                    <strong>Application Deadline: {{ formatDate(job.deadline_date) }}</strong><br>\n                     <!-- Salary Range: {{job.salary_min }} Rwf - {{job.salary_max}} Rwf  Monthly -->\n                    \n                  </p>\n                </div>\n                <div class=\"job-details\">\n                  <h4><strong>Company Overview</strong></h4>\n                  <p v-html=\"job.job_description\"></p>\n                  <h4><strong>Requirements</strong></h4>\n                  <p v-html=\"job.requirements\" style=\"margin-left: 2rem;\"></p>\n                  <h4><strong>Responsabilities</strong></h4>\n                  <p v-html=\"job.responsability\" style=\"margin-left: 2rem;\"></p>\n                  <h4><strong>conclusion</strong></h4>\n                  <p v-html=\"job.conclusion\"></p>\n\n                  \n                </div>\n                <button\n                  class=\"custom-btn-apply\"\n                  @click=\"applyForJob\"\n                  :disabled=\"isApplying || !job?.job_id || !userId\"\n                >\n                  {{ isApplying ? \"Applying...\" : \"Apply for Job\" }}\n                </button><br><br>\n\n                <div v-if=\"applyMessage\" :class=\"['alert', applyStatusClass]\" role=\"alert\">\n                  {{ applyMessage }}\n                </div>\n\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n  </div>\n</template>\n\n<script>\nimport { globalVariable } from \"@/global\";\nimport IndexComponent from \"./IndexComponent.vue\";\n\n\nexport default {\n  components: {\n    IndexComponent,\n  },\n  data() {\n    return {\n      job: null,\n      isApplying: false,\n      applyMessage: null,\n      applyStatusClass: \"\",\n      userEmail: null,\n      userId: null,\n    };\n  },\n  async mounted() {\n    this.fetchJobDetails();\n    this.getUserEmail();\n    await this.fetchUserId();\n  },\n  methods: {\n    async fetchJobDetails() {\n      const jobId = this.$route.params.job_id;\n      try {\n        const token = localStorage.getItem(\"employeeToken\");\n        const response = await fetch(`${globalVariable}/admin/select_job/${jobId}`, {\n          headers: {\n            Authorization: `Bearer ${token}`,\n          },\n        });\n        const data = await response.json();\n        if (!response.ok) {\n          console.error(\"Failed to fetch job:\", data.message);\n        } else {\n          this.job = data;\n        }\n      } catch (error) {\n        console.error(\"Error fetching job:\", error);\n      }\n    },\n    \n    formatDate(dateStr) {\n      const date = new Date(dateStr);\n      return date.toLocaleDateString(\"en-US\", {\n        year: \"numeric\",\n        month: \"long\",\n        day: \"numeric\",\n      });\n    },\n    async applyForJob() {\n  this.isApplying = true;\n  this.applyMessage = null;\n\n  try {\n    const token = localStorage.getItem(\"employeeToken\");\n    const response = await fetch(`${globalVariable}/seeker/apply`, {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n        Authorization: `Bearer ${token}`,\n      },\n      body: JSON.stringify({\n        job_id: this.job?.job_id,\n        users_id: this.userId,\n        user_email: this.userEmail,\n        company: this.job?.company,\n      }),\n    });\n\n    const result = await response.json();\n    if (!response.ok) {\n      this.applyMessage = result.message || \"Failed to apply.\";\n      this.applyStatusClass = \"alert-danger\";\n    } else {\n      this.applyMessage = result.message;\n      this.applyStatusClass = \"alert-success\";\n    }\n  } catch (error) {\n    console.error(\"Error applying for job:\", error);\n    this.applyMessage = \"An error occurred while applying.\";\n    this.applyStatusClass = \"text-danger\";\n  } finally {\n    this.isApplying = false;\n  }\n},\n    getUserEmail() {\n      const token = localStorage.getItem(\"employeeToken\");\n      if (token) {\n        const payload = token.split('.')[1];\n        const decodedPayload = atob(payload);\n        const parsedPayload = JSON.parse(decodedPayload);\n        this.userEmail = parsedPayload.email;\n      }\n    },\n    async fetchUserId() {\n      const email = this.userEmail;\n      const token = localStorage.getItem(\"employeeToken\");\n\n      if (email && token) {\n        try {\n          const response = await fetch(`${globalVariable}/get_user_id_by_email/${email}`, {\n            headers: { Authorization: `Bearer ${token}` },\n          });\n\n          const data = await response.json();\n          if (response.ok) {\n            this.userId = data.users_id;\n          } else {\n            console.error(\"Error fetching user ID:\", data.message);\n          }\n        } catch (error) {\n          console.error(\"Error fetching user ID:\", error);\n        }\n      }\n    },\n  },\n};\n</script>\n\n<style scoped>\n.custom-btn-apply {\n  background: #EA60A7;\n  color: #fff;\n  padding: 10px 15px;\n  border: none;\n  border-radius: 5px;\n  font-size: 14px;\n  cursor: pointer;\n  margin-top: 20px;\n  transition: background 0.3s ease;\n}\n.custom-btn-apply:hover {\n  background: #fff;\n  color: #EA60A7;\n  border: 1px solid #EA60A7;\n}\n.text-success {\n  color: green;\n  margin-top: 10px;\n}\n.text-danger {\n  color: red;\n  margin-top: 10px;\n}\n</style>\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}