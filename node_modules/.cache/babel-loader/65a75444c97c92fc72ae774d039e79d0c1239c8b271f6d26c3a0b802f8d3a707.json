{"ast":null,"code":"import \"core-js/modules/es.iterator.constructor.js\";\nimport \"core-js/modules/es.iterator.for-each.js\";\nimport axios from \"axios\";\nimport { globalVariable } from \"@/global\";\nimport IndexComponent from \"./IndexComponent.vue\";\nexport default {\n  name: \"RegisterJobProviderComponent\",\n  components: {\n    IndexComponent\n  },\n  data() {\n    return {\n      form: {\n        role_id: null,\n        email: \"\",\n        password: \"\",\n        first_name: \"\",\n        last_name: \"\",\n        country: \"\",\n        telephone: \"\",\n        province: \"\",\n        district: \"\",\n        sector: \"\",\n        cell: \"\",\n        village: \"\",\n        gender: \"\"\n      },\n      message: null,\n      messageType: null,\n      personalFields: [{\n        label: \"Email\",\n        model: \"email\",\n        type: \"text\"\n      }, {\n        label: \"Password\",\n        model: \"password\",\n        type: \"password\"\n      }, {\n        label: \"First Name\",\n        model: \"first_name\",\n        type: \"text\"\n      }, {\n        label: \"Last Name\",\n        model: \"last_name\",\n        type: \"text\"\n      }, {\n        label: \"Country\",\n        model: \"country\",\n        type: \"text\"\n      }, {\n        label: \"Province\",\n        model: \"province\",\n        type: \"text\"\n      }, {\n        label: \"District\",\n        model: \"district\",\n        type: \"text\"\n      }, {\n        label: \"Sector\",\n        model: \"sector\",\n        type: \"text\"\n      }, {\n        label: \"Cell\",\n        model: \"cell\",\n        type: \"text\"\n      }, {\n        label: \"Village\",\n        model: \"village\",\n        type: \"text\"\n      }, {\n        label: \"Telephone\",\n        model: \"telephone\",\n        type: \"text\"\n      }]\n    };\n  },\n  methods: {\n    async handleSubmit() {\n      const formData = new FormData();\n      Object.entries(this.form).forEach(([key, value]) => {\n        formData.append(key, value);\n      });\n      try {\n        const response = await fetch(`${globalVariable}/admin/add_agent`, {\n          method: \"POST\",\n          headers: {\n            Authorization: `Bearer ${localStorage.getItem(\"adminToken\")}`\n          },\n          body: formData\n        });\n        const result = await response.json();\n        if (response.ok) {\n          this.message = result.message || \"Agent registered successfully.\";\n          this.messageType = \"alert-success\";\n        } else {\n          this.message = result.message || \"Failed to register job provider.\";\n          this.messageType = \"alert-danger\";\n        }\n      } catch (error) {\n        console.error(\"Error registering job provider:\", error);\n        this.message = \"An error occurred while submitting the form.\";\n        this.messageType = \"alert-danger\";\n      }\n    },\n    async loadRoleId() {\n      try {\n        const token = localStorage.getItem(\"adminToken\");\n        const res = await axios.get(`${globalVariable}/admin/role/agent`, {\n          headers: {\n            Authorization: `Bearer ${token}`\n          }\n        });\n        this.form.role_id = res.data.role_id || 3;\n      } catch (err) {\n        console.error(\"Failed to fetch role_id:\", err);\n        this.form.role_id = 3;\n      }\n    }\n  },\n  mounted() {\n    this.loadRoleId();\n  }\n};","map":{"version":3,"names":["axios","globalVariable","IndexComponent","name","components","data","form","role_id","email","password","first_name","last_name","country","telephone","province","district","sector","cell","village","gender","message","messageType","personalFields","label","model","type","methods","handleSubmit","formData","FormData","Object","entries","forEach","key","value","append","response","fetch","method","headers","Authorization","localStorage","getItem","body","result","json","ok","error","console","loadRoleId","token","res","get","err","mounted"],"sources":["/Users/gentil/Desktop/Kozi-ai-agent/src/views/admin/RegisterAgent.vue"],"sourcesContent":["<template>\n  <IndexComponent />\n  <div class=\"page-wrapper\" id=\"main-wrapper\" data-layout=\"vertical\" data-navbarbg=\"skin6\" data-sidebartype=\"full\" style=\"position: absolute; top: 0; left: 0; right: 0; bottom: 0; z-index: 1;\">\n    <div class=\"body-wrapper\" style=\"margin-top: 70px; margin-left: 270px; background: white; min-height: calc(100vh - 70px); padding: 20px; overflow-y: auto; max-height: calc(100vh - 70px);\">\n       <h5 class=\"card-title fw-semibold mb-4\" style=\"color: #E960A6;\"><i class=\"ti ti-user-plus\"></i>  Register New Job Provider</h5>\n\n      <form @submit.prevent=\"handleSubmit\" class=\"mx-4\" enctype=\"multipart/form-data\">\n        \n\n        <div class=\"form-group row\">\n          <div class=\"col-md-6\" v-for=\"(field, index) in personalFields\" :key=\"index\">\n            <label :for=\"field.model\" class=\"form-label\">{{ field.label }}</label>\n            <input\n              :type=\"field.type\"\n              v-model=\"form[field.model]\"\n              class=\"form-control\"\n              :id=\"field.model\"\n              required\n            />\n          </div>\n\n          <div class=\"col-md-6\">\n            <label class=\"form-label\">Gender</label>\n            <select v-model=\"form.gender\" class=\"form-control\" required>\n              <option value=\"\" disabled>Select Gender</option>\n              <option value=\"Male\">Male</option>\n              <option value=\"Female\">Female</option>\n              <option value=\"Other\">Other</option>\n            </select>\n          </div>\n        </div>\n        <div v-if=\"message\" :class=\"['alert', messageType]\">{{ message }}</div>\n\n        <!-- <div class=\"mt-3 text-muted\">\n          <strong>Role ID:</strong> {{ form.role_id || 'Not loaded' }}\n        </div> -->\n\n        <button type=\"submit\" class=\"btn btn-primary mb-3\">Register</button>\n      </form>\n    </div>\n  </div>\n</template>\n<script>\nimport axios from \"axios\";\nimport { globalVariable } from \"@/global\";\nimport IndexComponent from \"./IndexComponent.vue\";\n\nexport default {\n  name: \"RegisterJobProviderComponent\",\n  components: { IndexComponent },\n  data() {\n    return {\n      form: {\n        role_id: null,\n        email: \"\",\n        password: \"\",\n        first_name: \"\",\n        last_name: \"\",\n        country: \"\",\n        telephone: \"\",\n        province: \"\",\n        district: \"\",\n        sector: \"\",\n        cell: \"\",\n        village: \"\",\n        gender: \"\",\n      },\n      message: null,\n      messageType: null,\n      personalFields: [\n        { label: \"Email\", model: \"email\", type: \"text\" },\n        { label: \"Password\", model: \"password\", type: \"password\" },\n        { label: \"First Name\", model: \"first_name\", type: \"text\" },\n        { label: \"Last Name\", model: \"last_name\", type: \"text\" },\n        { label: \"Country\", model: \"country\", type: \"text\" },\n        { label: \"Province\", model: \"province\", type: \"text\" },\n        { label: \"District\", model: \"district\", type: \"text\" },\n        { label: \"Sector\", model: \"sector\", type: \"text\" },\n        { label: \"Cell\", model: \"cell\", type: \"text\" },\n        { label: \"Village\", model: \"village\", type: \"text\" },\n        { label: \"Telephone\", model: \"telephone\", type: \"text\" },\n      ],\n    };\n  },\n  methods: {\n    async handleSubmit() {\n      const formData = new FormData();\n      Object.entries(this.form).forEach(([key, value]) => {\n        formData.append(key, value);\n      });\n\n      try {\n        const response = await fetch(`${globalVariable}/admin/add_agent`, {\n          method: \"POST\",\n          headers: {\n            Authorization: `Bearer ${localStorage.getItem(\"adminToken\")}`,\n          },\n          body: formData,\n        });\n\n        const result = await response.json();\n        if (response.ok) {\n          this.message = result.message || \"Agent registered successfully.\";\n          this.messageType = \"alert-success\";\n        } else {\n          this.message = result.message || \"Failed to register job provider.\";\n          this.messageType = \"alert-danger\";\n        }\n      } catch (error) {\n        console.error(\"Error registering job provider:\", error);\n        this.message = \"An error occurred while submitting the form.\";\n        this.messageType = \"alert-danger\";\n      }\n    },\n\n    async loadRoleId() {\n      try {\n        const token = localStorage.getItem(\"adminToken\");\n        const res = await axios.get(`${globalVariable}/admin/role/agent`, {\n          headers: { Authorization: `Bearer ${token}` },\n        });\n        this.form.role_id = res.data.role_id || 3;\n      } catch (err) {\n        console.error(\"Failed to fetch role_id:\", err);\n        this.form.role_id = 3;\n      }\n    },\n  },\n  mounted() {\n    this.loadRoleId();\n  },\n};\n</script>\n\n\n      <style scoped>\n      .modal-overlay {\n         position: fixed;\n          top: 0;\n          left: 0;\n          width: 100%;\n          height: 100%;\n          background: rgba(0, 0, 0, 0.5);\n          display: flex;\n          justify-content: center;\n          align-items: center;\n          z-index: 1000;\n        }\n        \n        /* Modal content styling */\n        .modal-content {\n          background-color: white;\n          padding: 20px;\n          border-radius: 8px;\n          text-align: center;\n          width: 300px;\n        }\n      \n        .container-fluid {\n          max-width: 800px;\n          margin: auto;\n          padding: 20px;\n          background-color: #ffffff;\n          border-radius: 8px;\n          box-shadow: 0 8px 30px rgba(0, 0, 0, 0.2);\n        }\n        \n        h5 {\n          color: #333;\n          margin-bottom: 20px;\n        }\n        .custom-select {\n          width: 100%;\n          padding: 15px;\n          height: 50px;\n          border: 1px solid #ccc;\n          border-radius: 5px;\n          box-sizing: border-box;\n          transition: border-color 0.3s, box-shadow 0.3s;\n          font-size: 16px;\n    \n        }\n        .form-control {\n          width: 100%;\n          padding: 15px;\n          height: 50px;\n          border: 1px solid #ccc;\n          border-radius: 5px;\n          box-sizing: border-box;\n          transition: border-color 0.3s, box-shadow 0.3s;\n          font-size: 16px;\n        }\n        \n        .form-control:focus {\n          border-color: #E960A6;\n          box-shadow: 0 0 5px rgba(0, 123, 255, 0.5);\n          outline: none;\n        }\n        \n        .form-label {\n          font-weight: bold;\n          margin-bottom: 5px;\n          display: block;\n        }\n        \n        .btn-primary {\n          background-color: #E960A6;\n          color: white;\n        \n        }\n        \n        .btn-primary:hover {\n          background-color: #E960A6;\n          color: teal;\n        }\n        \n        .form-group {\n          margin-bottom: 15px;\n        }\n        \n        </style>\n        "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}