{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport \"core-js/modules/es.iterator.constructor.js\";\nimport \"core-js/modules/es.iterator.filter.js\";\nimport \"core-js/modules/es.iterator.map.js\";\nimport \"core-js/modules/es.set.difference.v2.js\";\nimport \"core-js/modules/es.set.intersection.v2.js\";\nimport \"core-js/modules/es.set.is-disjoint-from.v2.js\";\nimport \"core-js/modules/es.set.is-subset-of.v2.js\";\nimport \"core-js/modules/es.set.is-superset-of.v2.js\";\nimport \"core-js/modules/es.set.symmetric-difference.v2.js\";\nimport \"core-js/modules/es.set.union.v2.js\";\nimport \"core-js/modules/web.dom-exception.stack.js\";\nimport { globalVariable } from \"@/global\";\nimport IndexComponent from \"./IndexComponent.vue\";\nexport default {\n  name: \"DetailsComponent\",\n  components: {\n    IndexComponent\n  },\n  data() {\n    return {\n      job: null,\n      jobs: [],\n      categoryNames: {},\n      uploadsUrl: `${globalVariable}/uploads/profile/`,\n      profileImage: require(\"@/assets/img/badge.png\"),\n      noRelatedJobsFound: false,\n      message: \"\",\n      messageType: \"\",\n      userEmail: \"\",\n      userId: null,\n      loading: false,\n      jobsPerPage: 9,\n      currentPage: 1,\n      // Hire\n      showHireModal: false,\n      hireForm: {\n        when: \"\",\n        workingMode: \"\",\n        accommodation: \"\",\n        jobDescription: \"\"\n      },\n      // Support\n      showSupportModal: false,\n      supportMessage: \"\",\n      supportResponse: {\n        message: \"\",\n        type: \"\"\n      },\n      providerDetails: {\n        job_provider_id: null,\n        provider_first_name: \"\",\n        provider_last_name: \"\"\n      }\n    };\n  },\n  computed: {\n    visiblePages() {\n      const total = this.totalPages;\n      const current = this.currentPage;\n      const range = 3;\n      let start = Math.max(current - Math.floor(range / 2), 1);\n      let end = start + range - 1;\n      if (end > total) {\n        end = total;\n        start = Math.max(end - range + 1, 1);\n      }\n      const pages = [];\n      for (let i = start; i <= end; i++) {\n        pages.push(i);\n      }\n      return pages;\n    },\n    canSubmitHire() {\n      return this.hireForm.when && this.hireForm.workingMode && this.hireForm.accommodation && this.hireForm.jobDescription;\n    },\n    paginatedJobs() {\n      const start = (this.currentPage - 1) * this.jobsPerPage;\n      return this.jobs.slice(start, start + this.jobsPerPage);\n    },\n    totalPages() {\n      return Math.ceil(this.jobs.length / this.jobsPerPage);\n    }\n  },\n  methods: {\n    changePage(page) {\n      if (page >= 1 && page <= this.totalPages) {\n        this.currentPage = page;\n        window.scrollTo({\n          top: 0,\n          behavior: \"smooth\"\n        });\n      }\n    },\n    async getUserIdFromEmail() {\n      const token = localStorage.getItem(\"employerToken\");\n      if (!token) return;\n      try {\n        const payload = JSON.parse(atob(token.split(\".\")[1]));\n        this.userEmail = payload.email;\n        const res = await fetch(`${globalVariable}/get_user_id_by_email/${this.userEmail}`, {\n          headers: {\n            Authorization: `Bearer ${token}`\n          }\n        });\n        const data = await res.json();\n        if (res.ok) {\n          this.userId = data.users_id;\n          this.fetchProviderDetails();\n        }\n      } catch (err) {\n        console.error(\"Error getting user ID:\", err);\n      }\n    },\n    async fetchProviderDetails() {\n      const token = localStorage.getItem(\"employerToken\");\n      try {\n        const res = await fetch(`${globalVariable}/provider/job_provider_id/${this.userId}`, {\n          headers: {\n            Authorization: `Bearer ${token}`\n          }\n        });\n        const data = await res.json();\n        this.providerDetails = Array.isArray(data) ? data[0] : data;\n      } catch (error) {\n        console.error(\"Error fetching provider:\", error);\n      }\n    },\n    async fetchJobSeeker() {\n      const token = localStorage.getItem(\"employerToken\");\n      const userId = this.$route.params.users_id;\n      try {\n        const res = await fetch(`${globalVariable}/provider/job_seeker/${userId}`, {\n          headers: {\n            Authorization: `Bearer ${token}`\n          }\n        });\n        const data = await res.json();\n        this.job = data;\n        const categoryId = Number(data.categories_id);\n        if (categoryId) {\n          this.fetchCategoryName(categoryId);\n          this.fetchUsersByCategory(categoryId);\n        }\n      } catch (error) {\n        console.error(\"Error fetching job seeker:\", error);\n      }\n    },\n    async fetchCategoryName(categoryId) {\n      if (this.categoryNames[categoryId]) return;\n      try {\n        const res = await fetch(`${globalVariable}/category_name/${categoryId}`);\n        const data = await res.json();\n        this.categoryNames[categoryId] = data[0]?.name || \"Unknown\";\n      } catch {\n        this.categoryNames[categoryId] = \"Unknown\";\n      }\n    },\n    async fetchUsersByCategory(categoryId) {\n      const token = localStorage.getItem(\"employerToken\");\n      try {\n        const res = await fetch(`${globalVariable}/select_user_based_on_category/${categoryId}`, {\n          headers: {\n            Authorization: `Bearer ${token}`\n          }\n        });\n        const data = await res.json();\n        this.jobs = data.filter(job => job.users_id !== this.job.users_id);\n        this.noRelatedJobsFound = this.jobs.length === 0;\n        const uniqueIds = [...new Set(this.jobs.map(j => j.categories_id))];\n        for (const id of uniqueIds) {\n          if (id && !this.categoryNames[id]) this.fetchCategoryName(id);\n        }\n      } catch (e) {\n        console.error(\"Error fetching related jobs:\", e);\n      }\n    },\n    setDefaultImage(event) {\n      event.target.src = require(\"@/assets/img/sample.png\");\n    },\n    closeHireModal() {\n      this.showHireModal = false;\n      this.hireForm = {\n        when: \"\",\n        workingMode: \"\",\n        accommodation: \"\",\n        jobDescription: \"\"\n      };\n    },\n    async submitHire() {\n      if (!this.canSubmitHire) return;\n      this.loading = true;\n      const token = localStorage.getItem(\"employerToken\");\n      const payload = {\n        job_seeker_id: this.job?.job_seeker_id,\n        job_provider_id: this.providerDetails?.job_provider_id,\n        provider_first_name: this.providerDetails?.provider_first_name,\n        provider_last_name: this.providerDetails?.provider_last_name,\n        seeker_first_name: this.job?.first_name,\n        seeker_last_name: this.job?.last_name,\n        when_need_worker: this.hireForm?.when,\n        working_mode: this.hireForm?.workingMode,\n        accommodation_preference: this.hireForm?.accommodation,\n        job_description: this.hireForm?.jobDescription\n      };\n      try {\n        const res = await fetch(`${globalVariable}/provider/hire`, {\n          method: \"POST\",\n          headers: {\n            \"Content-Type\": \"application/json\",\n            Authorization: `Bearer ${token}`\n          },\n          body: JSON.stringify(payload)\n        });\n        const data = await res.json();\n        this.message = res.ok ? \"Hire request submitted successfully!\" : data.message || \"Error occurred.\";\n        this.messageType = res.ok ? \"alert-success\" : \"alert-danger\";\n      } catch (e) {\n        this.message = \"Network error.\";\n        this.messageType = \"alert-danger\";\n      } finally {\n        this.loading = false;\n      }\n    },\n    closeSupportModal() {\n      this.showSupportModal = false;\n      this.supportMessage = \"\";\n      this.supportResponse = {\n        message: \"\",\n        type: \"\"\n      };\n    },\n    async submitQuickSupport() {\n      const token = localStorage.getItem(\"employerToken\");\n      const payload = {\n        job_seeker_id: this.job?.job_seeker_id,\n        job_provider_id: this.providerDetails?.job_provider_id,\n        provider_first_name: this.providerDetails?.provider_first_name,\n        provider_last_name: this.providerDetails?.provider_last_name,\n        seeker_first_name: this.job?.first_name,\n        seeker_last_name: this.job?.last_name,\n        message: this.supportMessage\n      };\n      try {\n        const res = await fetch(`${globalVariable}/provider/quicksupport`, {\n          method: \"POST\",\n          headers: {\n            \"Content-Type\": \"application/json\",\n            Authorization: `Bearer ${token}`\n          },\n          body: JSON.stringify(payload)\n        });\n        const data = await res.json();\n        this.supportResponse = {\n          message: res.ok ? \"Message sent successfully.\" : data.message || \"Error sending message.\",\n          type: res.ok ? \"alert-success\" : \"alert-danger\"\n        };\n        if (res.ok) this.supportMessage = \"\";\n      } catch {\n        this.supportResponse = {\n          message: \"Network error occurred.\",\n          type: \"alert-danger\"\n        };\n      }\n    }\n  },\n  mounted() {\n    this.getUserIdFromEmail();\n    this.fetchJobSeeker();\n  },\n  watch: {\n    \"$route.params.users_id\"() {\n      this.fetchJobSeeker();\n    }\n  }\n};","map":{"version":3,"names":["globalVariable","IndexComponent","name","components","data","job","jobs","categoryNames","uploadsUrl","profileImage","require","noRelatedJobsFound","message","messageType","userEmail","userId","loading","jobsPerPage","currentPage","showHireModal","hireForm","when","workingMode","accommodation","jobDescription","showSupportModal","supportMessage","supportResponse","type","providerDetails","job_provider_id","provider_first_name","provider_last_name","computed","visiblePages","total","totalPages","current","range","start","Math","max","floor","end","pages","i","push","canSubmitHire","paginatedJobs","slice","ceil","length","methods","changePage","page","window","scrollTo","top","behavior","getUserIdFromEmail","token","localStorage","getItem","payload","JSON","parse","atob","split","email","res","fetch","headers","Authorization","json","ok","users_id","fetchProviderDetails","err","console","error","Array","isArray","fetchJobSeeker","$route","params","categoryId","Number","categories_id","fetchCategoryName","fetchUsersByCategory","filter","uniqueIds","Set","map","j","id","e","setDefaultImage","event","target","src","closeHireModal","submitHire","job_seeker_id","seeker_first_name","first_name","seeker_last_name","last_name","when_need_worker","working_mode","accommodation_preference","job_description","method","body","stringify","closeSupportModal","submitQuickSupport","mounted","watch","$route.params.users_id"],"sources":["/Users/gentil/Desktop/Kozi-ai-agent/src/views/jobprovider/DetailsComponent.vue"],"sourcesContent":["<template>\n  <IndexComponent />\n  <div\n    class=\"page-wrapper\"\n    id=\"main-wrapper\"\n    data-layout=\"vertical\"\n    data-navbarbg=\"skin6\"\n    data-sidebartype=\"full\"\n    data-sidebar-description=\"fixed\"\n    data-header-description=\"fixed\"\n  >\n     <div class=\"body-wrapper\" style=\"margin-top: -4rem;\">\n\n      <div class=\"container-fluid\">\n        <div class=\"row\">\n          <div v-if=\"job\">\n            <div class=\"card p-4\">\n              <div class=\"row\">\n                <div class=\"col-md-4 text-center\">\n                  <img\n                    :src=\"uploadsUrl + job.image\"\n                    @error=\"setDefaultImage\"\n                    alt=\"Profile\"\n                    class=\"card-img-top mx-auto\"\n                    style=\"width: 250px; height: 250px; object-fit: cover;\"\n                  />\n                </div>\n                <div class=\"col-md-8\">\n                  <h3><strong>{{ job.first_name }} {{ job.last_name }}</strong>  \n                    <img style=\"margin-left: 5px;\"\n                        v-if=\"job.verification_badge === 1\"\n                        :src=\"profileImage\"\n                        width=\"25\"\n                        height=\"25\"\n                        class=\"rounded-circle\"\n                        alt=\"verification badge\"\n                      /> \n                  </h3>\n                  \n                  <div class=\"container\">\n                    <div class=\"row\">\n                      <div class=\"col-md-2 mt-2\"><strong>Bio</strong></div>\n                      <div class=\"col-md-10 mt-2\">{{ job.bio }}</div>\n\n                      <div class=\"col-md-2 mt-2\"><strong>Salary</strong></div>\n                      <div class=\"col-md-10 mt-2\">{{ job.salary }}</div>\n\n                      <div class=\"col-md-2 mt-2\"><strong>Address</strong></div>\n                      <div class=\"col-md-10 mt-2\">{{ job.province }} - {{ job.district }}</div>\n\n                      <div class=\"col-md-2 mt-2\"><strong>Category</strong></div>\n                      <div class=\"col-md-10 mt-2\">{{ categoryNames[job.categories_id] || 'Loading category...' }}</div>\n\n                      <div class=\"col-md-2 mt-2\"></div>\n                      <div class=\"col-md-10 mt-2\">\n                        <button class=\"btn btn-primary mt-3\" @click=\"showHireModal = true\">Hire</button>\n                      </div>\n                    </div>\n                  </div>\n                </div>\n              </div>\n            </div>\n\n            <!-- Quick Support Button -->\n            <button class=\"btn btn-primary mt-3\" @click=\"showSupportModal = true\">Quick support</button>\n\n            <!-- Related Jobs -->\n            <div class=\"container mt-4\">\n              <h4>Similar {{ categoryNames[job.categories_id] || 'Loading category...' }} category</h4>\n              <div class=\"row\">\n                <div v-if=\"noRelatedJobsFound\" class=\"col-12 text-center mt-4\">\n                  <p class=\"alert alert-danger\">No other {{ categoryNames[job.categories_id] || 'Loading category...' }} found in this category.</p>\n                </div>\n                \n                <div v-else class=\"col-md-4 mb-4\" v-for=\"relatedJob in paginatedJobs\" :key=\"relatedJob.id\">\n                  <a :href=\"`/employer/seekers/${relatedJob.users_id}`\">\n                    <div class=\"card h-100 text-center p-3\">\n                      <img\n                        :src=\"uploadsUrl + relatedJob.image\"\n                        @error=\"setDefaultImage\"\n                        alt=\"Profile\"\n                        class=\"card-img-top mx-auto\"\n                        style=\"width: 250px; height: 250px; object-fit: cover;\"\n                      />\n                      <div class=\"card-body\">\n                        <h5 class=\"card-title\"><b>{{ relatedJob.first_name }} {{ relatedJob.last_name }}\n                          <img style=\"margin-left: 5px;\"\n                        v-if=\"relatedJob.verification_badge === 1\"\n                        :src=\"profileImage\"\n                        width=\"25\"\n                        height=\"25\"\n                        class=\"rounded-circle\"\n                        alt=\"verification badge\"\n                      /> \n                      \n                        </b></h5>\n                        <p>{{ categoryNames[relatedJob.categories_id] || 'Loading category...' }}</p>\n                        <p class=\"card-text\">\n                    <!-- Stars for verified users (5 gold stars) -->\n                    <template v-if=\"relatedJob.verification_badge === 1\">\n                      <i class=\"fa-solid fa-star\" style=\"color: gold;\"></i>\n                      <i class=\"fa-solid fa-star\" style=\"color: gold;\"></i>\n                      <i class=\"fa-solid fa-star\" style=\"color: gold;\"></i>\n                      <i class=\"fa-solid fa-star\" style=\"color: gold;\"></i>\n                      <i class=\"fa-solid fa-star\" style=\"color: gold;\"></i>\n                    </template>\n                    <!-- Stars for non-verified users (2 gold, 3 normal) -->\n                    <template v-else>\n                      <i class=\"fa-solid fa-star\" style=\"color: gold;\"></i>\n                      <i class=\"fa-solid fa-star\" style=\"color: gold;\"></i>\n                      <i class=\"fa-solid fa-star\"></i>\n                      <i class=\"fa-solid fa-star\"></i>\n                      <i class=\"fa-solid fa-star\"></i>\n                    </template>\n                  </p>\n                      </div>\n                    </div>\n                  </a>\n                </div>\n              </div>\n            </div>\n\n            <div class=\"d-flex justify-content-center mt-4\" v-if=\"totalPages > 1\">\n              <ul class=\"pagination\">\n                <li class=\"page-item\" :class=\"{ disabled: currentPage === 1 }\">\n                  <a class=\"page-link\" href=\"#\" @click.prevent=\"changePage(currentPage - 1)\">Previous</a>\n                </li>\n                <li\n                v-for=\"page in visiblePages\"\n                :key=\"page\"\n                class=\"page-item\"\n                :class=\"{ active: currentPage === page }\"\n                >\n                <a class=\"page-link\" href=\"#\" @click.prevent=\"changePage(page)\">\n                  {{ page }}\n                </a>\n              </li>\n              <li class=\"page-item\" :class=\"{ disabled: currentPage === totalPages }\">\n                <a class=\"page-link\" href=\"#\" @click.prevent=\"changePage(currentPage + 1)\">Next</a>\n              </li>\n            </ul>\n          </div>\n\n            <!-- Hire Modal -->\n            <div v-if=\"showHireModal\" class=\"modal fade show d-block\" tabindex=\"-1\" style=\"background: rgba(0,0,0,0.5); justify-content: center;\">\n              <div class=\"modal-dialog\">\n                <div class=\"modal-content\">\n                  <div class=\"modal-header\">\n                    <h5 class=\"modal-title\">Hire {{ job.first_name }} {{ job.last_name }}</h5>\n                    <button type=\"button\" class=\"btn-close\" @click=\"closeHireModal\"><i class=\"fa-solid fa-x\"></i></button>\n                  </div>\n                  <div v-if=\"message\" class=\"mt-3\">\n                    <div :class=\"['alert', messageType]\" role=\"alert\">\n                      {{ message }}\n                    </div>\n                  </div>\n                  <div class=\"modal-body\">\n                    <div class=\"mb-3\">\n                      <label class=\"form-label\">When do you need the worker? <span class=\"text-danger\">*</span></label>\n                      <select v-model=\"hireForm.when\" class=\"form-control\" required>\n                        <option disabled value=\"\">Select one</option>\n                        <option>ASAP</option>\n                        <option>After 3 days</option>\n                        <option>Next week</option>\n                        <option>Next month</option>\n                      </select>\n                    </div>\n                    <div class=\"mb-3\">\n                      <label class=\"form-label\">Working Mode <span class=\"text-danger\">*</span></label>\n                      <select v-model=\"hireForm.workingMode\" class=\"form-control\" required>\n                        <option disabled value=\"\">Select one</option>\n                        <option value=\"full-time\">Full-time</option>\n                        <option value=\"part-time\">Part-time</option>\n                      </select>\n                    </div>\n                    <div class=\"mb-3\">\n                      <label class=\"form-label\">Accommodation Preference <span class=\"text-danger\">*</span></label>\n                      <select v-model=\"hireForm.accommodation\" class=\"form-control\" required>\n                        <option disabled value=\"\">Select one</option>\n                        <option value=\"stay-in\">Stay-in</option>\n                        <option value=\"stay-out\">Stay-out</option>\n                      </select>\n                    </div>\n                    <div class=\"mb-3\">\n                      <label class=\"form-label\">Job Description <span class=\"text-danger\">*</span></label>\n                      <textarea class=\"form-control\" rows=\"3\" v-model=\"hireForm.jobDescription\" placeholder=\"Brief job description...\" required  style=\"height: 100px;\"></textarea>\n                    </div>\n                  </div>\n                  <div class=\"modal-footer\">\n                    <button class=\"btn btn-primary\" @click=\"closeHireModal\">Cancel</button>\n                    <button class=\"btn btn-primary\"   @click=\"submitHire\" :disabled=\"!canSubmitHire || loading\">\n                      <span v-if=\"loading\" class=\"spinner-border spinner-border-sm me-2\" role=\"status\" aria-hidden=\"true\"></span>\n                      {{ loading ? 'Submitting...' : 'Submit' }}\n                    </button>\n                  </div>\n                </div>\n              </div>\n            </div>\n\n            <!-- Quick Support Modal -->\n            <div v-if=\"showSupportModal\" class=\"modal fade show d-block\" tabindex=\"-1\" style=\"background: rgba(0,0,0,0.5);\">\n              <div class=\"modal-dialog\">\n                <div class=\"modal-content\" style=\"margin-top: 10rem;\">\n                  <div class=\"modal-header\">\n                    <h5 class=\"modal-title\">Support Inquiry About {{ job.first_name }} {{ job.last_name }}</h5>\n                    <button type=\"button\" class=\"btn-close\" @click=\"closeSupportModal\"><i class=\"fa-solid fa-x\"></i></button>\n                  </div>\n                  <div v-if=\"supportResponse.message\" class=\"m-3\">\n                    <div :class=\"['alert', supportResponse.type]\" role=\"alert\">\n                      {{ supportResponse.message }}\n                    </div>\n                  </div>\n                  <div class=\"modal-body\">\n                    <div class=\"mb-3\">\n                      <label class=\"form-label\">Your Message <span class=\"text-danger\">*</span></label>\n                      <textarea\n                      class=\"form-control\"\n                      v-model=\"supportMessage\"\n                      placeholder=\"Write your inquiry about this job seeker...\"\n                      style=\"height: 100px;\"\n                      ></textarea>\n\n                    </div>\n                  </div>\n                  <div class=\"modal-footer\">\n                    <button class=\"btn btn-primary\" @click=\"closeSupportModal\">Cancel</button>\n                    <button class=\"btn btn-primary\" :disabled=\"!supportMessage\" @click=\"submitQuickSupport\">\n                      Send Message\n                    </button>\n                  </div>\n                </div>\n              </div>\n            </div>\n            <!-- End Modals -->\n          </div>\n        </div>\n      </div>\n    </div>\n  </div>\n</template>\n\n<script>\nimport { globalVariable } from \"@/global\";\nimport IndexComponent from \"./IndexComponent.vue\";\n\n\nexport default {\n  name: \"DetailsComponent\",\n  components: { IndexComponent },\n  data() {\n    return {\n      job: null,\n      jobs: [],\n      categoryNames: {},\n      uploadsUrl: `${globalVariable}/uploads/profile/`,\n       profileImage: require(\"@/assets/img/badge.png\"),\n      noRelatedJobsFound: false,\n      message: \"\",\n      messageType: \"\",\n      userEmail: \"\",\n      userId: null,\n      loading: false,\n\n      jobsPerPage: 9,\n      currentPage: 1,\n\n      // Hire\n      showHireModal: false,\n      hireForm: {\n        when: \"\",\n        workingMode: \"\",\n        accommodation: \"\",\n        jobDescription: \"\"\n      },\n\n      // Support\n      showSupportModal: false,\n      supportMessage: \"\",\n      supportResponse: {\n        message: \"\",\n        type: \"\"\n      },\n\n      providerDetails: {\n        job_provider_id: null,\n        provider_first_name: \"\",\n        provider_last_name: \"\"\n      }\n    };\n  },\n  computed: {\n    visiblePages() {\n  const total = this.totalPages;\n  const current = this.currentPage;\n  const range = 3;\n\n  let start = Math.max(current - Math.floor(range / 2), 1);\n  let end = start + range - 1;\n\n  if (end > total) {\n    end = total;\n    start = Math.max(end - range + 1, 1);\n  }\n\n  const pages = [];\n  for (let i = start; i <= end; i++) {\n    pages.push(i);\n  }\n  return pages;\n},\n\n  canSubmitHire() {\n    return (\n      this.hireForm.when &&\n      this.hireForm.workingMode &&\n      this.hireForm.accommodation &&\n      this.hireForm.jobDescription\n    );\n  },\n  paginatedJobs() {\n    const start = (this.currentPage - 1) * this.jobsPerPage;\n    return this.jobs.slice(start, start + this.jobsPerPage);\n  },\n  totalPages() {\n    return Math.ceil(this.jobs.length / this.jobsPerPage);\n  }\n},\n\n  methods: {\n\n    changePage(page) {\n  if (page >= 1 && page <= this.totalPages) {\n    this.currentPage = page;\n    window.scrollTo({ top: 0, behavior: \"smooth\" });\n  }\n},\n\n    async getUserIdFromEmail() {\n      const token = localStorage.getItem(\"employerToken\");\n      if (!token) return;\n      try {\n        const payload = JSON.parse(atob(token.split(\".\")[1]));\n        this.userEmail = payload.email;\n        const res = await fetch(`${globalVariable}/get_user_id_by_email/${this.userEmail}`, {\n          headers: { Authorization: `Bearer ${token}` }\n        });\n        const data = await res.json();\n        if (res.ok) {\n          this.userId = data.users_id;\n          this.fetchProviderDetails();\n        }\n      } catch (err) {\n        console.error(\"Error getting user ID:\", err);\n      }\n    },\n\n    async fetchProviderDetails() {\n      const token = localStorage.getItem(\"employerToken\");\n      try {\n        const res = await fetch(`${globalVariable}/provider/job_provider_id/${this.userId}`, {\n          headers: { Authorization: `Bearer ${token}` }\n        });\n        const data = await res.json();\n        this.providerDetails = Array.isArray(data) ? data[0] : data;\n      } catch (error) {\n        console.error(\"Error fetching provider:\", error);\n      }\n    },\n\n    async fetchJobSeeker() {\n      const token = localStorage.getItem(\"employerToken\");\n      const userId = this.$route.params.users_id;\n      try {\n        const res = await fetch(`${globalVariable}/provider/job_seeker/${userId}`, {\n          headers: { Authorization: `Bearer ${token}` }\n        });\n        const data = await res.json();\n        this.job = data;\n        const categoryId = Number(data.categories_id);\n        if (categoryId) {\n          this.fetchCategoryName(categoryId);\n          this.fetchUsersByCategory(categoryId);\n        }\n      } catch (error) {\n        console.error(\"Error fetching job seeker:\", error);\n      }\n    },\n\n    async fetchCategoryName(categoryId) {\n      if (this.categoryNames[categoryId]) return;\n      try {\n        const res = await fetch(`${globalVariable}/category_name/${categoryId}`);\n        const data = await res.json();\n        this.categoryNames[categoryId] = data[0]?.name || \"Unknown\";\n      } catch {\n        this.categoryNames[categoryId] = \"Unknown\";\n      }\n    },\n\n    async fetchUsersByCategory(categoryId) {\n      const token = localStorage.getItem(\"employerToken\");\n      try {\n        const res = await fetch(`${globalVariable}/select_user_based_on_category/${categoryId}`, {\n          headers: { Authorization: `Bearer ${token}` }\n        });\n        const data = await res.json();\n        this.jobs = data.filter(job => job.users_id !== this.job.users_id);\n        this.noRelatedJobsFound = this.jobs.length === 0;\n\n        const uniqueIds = [...new Set(this.jobs.map(j => j.categories_id))];\n        for (const id of uniqueIds) {\n          if (id && !this.categoryNames[id]) this.fetchCategoryName(id);\n        }\n      } catch (e) {\n        console.error(\"Error fetching related jobs:\", e);\n      }\n    },\n\n    setDefaultImage(event) {\n      event.target.src = require(\"@/assets/img/sample.png\");\n    },\n\n    closeHireModal() {\n      this.showHireModal = false;\n      this.hireForm = { when: \"\", workingMode: \"\", accommodation: \"\", jobDescription: \"\" };\n    },\n\n    async submitHire() {\n      if (!this.canSubmitHire) return;\n      this.loading = true;\n      const token = localStorage.getItem(\"employerToken\");\n      const payload = {\n        job_seeker_id: this.job?.job_seeker_id,\n        job_provider_id: this.providerDetails?.job_provider_id,\n        provider_first_name: this.providerDetails?.provider_first_name,\n        provider_last_name: this.providerDetails?.provider_last_name,\n        seeker_first_name: this.job?.first_name,\n        seeker_last_name: this.job?.last_name,\n        when_need_worker: this.hireForm?.when,\n        working_mode: this.hireForm?.workingMode,\n        accommodation_preference: this.hireForm?.accommodation,\n        job_description: this.hireForm?.jobDescription\n      };\n\n      try {\n        const res = await fetch(`${globalVariable}/provider/hire`, {\n          method: \"POST\",\n          headers: { \"Content-Type\": \"application/json\", Authorization: `Bearer ${token}` },\n          body: JSON.stringify(payload)\n        });\n        const data = await res.json();\n        this.message = res.ok ? \"Hire request submitted successfully!\" : data.message || \"Error occurred.\";\n        this.messageType = res.ok ? \"alert-success\" : \"alert-danger\";\n      } catch (e) {\n        this.message = \"Network error.\";\n        this.messageType = \"alert-danger\";\n      } finally {\n        this.loading = false;\n      }\n    },\n\n    closeSupportModal() {\n      this.showSupportModal = false;\n      this.supportMessage = \"\";\n      this.supportResponse = { message: \"\", type: \"\" };\n    },\n\n    async submitQuickSupport() {\n      const token = localStorage.getItem(\"employerToken\");\n      const payload = {\n        job_seeker_id: this.job?.job_seeker_id,\n        job_provider_id: this.providerDetails?.job_provider_id,\n        provider_first_name: this.providerDetails?.provider_first_name,\n        provider_last_name: this.providerDetails?.provider_last_name,\n        seeker_first_name: this.job?.first_name,\n        seeker_last_name: this.job?.last_name,\n        message: this.supportMessage\n      };\n\n      try {\n        const res = await fetch(`${globalVariable}/provider/quicksupport`, {\n          method: \"POST\",\n          headers: { \"Content-Type\": \"application/json\", Authorization: `Bearer ${token}` },\n          body: JSON.stringify(payload)\n        });\n        const data = await res.json();\n        this.supportResponse = {\n          message: res.ok ? \"Message sent successfully.\" : data.message || \"Error sending message.\",\n          type: res.ok ? \"alert-success\" : \"alert-danger\"\n        };\n        if (res.ok) this.supportMessage = \"\";\n      } catch {\n        this.supportResponse = { message: \"Network error occurred.\", type: \"alert-danger\" };\n      }\n    }\n  },\n\n  mounted() {\n    this.getUserIdFromEmail();\n    this.fetchJobSeeker();\n  },\n\n  watch: {\n    \"$route.params.users_id\"() {\n      this.fetchJobSeeker();\n    }\n  }\n};\n</script>\n\n\n\n<style scoped>\n\n\n.pagination .page-item .page-link {\n  color: #E960A6;\n  border: 1px solid #dee2e6;\n  margin: 0 2px;\n}\n.pagination .page-item.active .page-link {\n  background-color: #E960A6;\n  border-color: #E960A6;\n  color: white;\n}\n.pagination .page-item.disabled .page-link {\n  color: #ccc;\n  pointer-events: none;\n  background-color: #f9f9f9;\n}\n\n.modal {\n  position: fixed;\n  top: 0;\n  left: 0;\n  width: 100%;\n  height: 100%;\n  background-color: rgba(0,0,0,0.5);\n  z-index: 1050;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n}\n.modal-dialog {\n  background: white;\n  border-radius: 8px;\n  width: 100%;\n  max-width: 700px;\n}\n.btn-close {\n  background: none;\n  border: none;\n  font-size: 1.2rem;\n}\n\n.card {\n  box-shadow: 0 0 10px rgba(0, 0, 0, 0.1);\n}\n.btn-primary {\n  background-color: #E960A6;\n  color: white;\n}\n.btn-primary:hover {\n  background-color: #E960A6;\n  color: teal;\n}\n\n.form-control {\n          width: 100%;\n          padding: 15px;\n          height: 50px;\n          border: 1px solid #ccc;\n          border-radius: 5px;\n          box-sizing: border-box;\n          transition: border-color 0.3s, box-shadow 0.3s;\n          font-size: 16px;\n        }\n        \n        .form-control:focus {\n          border-color: #E960A6;\n          box-shadow: 0 0 5px rgba(0, 123, 255, 0.5);\n          outline: none;\n        }\n\n.spinner-border {\n  transition: opacity 0.2s ease;\n}\n</style>"],"mappings":";;;;;;;;;;;;AAkPA,SAASA,cAAa,QAAS,UAAU;AACzC,OAAOC,cAAa,MAAO,sBAAsB;AAGjD,eAAe;EACbC,IAAI,EAAE,kBAAkB;EACxBC,UAAU,EAAE;IAAEF;EAAe,CAAC;EAC9BG,IAAIA,CAAA,EAAG;IACL,OAAO;MACLC,GAAG,EAAE,IAAI;MACTC,IAAI,EAAE,EAAE;MACRC,aAAa,EAAE,CAAC,CAAC;MACjBC,UAAU,EAAE,GAAGR,cAAc,mBAAmB;MAC/CS,YAAY,EAAEC,OAAO,CAAC,wBAAwB,CAAC;MAChDC,kBAAkB,EAAE,KAAK;MACzBC,OAAO,EAAE,EAAE;MACXC,WAAW,EAAE,EAAE;MACfC,SAAS,EAAE,EAAE;MACbC,MAAM,EAAE,IAAI;MACZC,OAAO,EAAE,KAAK;MAEdC,WAAW,EAAE,CAAC;MACdC,WAAW,EAAE,CAAC;MAEd;MACAC,aAAa,EAAE,KAAK;MACpBC,QAAQ,EAAE;QACRC,IAAI,EAAE,EAAE;QACRC,WAAW,EAAE,EAAE;QACfC,aAAa,EAAE,EAAE;QACjBC,cAAc,EAAE;MAClB,CAAC;MAED;MACAC,gBAAgB,EAAE,KAAK;MACvBC,cAAc,EAAE,EAAE;MAClBC,eAAe,EAAE;QACff,OAAO,EAAE,EAAE;QACXgB,IAAI,EAAE;MACR,CAAC;MAEDC,eAAe,EAAE;QACfC,eAAe,EAAE,IAAI;QACrBC,mBAAmB,EAAE,EAAE;QACvBC,kBAAkB,EAAE;MACtB;IACF,CAAC;EACH,CAAC;EACDC,QAAQ,EAAE;IACRC,YAAYA,CAAA,EAAG;MACjB,MAAMC,KAAI,GAAI,IAAI,CAACC,UAAU;MAC7B,MAAMC,OAAM,GAAI,IAAI,CAACnB,WAAW;MAChC,MAAMoB,KAAI,GAAI,CAAC;MAEf,IAAIC,KAAI,GAAIC,IAAI,CAACC,GAAG,CAACJ,OAAM,GAAIG,IAAI,CAACE,KAAK,CAACJ,KAAI,GAAI,CAAC,CAAC,EAAE,CAAC,CAAC;MACxD,IAAIK,GAAE,GAAIJ,KAAI,GAAID,KAAI,GAAI,CAAC;MAE3B,IAAIK,GAAE,GAAIR,KAAK,EAAE;QACfQ,GAAE,GAAIR,KAAK;QACXI,KAAI,GAAIC,IAAI,CAACC,GAAG,CAACE,GAAE,GAAIL,KAAI,GAAI,CAAC,EAAE,CAAC,CAAC;MACtC;MAEA,MAAMM,KAAI,GAAI,EAAE;MAChB,KAAK,IAAIC,CAAA,GAAIN,KAAK,EAAEM,CAAA,IAAKF,GAAG,EAAEE,CAAC,EAAE,EAAE;QACjCD,KAAK,CAACE,IAAI,CAACD,CAAC,CAAC;MACf;MACA,OAAOD,KAAK;IACd,CAAC;IAECG,aAAaA,CAAA,EAAG;MACd,OACE,IAAI,CAAC3B,QAAQ,CAACC,IAAG,IACjB,IAAI,CAACD,QAAQ,CAACE,WAAU,IACxB,IAAI,CAACF,QAAQ,CAACG,aAAY,IAC1B,IAAI,CAACH,QAAQ,CAACI,cAAa;IAE/B,CAAC;IACDwB,aAAaA,CAAA,EAAG;MACd,MAAMT,KAAI,GAAI,CAAC,IAAI,CAACrB,WAAU,GAAI,CAAC,IAAI,IAAI,CAACD,WAAW;MACvD,OAAO,IAAI,CAACX,IAAI,CAAC2C,KAAK,CAACV,KAAK,EAAEA,KAAI,GAAI,IAAI,CAACtB,WAAW,CAAC;IACzD,CAAC;IACDmB,UAAUA,CAAA,EAAG;MACX,OAAOI,IAAI,CAACU,IAAI,CAAC,IAAI,CAAC5C,IAAI,CAAC6C,MAAK,GAAI,IAAI,CAAClC,WAAW,CAAC;IACvD;EACF,CAAC;EAECmC,OAAO,EAAE;IAEPC,UAAUA,CAACC,IAAI,EAAE;MACnB,IAAIA,IAAG,IAAK,KAAKA,IAAG,IAAK,IAAI,CAAClB,UAAU,EAAE;QACxC,IAAI,CAAClB,WAAU,GAAIoC,IAAI;QACvBC,MAAM,CAACC,QAAQ,CAAC;UAAEC,GAAG,EAAE,CAAC;UAAEC,QAAQ,EAAE;QAAS,CAAC,CAAC;MACjD;IACF,CAAC;IAEG,MAAMC,kBAAkBA,CAAA,EAAG;MACzB,MAAMC,KAAI,GAAIC,YAAY,CAACC,OAAO,CAAC,eAAe,CAAC;MACnD,IAAI,CAACF,KAAK,EAAE;MACZ,IAAI;QACF,MAAMG,OAAM,GAAIC,IAAI,CAACC,KAAK,CAACC,IAAI,CAACN,KAAK,CAACO,KAAK,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;QACrD,IAAI,CAACrD,SAAQ,GAAIiD,OAAO,CAACK,KAAK;QAC9B,MAAMC,GAAE,GAAI,MAAMC,KAAK,CAAC,GAAGtE,cAAc,yBAAyB,IAAI,CAACc,SAAS,EAAE,EAAE;UAClFyD,OAAO,EAAE;YAAEC,aAAa,EAAE,UAAUZ,KAAK;UAAG;QAC9C,CAAC,CAAC;QACF,MAAMxD,IAAG,GAAI,MAAMiE,GAAG,CAACI,IAAI,CAAC,CAAC;QAC7B,IAAIJ,GAAG,CAACK,EAAE,EAAE;UACV,IAAI,CAAC3D,MAAK,GAAIX,IAAI,CAACuE,QAAQ;UAC3B,IAAI,CAACC,oBAAoB,CAAC,CAAC;QAC7B;MACF,EAAE,OAAOC,GAAG,EAAE;QACZC,OAAO,CAACC,KAAK,CAAC,wBAAwB,EAAEF,GAAG,CAAC;MAC9C;IACF,CAAC;IAED,MAAMD,oBAAoBA,CAAA,EAAG;MAC3B,MAAMhB,KAAI,GAAIC,YAAY,CAACC,OAAO,CAAC,eAAe,CAAC;MACnD,IAAI;QACF,MAAMO,GAAE,GAAI,MAAMC,KAAK,CAAC,GAAGtE,cAAc,6BAA6B,IAAI,CAACe,MAAM,EAAE,EAAE;UACnFwD,OAAO,EAAE;YAAEC,aAAa,EAAE,UAAUZ,KAAK;UAAG;QAC9C,CAAC,CAAC;QACF,MAAMxD,IAAG,GAAI,MAAMiE,GAAG,CAACI,IAAI,CAAC,CAAC;QAC7B,IAAI,CAAC5C,eAAc,GAAImD,KAAK,CAACC,OAAO,CAAC7E,IAAI,IAAIA,IAAI,CAAC,CAAC,IAAIA,IAAI;MAC7D,EAAE,OAAO2E,KAAK,EAAE;QACdD,OAAO,CAACC,KAAK,CAAC,0BAA0B,EAAEA,KAAK,CAAC;MAClD;IACF,CAAC;IAED,MAAMG,cAAcA,CAAA,EAAG;MACrB,MAAMtB,KAAI,GAAIC,YAAY,CAACC,OAAO,CAAC,eAAe,CAAC;MACnD,MAAM/C,MAAK,GAAI,IAAI,CAACoE,MAAM,CAACC,MAAM,CAACT,QAAQ;MAC1C,IAAI;QACF,MAAMN,GAAE,GAAI,MAAMC,KAAK,CAAC,GAAGtE,cAAc,wBAAwBe,MAAM,EAAE,EAAE;UACzEwD,OAAO,EAAE;YAAEC,aAAa,EAAE,UAAUZ,KAAK;UAAG;QAC9C,CAAC,CAAC;QACF,MAAMxD,IAAG,GAAI,MAAMiE,GAAG,CAACI,IAAI,CAAC,CAAC;QAC7B,IAAI,CAACpE,GAAE,GAAID,IAAI;QACf,MAAMiF,UAAS,GAAIC,MAAM,CAAClF,IAAI,CAACmF,aAAa,CAAC;QAC7C,IAAIF,UAAU,EAAE;UACd,IAAI,CAACG,iBAAiB,CAACH,UAAU,CAAC;UAClC,IAAI,CAACI,oBAAoB,CAACJ,UAAU,CAAC;QACvC;MACF,EAAE,OAAON,KAAK,EAAE;QACdD,OAAO,CAACC,KAAK,CAAC,4BAA4B,EAAEA,KAAK,CAAC;MACpD;IACF,CAAC;IAED,MAAMS,iBAAiBA,CAACH,UAAU,EAAE;MAClC,IAAI,IAAI,CAAC9E,aAAa,CAAC8E,UAAU,CAAC,EAAE;MACpC,IAAI;QACF,MAAMhB,GAAE,GAAI,MAAMC,KAAK,CAAC,GAAGtE,cAAc,kBAAkBqF,UAAU,EAAE,CAAC;QACxE,MAAMjF,IAAG,GAAI,MAAMiE,GAAG,CAACI,IAAI,CAAC,CAAC;QAC7B,IAAI,CAAClE,aAAa,CAAC8E,UAAU,IAAIjF,IAAI,CAAC,CAAC,CAAC,EAAEF,IAAG,IAAK,SAAS;MAC7D,EAAE,MAAM;QACN,IAAI,CAACK,aAAa,CAAC8E,UAAU,IAAI,SAAS;MAC5C;IACF,CAAC;IAED,MAAMI,oBAAoBA,CAACJ,UAAU,EAAE;MACrC,MAAMzB,KAAI,GAAIC,YAAY,CAACC,OAAO,CAAC,eAAe,CAAC;MACnD,IAAI;QACF,MAAMO,GAAE,GAAI,MAAMC,KAAK,CAAC,GAAGtE,cAAc,kCAAkCqF,UAAU,EAAE,EAAE;UACvFd,OAAO,EAAE;YAAEC,aAAa,EAAE,UAAUZ,KAAK;UAAG;QAC9C,CAAC,CAAC;QACF,MAAMxD,IAAG,GAAI,MAAMiE,GAAG,CAACI,IAAI,CAAC,CAAC;QAC7B,IAAI,CAACnE,IAAG,GAAIF,IAAI,CAACsF,MAAM,CAACrF,GAAE,IAAKA,GAAG,CAACsE,QAAO,KAAM,IAAI,CAACtE,GAAG,CAACsE,QAAQ,CAAC;QAClE,IAAI,CAAChE,kBAAiB,GAAI,IAAI,CAACL,IAAI,CAAC6C,MAAK,KAAM,CAAC;QAEhD,MAAMwC,SAAQ,GAAI,CAAC,GAAG,IAAIC,GAAG,CAAC,IAAI,CAACtF,IAAI,CAACuF,GAAG,CAACC,CAAA,IAAKA,CAAC,CAACP,aAAa,CAAC,CAAC,CAAC;QACnE,KAAK,MAAMQ,EAAC,IAAKJ,SAAS,EAAE;UAC1B,IAAII,EAAC,IAAK,CAAC,IAAI,CAACxF,aAAa,CAACwF,EAAE,CAAC,EAAE,IAAI,CAACP,iBAAiB,CAACO,EAAE,CAAC;QAC/D;MACF,EAAE,OAAOC,CAAC,EAAE;QACVlB,OAAO,CAACC,KAAK,CAAC,8BAA8B,EAAEiB,CAAC,CAAC;MAClD;IACF,CAAC;IAEDC,eAAeA,CAACC,KAAK,EAAE;MACrBA,KAAK,CAACC,MAAM,CAACC,GAAE,GAAI1F,OAAO,CAAC,yBAAyB,CAAC;IACvD,CAAC;IAED2F,cAAcA,CAAA,EAAG;MACf,IAAI,CAAClF,aAAY,GAAI,KAAK;MAC1B,IAAI,CAACC,QAAO,GAAI;QAAEC,IAAI,EAAE,EAAE;QAAEC,WAAW,EAAE,EAAE;QAAEC,aAAa,EAAE,EAAE;QAAEC,cAAc,EAAE;MAAG,CAAC;IACtF,CAAC;IAED,MAAM8E,UAAUA,CAAA,EAAG;MACjB,IAAI,CAAC,IAAI,CAACvD,aAAa,EAAE;MACzB,IAAI,CAAC/B,OAAM,GAAI,IAAI;MACnB,MAAM4C,KAAI,GAAIC,YAAY,CAACC,OAAO,CAAC,eAAe,CAAC;MACnD,MAAMC,OAAM,GAAI;QACdwC,aAAa,EAAE,IAAI,CAAClG,GAAG,EAAEkG,aAAa;QACtCzE,eAAe,EAAE,IAAI,CAACD,eAAe,EAAEC,eAAe;QACtDC,mBAAmB,EAAE,IAAI,CAACF,eAAe,EAAEE,mBAAmB;QAC9DC,kBAAkB,EAAE,IAAI,CAACH,eAAe,EAAEG,kBAAkB;QAC5DwE,iBAAiB,EAAE,IAAI,CAACnG,GAAG,EAAEoG,UAAU;QACvCC,gBAAgB,EAAE,IAAI,CAACrG,GAAG,EAAEsG,SAAS;QACrCC,gBAAgB,EAAE,IAAI,CAACxF,QAAQ,EAAEC,IAAI;QACrCwF,YAAY,EAAE,IAAI,CAACzF,QAAQ,EAAEE,WAAW;QACxCwF,wBAAwB,EAAE,IAAI,CAAC1F,QAAQ,EAAEG,aAAa;QACtDwF,eAAe,EAAE,IAAI,CAAC3F,QAAQ,EAAEI;MAClC,CAAC;MAED,IAAI;QACF,MAAM6C,GAAE,GAAI,MAAMC,KAAK,CAAC,GAAGtE,cAAc,gBAAgB,EAAE;UACzDgH,MAAM,EAAE,MAAM;UACdzC,OAAO,EAAE;YAAE,cAAc,EAAE,kBAAkB;YAAEC,aAAa,EAAE,UAAUZ,KAAK;UAAG,CAAC;UACjFqD,IAAI,EAAEjD,IAAI,CAACkD,SAAS,CAACnD,OAAO;QAC9B,CAAC,CAAC;QACF,MAAM3D,IAAG,GAAI,MAAMiE,GAAG,CAACI,IAAI,CAAC,CAAC;QAC7B,IAAI,CAAC7D,OAAM,GAAIyD,GAAG,CAACK,EAAC,GAAI,sCAAqC,GAAItE,IAAI,CAACQ,OAAM,IAAK,iBAAiB;QAClG,IAAI,CAACC,WAAU,GAAIwD,GAAG,CAACK,EAAC,GAAI,eAAc,GAAI,cAAc;MAC9D,EAAE,OAAOsB,CAAC,EAAE;QACV,IAAI,CAACpF,OAAM,GAAI,gBAAgB;QAC/B,IAAI,CAACC,WAAU,GAAI,cAAc;MACnC,UAAU;QACR,IAAI,CAACG,OAAM,GAAI,KAAK;MACtB;IACF,CAAC;IAEDmG,iBAAiBA,CAAA,EAAG;MAClB,IAAI,CAAC1F,gBAAe,GAAI,KAAK;MAC7B,IAAI,CAACC,cAAa,GAAI,EAAE;MACxB,IAAI,CAACC,eAAc,GAAI;QAAEf,OAAO,EAAE,EAAE;QAAEgB,IAAI,EAAE;MAAG,CAAC;IAClD,CAAC;IAED,MAAMwF,kBAAkBA,CAAA,EAAG;MACzB,MAAMxD,KAAI,GAAIC,YAAY,CAACC,OAAO,CAAC,eAAe,CAAC;MACnD,MAAMC,OAAM,GAAI;QACdwC,aAAa,EAAE,IAAI,CAAClG,GAAG,EAAEkG,aAAa;QACtCzE,eAAe,EAAE,IAAI,CAACD,eAAe,EAAEC,eAAe;QACtDC,mBAAmB,EAAE,IAAI,CAACF,eAAe,EAAEE,mBAAmB;QAC9DC,kBAAkB,EAAE,IAAI,CAACH,eAAe,EAAEG,kBAAkB;QAC5DwE,iBAAiB,EAAE,IAAI,CAACnG,GAAG,EAAEoG,UAAU;QACvCC,gBAAgB,EAAE,IAAI,CAACrG,GAAG,EAAEsG,SAAS;QACrC/F,OAAO,EAAE,IAAI,CAACc;MAChB,CAAC;MAED,IAAI;QACF,MAAM2C,GAAE,GAAI,MAAMC,KAAK,CAAC,GAAGtE,cAAc,wBAAwB,EAAE;UACjEgH,MAAM,EAAE,MAAM;UACdzC,OAAO,EAAE;YAAE,cAAc,EAAE,kBAAkB;YAAEC,aAAa,EAAE,UAAUZ,KAAK;UAAG,CAAC;UACjFqD,IAAI,EAAEjD,IAAI,CAACkD,SAAS,CAACnD,OAAO;QAC9B,CAAC,CAAC;QACF,MAAM3D,IAAG,GAAI,MAAMiE,GAAG,CAACI,IAAI,CAAC,CAAC;QAC7B,IAAI,CAAC9C,eAAc,GAAI;UACrBf,OAAO,EAAEyD,GAAG,CAACK,EAAC,GAAI,4BAA2B,GAAItE,IAAI,CAACQ,OAAM,IAAK,wBAAwB;UACzFgB,IAAI,EAAEyC,GAAG,CAACK,EAAC,GAAI,eAAc,GAAI;QACnC,CAAC;QACD,IAAIL,GAAG,CAACK,EAAE,EAAE,IAAI,CAAChD,cAAa,GAAI,EAAE;MACtC,EAAE,MAAM;QACN,IAAI,CAACC,eAAc,GAAI;UAAEf,OAAO,EAAE,yBAAyB;UAAEgB,IAAI,EAAE;QAAe,CAAC;MACrF;IACF;EACF,CAAC;EAEDyF,OAAOA,CAAA,EAAG;IACR,IAAI,CAAC1D,kBAAkB,CAAC,CAAC;IACzB,IAAI,CAACuB,cAAc,CAAC,CAAC;EACvB,CAAC;EAEDoC,KAAK,EAAE;IACL,wBAAwBC,CAAA,EAAG;MACzB,IAAI,CAACrC,cAAc,CAAC,CAAC;IACvB;EACF;AACF,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}