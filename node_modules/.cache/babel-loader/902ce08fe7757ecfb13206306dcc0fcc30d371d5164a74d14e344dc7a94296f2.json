{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport \"core-js/modules/es.iterator.constructor.js\";\nimport \"core-js/modules/es.iterator.filter.js\";\nimport \"core-js/modules/es.iterator.for-each.js\";\nimport \"core-js/modules/web.dom-exception.stack.js\";\nimport IndexComponent from \"./IndexComponent.vue\";\nimport { globalVariable } from \"@/global\";\nexport default {\n  name: \"MainWrapper\",\n  components: {\n    IndexComponent\n  },\n  data() {\n    return {\n      uploadsUrl: globalVariable + \"/uploads/logo/\",\n      form: {\n        job_id: null,\n        job_title: \"\",\n        company: \"\",\n        deadline_date: \"\",\n        job_description: \"\",\n        requirements: \"\",\n        responsability: \"\",\n        salary_min: \"\",\n        salary_max: \"\",\n        conclusion: \"\",\n        logo: \"\",\n        location: \"\",\n        category_id: null\n      },\n      jobs: [],\n      isSubmitting: false,\n      categories: [],\n      categoryNames: {},\n      selectedCategoryId: null,\n      status: {\n        success: false,\n        message: \"\"\n      },\n      userEmail: \"\",\n      userId: \"\",\n      showModal: false,\n      selectedJobId: null,\n      // Search, Filter & Pagination\n      searchQuery: \"\",\n      filterStatus: \"\",\n      currentPage: 1,\n      itemsPerPage: 10\n    };\n  },\n  computed: {\n    isAdmin() {\n      return this.userEmail.toLowerCase() === \"admin@kozi.rw\";\n    },\n    pagesToShow() {\n      const total = this.totalPages;\n      const current = this.currentPage;\n      const delta = 2; // how many pages to show before and after current\n      const range = [];\n      for (let i = Math.max(1, current - delta); i <= Math.min(total, current + delta); i++) {\n        range.push(i);\n      }\n      return range;\n    },\n    filteredJobs() {\n      const query = this.searchQuery.toLowerCase();\n      return this.jobs.filter(job => {\n        const title = (job.job_title || \"\").toLowerCase();\n        const company = (job.company || \"\").toLowerCase();\n        const location = (job.location || \"\").toLowerCase();\n        const matchesSearch = title.includes(query) || company.includes(query) || location.includes(query);\n        const matchesStatus = this.filterStatus === \"\" ? true : String(job.status) === String(this.filterStatus);\n        return matchesSearch && matchesStatus;\n      });\n    },\n    totalPages() {\n      return Math.ceil(this.filteredJobs.length / this.itemsPerPage);\n    },\n    paginatedJobs() {\n      const start = (this.currentPage - 1) * this.itemsPerPage;\n      return this.filteredJobs.slice(start, start + this.itemsPerPage);\n    }\n  },\n  mounted() {\n    this.userEmail = localStorage.getItem(\"userEmail\") || \"\";\n    if (this.userEmail) {\n      this.getUserIdFromEmail();\n    }\n    this.fetchCategories(); // Fetch categories on mount\n  },\n  methods: {\n    handleFileUpload(event) {\n      this.form.logo = event.target.files[0];\n    },\n    openModal(job_id) {\n      this.selectedJobId = job_id;\n      this.showModal = true;\n    },\n    closeModal() {\n      this.showModal = false;\n      this.selectedJobId = null;\n    },\n    changePage(page) {\n      if (page >= 1 && page <= this.totalPages) {\n        this.currentPage = page;\n      }\n    },\n    async fetchCategories() {\n      try {\n        const token = localStorage.getItem(\"adminToken\");\n        const response = await fetch(`${globalVariable}/name_and_id`, {\n          headers: {\n            Authorization: `Bearer ${token}`\n          }\n        });\n        const data = await response.json();\n        if (response.ok) {\n          this.categories = data;\n          data.forEach(category => {\n            this.categoryNames[category.id] = category.name;\n          });\n        } else {\n          console.error(\"Failed to load categories:\", data.message);\n        }\n      } catch (error) {\n        console.error(\"Error fetching categories:\", error);\n      }\n    },\n    async fetchCategoryNameByUserId() {\n      try {\n        const res = await fetch(`${globalVariable}/category/${this.userId}`);\n        const data = await res.json();\n        if (res.ok && data.name) {\n          this.categoryName = data.name;\n        } else {\n          this.categoryName = \"Unknown\";\n        }\n      } catch (error) {\n        console.error(\"Failed to fetch category name:\", error);\n        this.categoryName = \"Error fetching category\";\n      }\n    },\n    getCategoryName(categoryId) {\n      return this.categoryNames[categoryId] || \"Unknown\";\n    },\n    async confirmDeleteJob() {\n      const token = localStorage.getItem(\"adminToken\");\n      try {\n        const res = await fetch(`${globalVariable}/admin/delete_job/${this.selectedJobId}`, {\n          method: \"DELETE\",\n          headers: {\n            Authorization: `Bearer ${token}`\n          }\n        });\n        const result = await res.json();\n        if (res.ok) {\n          this.status = {\n            success: true,\n            message: result.message || \"Job deleted successfully.\"\n          };\n          this.fetchJobsByUser();\n        } else {\n          this.status = {\n            success: false,\n            message: result.message || \"Failed to delete job.\"\n          };\n        }\n      } catch (err) {\n        console.error(\"Delete error:\", err);\n        this.status = {\n          success: false,\n          message: \"Unexpected error occurred while deleting.\"\n        };\n      } finally {\n        this.closeModal();\n      }\n    },\n    async fetchJobsByUser() {\n      try {\n        const token = localStorage.getItem(\"adminToken\");\n        if (!this.userId) return;\n        const res = await fetch(`${globalVariable}/admin/select_jobs`, {\n          headers: {\n            Authorization: `Bearer ${token}`\n          }\n        });\n        if (!res.ok) throw new Error(\"Failed to fetch jobs\");\n        const data = await res.json();\n        this.jobs = data;\n        console.log(\"Jobs loaded:\", this.jobs);\n      } catch (err) {\n        console.error(\"Error fetching jobs for user:\", err);\n      }\n    },\n    async submitForm() {\n      this.isSubmitting = true;\n      this.status.message = \"\";\n      try {\n        const formData = new FormData();\n        const today = new Date().toISOString().split(\"T\")[0];\n        formData.append(\"job_title\", this.form.job_title);\n        formData.append(\"company\", this.form.company);\n        formData.append(\"location\", this.form.location);\n        formData.append(\"job_description\", this.form.job_description);\n        formData.append(\"requirements\", this.form.requirements);\n        formData.append(\"responsability\", this.form.responsability);\n        formData.append(\"salary_min\", this.form.salary_min);\n        formData.append(\"salary_max\", this.form.salary_max);\n        formData.append(\"conclusion\", this.form.conclusion);\n        formData.append(\"published_date\", today);\n        formData.append(\"deadline_date\", this.form.deadline_date);\n        formData.append(\"users_id\", this.userId);\n        formData.append(\"category_id\", this.selectedCategoryId); // Add category_id to form data\n\n        if (this.form.logo && typeof this.form.logo !== \"string\") {\n          formData.append(\"logo\", this.form.logo);\n        }\n        const token = localStorage.getItem(\"adminToken\");\n        const url = this.form.job_id ? `${globalVariable}/admin/update_job/${this.form.job_id}` : `${globalVariable}/admin/add_jobs`;\n        const method = this.form.job_id ? \"PUT\" : \"POST\";\n        const response = await fetch(url, {\n          method,\n          headers: {\n            Authorization: `Bearer ${token}`\n          },\n          body: formData\n        });\n        if (response.ok) {\n          const result = await response.json();\n          this.status = {\n            success: true,\n            message: result.message || (this.form.job_id ? \"Job updated!\" : \"Job added!\")\n          };\n\n          // Reset form\n          this.form = {\n            job_id: null,\n            job_title: \"\",\n            company: \"\",\n            deadline_date: \"\",\n            job_description: \"\",\n            requirements: \"\",\n            responsability: \"\",\n            salary_max: \"\",\n            salary_min: \"\",\n            conclusion: \"\",\n            logo: \"\",\n            location: \"\",\n            category_id: null\n          };\n          this.selectedCategoryId = null;\n          this.fetchJobsByUser();\n        } else {\n          const error = await response.text();\n          this.status = {\n            success: false,\n            message: \"Failed: \" + error\n          };\n        }\n      } catch (err) {\n        console.error(\"Error:\", err);\n        this.status = {\n          success: false,\n          message: \"Unexpected error occurred.\"\n        };\n      } finally {\n        this.isSubmitting = false;\n      }\n    },\n    editJob(job) {\n      const deadlineDate = job.deadline_date ? new Date(job.deadline_date).toISOString().split(\"T\")[0] : \"\";\n      this.form = {\n        job_id: job.job_id,\n        job_title: job.job_title,\n        company: job.company,\n        deadline_date: deadlineDate,\n        job_description: job.job_description,\n        requirements: job.requirements,\n        responsability: job.responsability,\n        salary_min: job.salary_min,\n        salary_max: job.salary_max,\n        conclusion: job.conclusion,\n        logo: job.logo,\n        location: job.location,\n        category_id: job.category_id\n      };\n\n      // Set the selected category for the dropdown\n      this.selectedCategoryId = job.category_id;\n      window.scrollTo({\n        top: 0,\n        behavior: \"smooth\"\n      });\n    },\n    goToMore(job_id) {\n      this.$router.push({\n        name: \"admin/job-details\",\n        params: {\n          id: job_id\n        }\n      });\n    },\n    async getUserIdFromEmail() {\n      const token = localStorage.getItem(\"adminToken\");\n      if (!token) return;\n      try {\n        const payload = JSON.parse(atob(token.split(\".\")[1]));\n        if (!this.userEmail) {\n          this.userEmail = payload.email;\n        }\n        const res = await fetch(`${globalVariable}/get_user_id_by_email/${this.userEmail}`, {\n          headers: {\n            Authorization: `Bearer ${token}`\n          }\n        });\n        const data = await res.json();\n        if (res.ok) {\n          this.userId = data.users_id;\n          this.fetchJobsByUser();\n        } else {\n          this.status = {\n            success: false,\n            message: data.message || \"Unable to get user ID.\"\n          };\n        }\n      } catch (err) {\n        console.error(\"Error getting users_id:\", err);\n        this.status = {\n          success: false,\n          message: \"Failed to fetch user ID.\"\n        };\n      }\n    },\n    getStatusLabel(status) {\n      if (status === 0) {\n        return {\n          text: \"Pending\",\n          colorClass: \"text-danger\"\n        };\n      } else if (status === 1) {\n        return {\n          text: \"Approved\",\n          colorClass: \"text-success\"\n        };\n      } else {\n        return {\n          text: \"Unknown\",\n          colorClass: \"text-muted\"\n        };\n      }\n    },\n    highlightMatch(text) {\n      if (text === null || text === undefined) return \"\";\n      const str = String(text); // convert to string\n      if (!this.searchQuery) return str;\n      const regex = new RegExp(`(${this.searchQuery})`, \"gi\");\n      return str.replace(regex, `<span class=\"highlight-teal\">$1</span>`);\n    }\n  }\n};","map":{"version":3,"names":["IndexComponent","globalVariable","name","components","data","uploadsUrl","form","job_id","job_title","company","deadline_date","job_description","requirements","responsability","salary_min","salary_max","conclusion","logo","location","category_id","jobs","isSubmitting","categories","categoryNames","selectedCategoryId","status","success","message","userEmail","userId","showModal","selectedJobId","searchQuery","filterStatus","currentPage","itemsPerPage","computed","isAdmin","toLowerCase","pagesToShow","total","totalPages","current","delta","range","i","Math","max","min","push","filteredJobs","query","filter","job","title","matchesSearch","includes","matchesStatus","String","ceil","length","paginatedJobs","start","slice","mounted","localStorage","getItem","getUserIdFromEmail","fetchCategories","methods","handleFileUpload","event","target","files","openModal","closeModal","changePage","page","token","response","fetch","headers","Authorization","json","ok","forEach","category","id","console","error","fetchCategoryNameByUserId","res","categoryName","getCategoryName","categoryId","confirmDeleteJob","method","result","fetchJobsByUser","err","Error","log","submitForm","formData","FormData","today","Date","toISOString","split","append","url","body","text","editJob","deadlineDate","window","scrollTo","top","behavior","goToMore","$router","params","payload","JSON","parse","atob","email","users_id","getStatusLabel","colorClass","highlightMatch","undefined","str","regex","RegExp","replace"],"sources":["/Users/gentil/Desktop/Kozi-ai-agent/src/views/admin/RegisterJob.vue"],"sourcesContent":["<template>\n  <IndexComponent />\n  <div\n    class=\"page-wrapper\"\n    id=\"main-wrapper\"\n    data-layout=\"vertical\"\n    data-navbarbg=\"skin6\"\n    data-sidebartype=\"full\"\n    data-sidebar-description=\"fixed\"\n    data-header-description=\"fixed\"\n    style=\"position: absolute; top: 0; left: 0; right: 0; bottom: 0; z-index: 1;\"\n  >\n    <div class=\"body-wrapper\" style=\"margin-top: 70px; margin-left: 270px; background: white; min-height: calc(100vh - 70px); padding: 20px; overflow-y: auto; max-height: calc(100vh - 70px);\">\n      <!-- <div v-if=\"userEmail\" class=\"card-body\">\n        <h5 class=\"text-center\">Logged in as:</h5>\n        <h6 class=\"text-center text-muted\">{{ userEmail }}</h6>\n        <p><strong>users_id:</strong> {{ userId }}</p>\n      </div> -->\n\n      <h5 class=\"card-title fw-semibold mb-4\" style=\"color: #E960A6;\">\n        <i class=\"ti ti-user-plus\"></i> Register New Job\n      </h5>\n\n      <form class=\"mx-4\" @submit.prevent=\"submitForm\">\n        <div\n          v-if=\"status.message\"\n          :class=\"['alert mt-3', status.success ? 'alert-success' : 'alert-danger']\"\n        >\n          {{ status.message }}\n        </div>\n\n        <div class=\"form-group row\">\n          <div class=\"col-md-6\">\n            <label class=\"form-label\">Job Title</label>\n            <input type=\"text\" v-model=\"form.job_title\" class=\"form-control\" required />\n          </div>\n          <div class=\"col-md-6\">\n            <label class=\"form-label\">Company Name</label>\n            <input type=\"text\" v-model=\"form.company\" class=\"form-control\" required />\n          </div>\n        </div>\n\n        <div class=\"form-group row\">\n\n          <div class=\"col-md-6\">\n          <label class=\"form-label\">Working Mode</label>\n          <select v-model=\"form.location\" class=\"form-control\"  required>\n          <option value=\"\" disabled>Choose Mode</option>\n          <option value=\"Remote\">Remote</option>\n          <option value=\"Full Time\">Full Time</option>\n          </select>\n          </div>\n\n          \n          <div class=\"col-md-6\">\n            <label class=\"form-label\">Deadline Date</label>\n            <input type=\"date\" v-model=\"form.deadline_date\" class=\"form-control\" required />\n          </div>\n        </div>\n\n        <div class=\"form-group row\">\n          <div class=\"col-md-6\">\n            <label class=\"form-label\">Category</label>\n            <select v-model=\"selectedCategoryId\" class=\"form-control\" style=\"height: 48px; padding-top: 8px; padding-bottom: 8px;\" required>\n              <option value=\"\">Select a category</option>\n              <option\n                v-for=\"category in categories\"\n                :key=\"category.id\"\n                :value=\"category.id\"\n              >\n                {{ category.name }}\n              </option>\n            </select>\n          </div>\n\n          <div class=\"col-md-6\">\n            <label class=\"form-label\">Logo</label>\n            <div v-if=\"form.logo && typeof form.logo === 'string'\" class=\"mb-2\">\n              <img :src=\"uploadsUrl + form.logo\" alt=\"Current Logo\" class=\"custom-job-logo\" width=\"150\" />\n            </div>\n            <input type=\"file\" @change=\"handleFileUpload\" class=\"form-control\" />\n          </div>\n        </div>\n\n        <div class=\"form-group row\">\n          <div class=\"col-md-12\">\n            <label class=\"form-label\">Job Description</label>\n            <textarea\n              v-model=\"form.job_description\"\n              class=\"form-control\"\n              style=\"height: 100px;\"\n              required\n            ></textarea>\n          </div>\n        </div>\n        <div class=\"form-group row\">\n          <div class=\"col-md-12\">\n            <label class=\"form-label\">Requirements</label>\n            <textarea\n              v-model=\"form.requirements\"\n              class=\"form-control\"\n              style=\"height: 100px;\"\n              required\n            ></textarea>\n          </div>\n        </div>\n        <div class=\"form-group row\">\n          <div class=\"col-md-12\">\n            <label class=\"form-label\">Responsability</label>\n            <textarea\n              v-model=\"form.responsability\"\n              class=\"form-control\"\n              style=\"height: 100px;\"\n              required\n            ></textarea>\n          </div>\n        </div>\n        <div class=\"form-group row\">\n          <div class=\"col-md-6\">\n            <label class=\"form-label\">Salary-Min</label>\n            <input type=\"number\" v-model=\"form.salary_min\" class=\"form-control\" required />\n          </div>\n          <div class=\"col-md-6\">\n            <label class=\"form-label\">Salary-max</label>\n            <input type=\"number\" v-model=\"form.salary_max\" class=\"form-control\" required />\n          </div>\n        </div>\n        <div class=\"form-group row\">\n          <div class=\"col-md-12\">\n            <label class=\"form-label\">Conclusion</label>\n            <textarea\n              v-model=\"form.conclusion\"\n              class=\"form-control\"\n              style=\"height: 100px;\"\n              required\n            ></textarea>\n          </div>\n        </div>\n\n        <button type=\"submit\" class=\"btn btn-primary mt-3\" :disabled=\"isSubmitting\">\n          <span\n            v-if=\"isSubmitting\"\n            class=\"spinner-border spinner-border-sm me-2\"\n            role=\"status\"\n            aria-hidden=\"true\"\n          ></span>\n          {{ isSubmitting ? \"Submitting...\" : form.job_id ? \"Update Job\" : \"Submit Job\" }}\n        </button>\n      </form>\n\n      <!-- Confirmation Modal -->\n      <div v-if=\"showModal\" class=\"modal-overlay\">\n        <div class=\"modal-content\">\n          <h5>Are you sure you want to delete this job?</h5>\n          <div>\n            <button class=\"btn btn-danger mt-3\" @click=\"confirmDeleteJob\">Yes, Delete</button>\n            &nbsp;\n            <button class=\"btn btn-cancel mt-3\" style=\"background-color: teal; color: white;\" @click=\"closeModal\">\n              Cancel\n            </button>\n          </div>\n        </div>\n      </div>\n\n      <hr class=\"my-4\" />\n      <h5 class=\"fw-semibold mb-3\">Your Jobs</h5>\n\n      <!-- Search and Filter -->\n      <div class=\"row mb-3 mx-4\">\n        <div class=\"col-md-8\">\n          <input v-model=\"searchQuery\" class=\"form-control\" placeholder=\"Search by title, company or location\" />\n        </div>\n        <div class=\"col-md-4\">\n          <select v-model=\"filterStatus\" class=\"form-control\">\n            <option value=\"\">All Statuses</option>\n            <option value=\"1\">Approved</option>\n            <option value=\"0\">Pending</option>\n          </select>\n        </div>\n      </div>\n      <div v-if=\"filteredJobs.length === 0\" class=\"text-muted px-4\">.</div>\n      <div v-if=\"filteredJobs.length === 0\" class=\"d-flex justify-content-center my-4\">\n        <div class=\"btn btn-danger text-center\" style=\"width: 40rem;\">\n          No jobs available yet.\n        </div>\n      </div>\n\n      <div class=\"table-responsive\" v-else>\n        <table class=\"table table-bordered\">\n          <thead class=\"table-light\">\n            <tr>\n              <th>Id</th>\n              <th>Title</th>\n              <th>Description</th>\n              <th>Requirements</th>\n              <th>Responsability</th>\n              <th>salary-min</th>\n              <th>salary-max</th>\n              <th>Company</th>\n              <th>Location</th>\n              <th>Category</th>\n              <th>Published</th>\n              <th>Deadline</th>\n              <th>Conclusion</th>\n              <th>Logo</th>\n              <th>Publisher</th>\n              <th>Status</th>\n              <th>Action</th>\n            </tr>\n          </thead>\n          <tbody>\n            <tr v-for=\"(job, index) in paginatedJobs\" :key=\"job.job_id\">\n              <td>{{ (currentPage - 1) * itemsPerPage + index + 1 }}</td>\n              <td v-html=\"highlightMatch(job.job_title)\"></td>\n              <td>\n                {{ job.job_description.length > 100 ? job.job_description.substring(0, 100) + \"...\" : job.job_description }}\n              </td>\n              <td>\n                {{ job.requirements.length > 100 ? job.requirements.substring(0, 100) + \"...\" : job.requirements }}\n              </td>\n              <td>\n                {{ job.responsability.length > 100 ? job.responsability.substring(0, 100) + \"...\" : job.responsability }}\n              </td>\n              <td v-html=\"highlightMatch(job.salary_min)\"></td>\n              <td v-html=\"highlightMatch(job.salary_max)\"></td>\n              <td v-html=\"highlightMatch(job.company)\"></td>\n              <td v-html=\"highlightMatch(job.location)\"></td>\n              <td>{{ getCategoryName(job.category_id) }}</td>\n              <td>{{ job.published_date ? job.published_date.substring(0, 10) : \"\" }}</td>\n              <td>{{ job.deadline_date ? job.deadline_date.substring(0, 10) : \"\" }}</td>\n              <td>\n                {{ job.conclusion.length > 100 ? job.conclusion.substring(0, 100) + \"...\" : job.conclusion }}\n              </td>\n              <td>\n                <img :src=\"uploadsUrl + job.logo\" alt=\"Logo\" class=\"custom-job-logo\" width=\"100\" />\n              </td>\n              <td>{{ job.first_name }} {{ job.last_name }}</td>\n              <td>\n                <span :class=\"[getStatusLabel(job.status).colorClass, 'fw-bold']\">\n                  {{ getStatusLabel(job.status).text }}\n                </span>\n              </td>\n              <td>\n                <button class=\"btn btn-primary btn-sm\" @click=\"editJob(job)\" :disabled=\"!isAdmin\">Edit</button>\n                <button class=\"btn btn-cancel btn-sm\" @click=\"goToMore(job.job_id)\">More</button>\n                <button class=\"btn btn-primary btn-sm\" @click=\"openModal(job.job_id)\" :disabled=\"!isAdmin\">Delete</button>\n              </td>\n            </tr>\n          </tbody>\n        </table>\n      </div>\n\n      <!-- Pagination -->\n      <nav class=\"mt-3\" v-if=\"totalPages > 1\">\n        <ul class=\"pagination justify-content-center\">\n          <li class=\"page-item\" :class=\"{ disabled: currentPage === 1 }\">\n            <button class=\"page-link\" @click=\"changePage(currentPage - 1)\">Previous</button>\n          </li>\n          <li\n            v-for=\"page in pagesToShow\"\n            :key=\"page\"\n            :class=\"['page-item', { active: currentPage === page }]\"\n          >\n            <button class=\"page-link\" @click=\"changePage(page)\">{{ page }}</button>\n          </li>\n          <li class=\"page-item\" :class=\"{ disabled: currentPage === totalPages }\">\n            <button class=\"page-link\" @click=\"changePage(currentPage + 1)\">Next</button>\n          </li>\n        </ul>\n      </nav>\n    </div>\n  </div>\n</template>\n\n<script>\nimport IndexComponent from \"./IndexComponent.vue\";\nimport { globalVariable } from \"@/global\";\n\nexport default {\n  name: \"MainWrapper\",\n  components: { IndexComponent },\n  data() {\n    return {\n      uploadsUrl: globalVariable + \"/uploads/logo/\",\n      form: {\n        job_id: null,\n        job_title: \"\",\n        company: \"\",\n        deadline_date: \"\",\n        job_description: \"\",\n        requirements: \"\",\n        responsability: \"\",\n        salary_min: \"\",\n        salary_max: \"\",\n        conclusion: \"\",\n        logo: \"\",\n        location: \"\",\n        category_id: null,\n      },\n      jobs: [],\n      isSubmitting: false,\n      categories: [],\n      categoryNames: {},\n      selectedCategoryId: null,\n      status: {\n        success: false,\n        message: \"\",\n      },\n      userEmail: \"\",\n      userId: \"\",\n      showModal: false,\n      selectedJobId: null,\n\n      // Search, Filter & Pagination\n      searchQuery: \"\",\n      filterStatus: \"\",\n      currentPage: 1,\n      itemsPerPage: 10,\n    };\n  },\n  computed: {\n    isAdmin() {\n    return this.userEmail.toLowerCase() === \"admin@kozi.rw\";\n  },\n    pagesToShow() {\n      const total = this.totalPages;\n      const current = this.currentPage;\n      const delta = 2; // how many pages to show before and after current\n      const range = [];\n\n      for (let i = Math.max(1, current - delta); i <= Math.min(total, current + delta); i++) {\n        range.push(i);\n      }\n\n      return range;\n    },\n    filteredJobs() {\n      const query = this.searchQuery.toLowerCase();\n      return this.jobs.filter((job) => {\n        const title = (job.job_title || \"\").toLowerCase();\n        const company = (job.company || \"\").toLowerCase();\n        const location = (job.location || \"\").toLowerCase();\n\n        const matchesSearch =\n          title.includes(query) || company.includes(query) || location.includes(query);\n\n        const matchesStatus =\n          this.filterStatus === \"\"\n            ? true\n            : String(job.status) === String(this.filterStatus);\n\n        return matchesSearch && matchesStatus;\n      });\n    },\n    totalPages() {\n      return Math.ceil(this.filteredJobs.length / this.itemsPerPage);\n    },\n    paginatedJobs() {\n      const start = (this.currentPage - 1) * this.itemsPerPage;\n      return this.filteredJobs.slice(start, start + this.itemsPerPage);\n    },\n  },\n  mounted() {\n    this.userEmail = localStorage.getItem(\"userEmail\") || \"\";\n    if (this.userEmail) {\n      this.getUserIdFromEmail();\n    }\n    this.fetchCategories(); // Fetch categories on mount\n  },\n  methods: {\n    handleFileUpload(event) {\n      this.form.logo = event.target.files[0];\n    },\n    openModal(job_id) {\n      this.selectedJobId = job_id;\n      this.showModal = true;\n    },\n    closeModal() {\n      this.showModal = false;\n      this.selectedJobId = null;\n    },\n    changePage(page) {\n      if (page >= 1 && page <= this.totalPages) {\n        this.currentPage = page;\n      }\n    },\n    async fetchCategories() {\n      try {\n        const token = localStorage.getItem(\"adminToken\");\n        const response = await fetch(`${globalVariable}/name_and_id`, {\n          headers: {\n            Authorization: `Bearer ${token}`,\n          },\n        });\n        const data = await response.json();\n        if (response.ok) {\n          this.categories = data;\n          data.forEach(category => {\n            this.categoryNames[category.id] = category.name;\n          });\n        } else {\n          console.error(\"Failed to load categories:\", data.message);\n        }\n      } catch (error) {\n        console.error(\"Error fetching categories:\", error);\n      }\n    },\n    async fetchCategoryNameByUserId() {\n      try {\n        const res = await fetch(`${globalVariable}/category/${this.userId}`);\n        const data = await res.json();\n        if (res.ok && data.name) {\n          this.categoryName = data.name;\n        } else {\n          this.categoryName = \"Unknown\";\n        }\n      } catch (error) {\n        console.error(\"Failed to fetch category name:\", error);\n        this.categoryName = \"Error fetching category\";\n      }\n    },\n    getCategoryName(categoryId) {\n      return this.categoryNames[categoryId] || \"Unknown\";\n    },\n    async confirmDeleteJob() {\n      const token = localStorage.getItem(\"adminToken\");\n\n      try {\n        const res = await fetch(`${globalVariable}/admin/delete_job/${this.selectedJobId}`, {\n          method: \"DELETE\",\n          headers: {\n            Authorization: `Bearer ${token}`,\n          },\n        });\n\n        const result = await res.json();\n\n        if (res.ok) {\n          this.status = {\n            success: true,\n            message: result.message || \"Job deleted successfully.\",\n          };\n          this.fetchJobsByUser();\n        } else {\n          this.status = {\n            success: false,\n            message: result.message || \"Failed to delete job.\",\n          };\n        }\n      } catch (err) {\n        console.error(\"Delete error:\", err);\n        this.status = {\n          success: false,\n          message: \"Unexpected error occurred while deleting.\",\n        };\n      } finally {\n        this.closeModal();\n      }\n    },\n    async fetchJobsByUser() {\n      try {\n        const token = localStorage.getItem(\"adminToken\");\n        if (!this.userId) return;\n        const res = await fetch(`${globalVariable}/admin/select_jobs`, {\n          headers: {\n            Authorization: `Bearer ${token}`,\n          },\n        });\n        if (!res.ok) throw new Error(\"Failed to fetch jobs\");\n        const data = await res.json();\n        this.jobs = data;\n        console.log(\"Jobs loaded:\", this.jobs);\n      } catch (err) {\n        console.error(\"Error fetching jobs for user:\", err);\n      }\n    },\n    async submitForm() {\n      this.isSubmitting = true;\n      this.status.message = \"\";\n\n      try {\n        const formData = new FormData();\n        const today = new Date().toISOString().split(\"T\")[0];\n\n        formData.append(\"job_title\", this.form.job_title);\n        formData.append(\"company\", this.form.company);\n        formData.append(\"location\", this.form.location);\n        formData.append(\"job_description\", this.form.job_description);\n        formData.append(\"requirements\", this.form.requirements);\n        formData.append(\"responsability\", this.form.responsability);\n        formData.append(\"salary_min\", this.form.salary_min);\n        formData.append(\"salary_max\", this.form.salary_max);\n        formData.append(\"conclusion\", this.form.conclusion);\n        formData.append(\"published_date\", today);\n        formData.append(\"deadline_date\", this.form.deadline_date);\n        formData.append(\"users_id\", this.userId);\n        formData.append(\"category_id\", this.selectedCategoryId); // Add category_id to form data\n        \n        if (this.form.logo && typeof this.form.logo !== \"string\") {\n          formData.append(\"logo\", this.form.logo);\n        }\n\n        const token = localStorage.getItem(\"adminToken\");\n\n        const url = this.form.job_id\n          ? `${globalVariable}/admin/update_job/${this.form.job_id}`\n          : `${globalVariable}/admin/add_jobs`;\n\n        const method = this.form.job_id ? \"PUT\" : \"POST\";\n\n        const response = await fetch(url, {\n          method,\n          headers: {\n            Authorization: `Bearer ${token}`,\n          },\n          body: formData,\n        });\n\n        if (response.ok) {\n          const result = await response.json();\n          this.status = {\n            success: true,\n            message: result.message || (this.form.job_id ? \"Job updated!\" : \"Job added!\"),\n          };\n\n          // Reset form\n          this.form = {\n            job_id: null,\n            job_title: \"\",\n            company: \"\",\n            deadline_date: \"\",\n            job_description: \"\",\n            requirements: \"\",\n            responsability: \"\",\n            salary_max: \"\",\n            salary_min: \"\",\n            conclusion: \"\",\n            logo: \"\",\n            location: \"\",\n            category_id: null,\n          };\n          this.selectedCategoryId = null;\n\n          this.fetchJobsByUser();\n        } else {\n          const error = await response.text();\n          this.status = {\n            success: false,\n            message: \"Failed: \" + error,\n          };\n        }\n      } catch (err) {\n        console.error(\"Error:\", err);\n        this.status = {\n          success: false,\n          message: \"Unexpected error occurred.\",\n        };\n      } finally {\n        this.isSubmitting = false;\n      }\n    },\n    editJob(job) {\n      const deadlineDate = job.deadline_date\n        ? new Date(job.deadline_date).toISOString().split(\"T\")[0]\n        : \"\";\n\n      this.form = {\n        job_id: job.job_id,\n        job_title: job.job_title,\n        company: job.company,\n        deadline_date: deadlineDate,\n        job_description: job.job_description,\n        requirements: job.requirements,\n        responsability: job.responsability,\n        salary_min: job.salary_min,\n        salary_max: job.salary_max,\n        conclusion:job.conclusion,\n        logo: job.logo,\n        location: job.location,\n        category_id: job.category_id,\n      };\n      \n      // Set the selected category for the dropdown\n      this.selectedCategoryId = job.category_id;\n      \n      window.scrollTo({ top: 0, behavior: \"smooth\" });\n    },\n    goToMore(job_id) {\n      this.$router.push({ name: \"admin/job-details\", params: { id: job_id } });\n    },\n    async getUserIdFromEmail() {\n      const token = localStorage.getItem(\"adminToken\");\n      if (!token) return;\n\n      try {\n        const payload = JSON.parse(atob(token.split(\".\")[1]));\n        if (!this.userEmail) {\n          this.userEmail = payload.email;\n        }\n        const res = await fetch(`${globalVariable}/get_user_id_by_email/${this.userEmail}`, {\n          headers: { Authorization: `Bearer ${token}` },\n        });\n        const data = await res.json();\n\n        if (res.ok) {\n          this.userId = data.users_id;\n          this.fetchJobsByUser();\n        } else {\n          this.status = {\n            success: false,\n            message: data.message || \"Unable to get user ID.\",\n          };\n        }\n      } catch (err) {\n        console.error(\"Error getting users_id:\", err);\n        this.status = {\n          success: false,\n          message: \"Failed to fetch user ID.\",\n        };\n      }\n    },\n    getStatusLabel(status) {\n      if (status === 0) {\n        return { text: \"Pending\", colorClass: \"text-danger\" };\n      } else if (status === 1) {\n        return { text: \"Approved\", colorClass: \"text-success\" };\n      } else {\n        return { text: \"Unknown\", colorClass: \"text-muted\" };\n      }\n    },\n    highlightMatch(text) {\n  if (text === null || text === undefined) return \"\";\n  const str = String(text); // convert to string\n  if (!this.searchQuery) return str;\n  const regex = new RegExp(`(${this.searchQuery})`, \"gi\");\n  return str.replace(regex, `<span class=\"highlight-teal\">$1</span>`);\n},\n  },\n};\n</script>\n\n<style scoped>\n\n.btn-cancel {\n  background-color: teal;\n  color: white;\n}\n\n.btn-cancel:hover {\n  background-color: teal;\n  color: #E960A6;\n}\n\n.page-item.active .page-link {\n  background-color: #E960A6;\n  color: white;\n  border-color: #E960A6;\n}\n\n.page-link {\n  border-radius: 4px;\n  padding: 0.4rem 0.75rem;\n  cursor: pointer;\n  color:#336Cb6\n}\n\n      .modal-overlay {\n         position: fixed;\n          top: 0;\n          left: 0;\n          width: 100%;\n          height: 100%;\n          background: rgba(0, 0, 0, 0.5);\n          display: flex;\n          justify-content: center;\n          align-items: center;\n          z-index: 1000;\n        }\n        \n        /* Modal content styling */\n        .modal-content {\n          background-color: white;\n          padding: 20px;\n          border-radius: 8px;\n          text-align: center;\n          width: 300px;\n        }\n      \n        .container-fluid {\n          max-width: 800px;\n          margin: auto;\n          padding: 20px;\n          background-color: #ffffff;\n          border-radius: 8px;\n          box-shadow: 0 8px 30px rgba(0, 0, 0, 0.2);\n        }\n        \n        h5 {\n          color: #333;\n          margin-bottom: 20px;\n        }\n        .custom-select {\n          width: 100%;\n          padding: 15px;\n          height: 50px;\n          border: 1px solid #ccc;\n          border-radius: 5px;\n          box-sizing: border-box;\n          transition: border-color 0.3s, box-shadow 0.3s;\n          font-size: 16px;\n    \n        }\n        \n.highlight-teal {\n  background-color: #20c997;\n  color: white;\n  padding: 0 2px;\n  border-radius: 3px;\n}\n.form-control {\n          width: 100%;\n          padding: 15px;\n          height: 50px;\n          border: 1px solid #ccc;\n          border-radius: 5px;\n          box-sizing: border-box;\n          transition: border-color 0.3s, box-shadow 0.3s;\n          font-size: 16px;\n        }\n        \n        .form-control:focus {\n          border-color: #E960A6;\n          box-shadow: 0 0 5px rgba(0, 123, 255, 0.5);\n          outline: none;\n        }\n        \n        .form-label {\n          font-weight: bold;\n          margin-bottom: 5px;\n          display: block;\n        }\n        \n        .btn-primary {\n          background-color: #E960A6;\n          color: white;\n        \n        }\n        \n        .btn-primary:hover {\n          background-color: #E960A6;\n          color: teal;\n        }\n        \n        .form-group {\n          margin-bottom: 15px;\n        }\n        \n        </style>"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}