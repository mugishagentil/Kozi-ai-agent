{"ast":null,"code":"import \"core-js/modules/web.dom-exception.stack.js\";\nimport { globalVariable } from \"@/global\";\nimport IndexComponent from \"./IndexComponent.vue\";\nexport default {\n  components: {\n    IndexComponent\n  },\n  data() {\n    return {\n      job: null,\n      isApplying: false,\n      applyMessage: null,\n      applyStatusClass: \"\",\n      userEmail: null,\n      userId: null,\n      jobIdurl: null\n    };\n  },\n  async mounted() {\n    this.jobIdurl = this.$route.params.id;\n    this.fetchJobDetails();\n    this.getUserEmail();\n    await this.fetchUserId();\n  },\n  methods: {\n    async fetchJobDetails() {\n      try {\n        const token = localStorage.getItem(\"adminToken\");\n        const response = await fetch(`${globalVariable}/admin/select_job/${this.jobIdurl}`, {\n          headers: {\n            Authorization: `Bearer ${token}`\n          }\n        });\n        const data = await response.json();\n        if (!response.ok) {\n          console.error(\"Failed to fetch job:\", data.message);\n        } else {\n          this.job = data;\n        }\n      } catch (error) {\n        console.error(\"Error fetching job:\", error);\n      }\n    },\n    formatDate(dateStr) {\n      const date = new Date(dateStr);\n      return date.toLocaleDateString(\"en-US\", {\n        year: \"numeric\",\n        month: \"long\",\n        day: \"numeric\"\n      });\n    },\n    getUserEmail() {\n      const token = localStorage.getItem(\"adminToken\");\n      if (token) {\n        const payload = token.split('.')[1];\n        const decodedPayload = atob(payload);\n        const parsedPayload = JSON.parse(decodedPayload);\n        this.userEmail = parsedPayload.email;\n      }\n    },\n    async fetchUserId() {\n      const email = this.userEmail;\n      const token = localStorage.getItem(\"adminToken\");\n      if (email && token) {\n        try {\n          const response = await fetch(`${globalVariable}/get_user_id_by_email/${email}`, {\n            headers: {\n              Authorization: `Bearer ${token}`\n            }\n          });\n          const data = await response.json();\n          if (response.ok) {\n            this.userId = data.users_id;\n          } else {\n            console.error(\"Error fetching user ID:\", data.message);\n          }\n        } catch (error) {\n          console.error(\"Error fetching user ID:\", error);\n        }\n      }\n    },\n    async publishJob() {\n      try {\n        const token = localStorage.getItem(\"adminToken\");\n        const response = await fetch(`${globalVariable}/admin/publish/${this.jobIdurl}`, {\n          method: \"POST\",\n          headers: {\n            Authorization: `Bearer ${token}`\n          }\n        });\n        const data = await response.json();\n        if (response.ok) {\n          this.job.status = 1;\n          this.applyMessage = \"Job published successfully.\";\n          this.applyStatusClass = \"alert-success\";\n        } else {\n          this.applyMessage = data.message || \"Failed to publish job.\";\n          this.applyStatusClass = \"alert-danger\";\n        }\n      } catch (error) {\n        this.applyMessage = \"An error occurred while publishing the job.\";\n        this.applyStatusClass = \"alert-danger\";\n        console.error(\"Error publishing job:\", error);\n      }\n    },\n    async unpublishJob() {\n      try {\n        const token = localStorage.getItem(\"adminToken\");\n        const response = await fetch(`${globalVariable}/admin/unpublish/${this.jobIdurl}`, {\n          method: \"POST\",\n          headers: {\n            Authorization: `Bearer ${token}`\n          }\n        });\n        const data = await response.json();\n        if (response.ok) {\n          this.job.status = 0;\n          this.applyMessage = \"Job unpublished successfully.\";\n          this.applyStatusClass = \"alert-warning\";\n        } else {\n          this.applyMessage = data.message || \"Failed to unpublish job.\";\n          this.applyStatusClass = \"alert-danger\";\n        }\n      } catch (error) {\n        this.applyMessage = \"An error occurred while unpublishing the job.\";\n        this.applyStatusClass = \"alert-danger\";\n        console.error(\"Error unpublishing job:\", error);\n      }\n    }\n  }\n};","map":{"version":3,"names":["globalVariable","IndexComponent","components","data","job","isApplying","applyMessage","applyStatusClass","userEmail","userId","jobIdurl","mounted","$route","params","id","fetchJobDetails","getUserEmail","fetchUserId","methods","token","localStorage","getItem","response","fetch","headers","Authorization","json","ok","console","error","message","formatDate","dateStr","date","Date","toLocaleDateString","year","month","day","payload","split","decodedPayload","atob","parsedPayload","JSON","parse","email","users_id","publishJob","method","status","unpublishJob"],"sources":["/Users/gentil/Desktop/Kozi-ai-agent/src/views/admin/JobDetails.vue"],"sourcesContent":["<template>\n  <IndexComponent />\n  <div\n    class=\"page-wrapper\"\n    id=\"main-wrapper\"\n    data-layout=\"vertical\"\n    data-navbarbg=\"skin6\"\n    data-sidebartype=\"full\"\n    data-sidebar-description=\"fixed\"\n    data-header-description=\"fixed\"\n  >\n    <div class=\"body-wrapper\" style=\"margin-top: -3rem;\">\n    \n      <div class=\"container-fluid\">\n        <div class=\"row\">\n          <div id=\"about\" class=\"section wb\">\n            <!-- <div class=\"card-body\">\n        <h5 class=\"text-center\">Logged in as:</h5>\n        <h6 class=\"text-center text-muted\">{{ userEmail }}</h6>\n        <p><strong>jobid ID from URL:</strong> {{ jobIdurl }}</p>\n      </div> -->\n            <div class=\"container\">\n              <div v-if=\"job\" class=\"job-details\">\n                <div class=\"section-title text-center\">\n                  <h2 style=\"font-family: 'Michroma';\">{{ job.job_title }} - {{ job.location }}</h2>\n                  <p class=\"lead\" style=\"color: darkblue;\">\n                    <strong>Job Opportunity at: {{ job.company }}</strong> <br />\n                    <strong>Published Date: {{ formatDate(job.published_date) }}</strong><br />\n                    \n                  Salary Range: {{job.salary_min }} Rwf - {{job.salary_max}} Rwf  Monthly\n\n                    \n                  </p>\n                </div>\n                <div class=\"job-details\">\n                  <h4><strong>Company Overview</strong></h4>\n                  <p v-html=\"job.job_description\"></p>\n                  <h4><strong>Requirements</strong></h4>\n                  <p v-html=\"job.requirements\" style=\"margin-left: 2rem;\"></p>\n                  <h4><strong>Responsabilities</strong></h4>\n                  <p v-html=\"job.responsability\" style=\"margin-left: 2rem;\"></p>\n                  <h4><strong>conclusion</strong></h4>\n                  <p v-html=\"job.conclusion\"></p>\n\n                </div><div class=\"text-center mt-4\" v-if=\"job\">\n                  <button\n                   v-if=\"job.status === 0\"\n                    @click=\"publishJob\"\n                     class=\"btn btn-primary\"\n                     >\n                     Publish\n                    </button>\n                    <button\n                    v-else-if=\"job.status === 1\"\n                     @click=\"unpublishJob\"\n                     class=\"btn btn-cancel\"\n                     >\n                     Unpublish\n                    </button>\n                  </div>\n                  <div v-if=\"applyMessage\" :class=\"['alert', applyStatusClass]\" role=\"alert\">\n                  {{ applyMessage }}\n                </div>\n\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n  </div>\n  \n</template>\n\n<script>\nimport { globalVariable } from \"@/global\";\nimport IndexComponent from \"./IndexComponent.vue\";\n\n\nexport default {\n  components: {\n    IndexComponent,\n  },\n  data() {\n    return {\n      job: null,\n      isApplying: false,\n      applyMessage: null,\n      applyStatusClass: \"\",\n      userEmail: null,\n      userId: null,\n      jobIdurl: null,\n    };\n  },\n  async mounted() {\n    this.jobIdurl = this.$route.params.id;\n    this.fetchJobDetails();\n    this.getUserEmail();\n    await this.fetchUserId();\n  },\n  methods: {\n    async fetchJobDetails() {\n      \n      try {\n        const token = localStorage.getItem(\"adminToken\");\n        const response = await fetch(`${globalVariable}/admin/select_job/${this.jobIdurl}`, {\n          headers: {\n            Authorization: `Bearer ${token}`,\n          },\n        });\n        const data = await response.json();\n        if (!response.ok) {\n          console.error(\"Failed to fetch job:\", data.message);\n        } else {\n          this.job = data;\n        }\n      } catch (error) {\n        console.error(\"Error fetching job:\", error);\n      }\n    },\n    formatDate(dateStr) {\n      const date = new Date(dateStr);\n      return date.toLocaleDateString(\"en-US\", {\n        year: \"numeric\",\n        month: \"long\",\n        day: \"numeric\",\n      });\n    },\n\n    getUserEmail() {\n      const token = localStorage.getItem(\"adminToken\");\n      if (token) {\n        const payload = token.split('.')[1];\n        const decodedPayload = atob(payload);\n        const parsedPayload = JSON.parse(decodedPayload);\n        this.userEmail = parsedPayload.email;\n      }\n    },\n    async fetchUserId() {\n      const email = this.userEmail;\n      const token = localStorage.getItem(\"adminToken\");\n\n      if (email && token) {\n        try {\n          const response = await fetch(`${globalVariable}/get_user_id_by_email/${email}`, {\n            headers: { Authorization: `Bearer ${token}` },\n          });\n\n          const data = await response.json();\n          if (response.ok) {\n            this.userId = data.users_id;\n          } else {\n            console.error(\"Error fetching user ID:\", data.message);\n          }\n        } catch (error) {\n          console.error(\"Error fetching user ID:\", error);\n        }\n      }\n    },\n    async publishJob() {\n  try {\n    const token = localStorage.getItem(\"adminToken\");\n    const response = await fetch(`${globalVariable}/admin/publish/${this.jobIdurl}`, {\n      method: \"POST\",\n      headers: {\n        Authorization: `Bearer ${token}`,\n      },\n    });\n\n    const data = await response.json();\n    if (response.ok) {\n      this.job.status = 1;\n      this.applyMessage = \"Job published successfully.\";\n      this.applyStatusClass = \"alert-success\";\n    } else {\n      this.applyMessage = data.message || \"Failed to publish job.\";\n      this.applyStatusClass = \"alert-danger\";\n    }\n  } catch (error) {\n    this.applyMessage = \"An error occurred while publishing the job.\";\n    this.applyStatusClass = \"alert-danger\";\n    console.error(\"Error publishing job:\", error);\n  }\n},\n\nasync unpublishJob() {\n  try {\n    const token = localStorage.getItem(\"adminToken\");\n    const response = await fetch(`${globalVariable}/admin/unpublish/${this.jobIdurl}`, {\n      method: \"POST\",\n      headers: {\n        Authorization: `Bearer ${token}`,\n      },\n    });\n\n    const data = await response.json();\n    if (response.ok) {\n      this.job.status = 0;\n      this.applyMessage = \"Job unpublished successfully.\";\n      this.applyStatusClass = \"alert-warning\";\n    } else {\n      this.applyMessage = data.message || \"Failed to unpublish job.\";\n      this.applyStatusClass = \"alert-danger\";\n    }\n  } catch (error) {\n    this.applyMessage = \"An error occurred while unpublishing the job.\";\n    this.applyStatusClass = \"alert-danger\";\n    console.error(\"Error unpublishing job:\", error);\n  }\n},\n\n\n\n  },\n};\n</script>\n\n<style scoped>\n\n.btn-primary {\n  background-color: #E960A6;\n  color: white;\n}\n\n.btn-primary:hover {\n  background-color: #E960A6;\n  color: teal;\n}\n\n.btn-cancel {\n  background-color: teal;\n  color: white;\n}\n\n.btn-cancel:hover {\n  background-color: teal;\n  color: #E960A6;\n}\n.custom-btn-apply {\n  background: #EA60A7;\n  color: #fff;\n  padding: 10px 15px;\n  border: none;\n  border-radius: 5px;\n  font-size: 14px;\n  cursor: pointer;\n  margin-top: 20px;\n  transition: background 0.3s ease;\n}\n.custom-btn-apply:hover {\n  background: #fff;\n  color: #EA60A7;\n  border: 1px solid #EA60A7;\n}\n.text-success {\n  color: green;\n  margin-top: 10px;\n}\n.text-danger {\n  color: red;\n  margin-top: 10px;\n}\n</style>\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}