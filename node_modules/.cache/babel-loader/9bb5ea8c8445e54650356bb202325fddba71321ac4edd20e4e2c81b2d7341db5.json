{"ast":null,"code":"import \"core-js/modules/web.dom-exception.stack.js\";\nimport { globalVariable } from \"@/global\";\nexport default {\n  name: \"CVGenerator\",\n  data() {\n    return {\n      userId: \"\",\n      message: null,\n      messageType: null,\n      // CV Data\n      cvData: {\n        summary: \"\"\n      },\n      // Lists\n      education: [],\n      experience: [],\n      projects: [],\n      languages: [],\n      // Form visibility\n      showEducationForm: false,\n      showExperienceForm: false,\n      showProjectForm: false,\n      showLanguageForm: false,\n      // New item forms\n      newEducation: {\n        institution: \"\",\n        degree: \"\",\n        field_of_study: \"\",\n        start_year: \"\",\n        end_year: \"\"\n      },\n      newExperience: {\n        company: \"\",\n        position: \"\",\n        start_date: \"\",\n        end_date: \"\",\n        description: \"\"\n      },\n      newProject: {\n        title: \"\",\n        description: \"\",\n        technologies: \"\",\n        link: \"\"\n      },\n      newLanguage: {\n        language: \"\",\n        proficiency: \"\"\n      }\n    };\n  },\n  mounted() {\n    this.getUserId();\n    this.loadCVData();\n  },\n  methods: {\n    async getUserId() {\n      const token = localStorage.getItem(\"employeeToken\");\n      if (!token) return;\n      try {\n        const payload = JSON.parse(atob(token.split(\".\")[1]));\n        const email = payload.email;\n        const res = await fetch(`${globalVariable}/get_user_id_by_email/${email}`, {\n          headers: {\n            Authorization: `Bearer ${token}`\n          }\n        });\n        const data = await res.json();\n        if (res.ok) {\n          this.userId = data.users_id;\n        }\n      } catch (err) {\n        console.error(\"Error getting user ID:\", err);\n      }\n    },\n    async loadCVData() {\n      // Load all CV sections\n      await this.loadEducation();\n      await this.loadExperience();\n      await this.loadProjects();\n      await this.loadLanguages();\n    },\n    // Summary methods\n    async saveSummary() {\n      try {\n        const res = await fetch(`${globalVariable}/api/cv/summary`, {\n          method: 'POST',\n          headers: {\n            'Content-Type': 'application/json',\n            'Authorization': `Bearer ${localStorage.getItem(\"employeeToken\")}`\n          },\n          body: JSON.stringify({\n            users_id: this.userId,\n            summary: this.cvData.summary\n          })\n        });\n        const data = await res.json();\n        if (res.ok) {\n          this.showMessage(\"Summary saved successfully!\", \"alert-success\");\n        } else {\n          this.showMessage(data.message, \"alert-danger\");\n        }\n      } catch (error) {\n        this.showMessage(\"Error saving summary\", \"alert-danger\");\n      }\n    },\n    // Education methods\n    async loadEducation() {\n      try {\n        const res = await fetch(`${globalVariable}/api/cv/education/${this.userId}`, {\n          headers: {\n            Authorization: `Bearer ${localStorage.getItem(\"employeeToken\")}`\n          }\n        });\n        if (res.ok) {\n          this.education = await res.json();\n        }\n      } catch (error) {\n        console.error(\"Error loading education:\", error);\n      }\n    },\n    async addEducation() {\n      try {\n        const res = await fetch(`${globalVariable}/api/cv/education`, {\n          method: 'POST',\n          headers: {\n            'Content-Type': 'application/json',\n            'Authorization': `Bearer ${localStorage.getItem(\"employeeToken\")}`\n          },\n          body: JSON.stringify({\n            users_id: this.userId,\n            ...this.newEducation\n          })\n        });\n        if (res.ok) {\n          this.showMessage(\"Education added successfully!\", \"alert-success\");\n          this.cancelEducation();\n          this.loadEducation();\n        }\n      } catch (error) {\n        this.showMessage(\"Error adding education\", \"alert-danger\");\n      }\n    },\n    async deleteEducation(id) {\n      try {\n        const res = await fetch(`${globalVariable}/api/cv/education/${id}`, {\n          method: 'DELETE',\n          headers: {\n            Authorization: `Bearer ${localStorage.getItem(\"employeeToken\")}`\n          }\n        });\n        if (res.ok) {\n          this.showMessage(\"Education deleted successfully!\", \"alert-success\");\n          this.loadEducation();\n        }\n      } catch (error) {\n        this.showMessage(\"Error deleting education\", \"alert-danger\");\n      }\n    },\n    cancelEducation() {\n      this.showEducationForm = false;\n      this.newEducation = {\n        institution: \"\",\n        degree: \"\",\n        field_of_study: \"\",\n        start_year: \"\",\n        end_year: \"\"\n      };\n    },\n    // Experience methods\n    async loadExperience() {\n      try {\n        const res = await fetch(`${globalVariable}/api/cv/experience/${this.userId}`, {\n          headers: {\n            Authorization: `Bearer ${localStorage.getItem(\"employeeToken\")}`\n          }\n        });\n        if (res.ok) {\n          this.experience = await res.json();\n        }\n      } catch (error) {\n        console.error(\"Error loading experience:\", error);\n      }\n    },\n    async addExperience() {\n      try {\n        const res = await fetch(`${globalVariable}/api/cv/experience`, {\n          method: 'POST',\n          headers: {\n            'Content-Type': 'application/json',\n            'Authorization': `Bearer ${localStorage.getItem(\"employeeToken\")}`\n          },\n          body: JSON.stringify({\n            users_id: this.userId,\n            ...this.newExperience\n          })\n        });\n        if (res.ok) {\n          this.showMessage(\"Experience added successfully!\", \"alert-success\");\n          this.cancelExperience();\n          this.loadExperience();\n        }\n      } catch (error) {\n        this.showMessage(\"Error adding experience\", \"alert-danger\");\n      }\n    },\n    async deleteExperience(id) {\n      try {\n        const res = await fetch(`${globalVariable}/api/cv/experience/${id}`, {\n          method: 'DELETE',\n          headers: {\n            Authorization: `Bearer ${localStorage.getItem(\"employeeToken\")}`\n          }\n        });\n        if (res.ok) {\n          this.showMessage(\"Experience deleted successfully!\", \"alert-success\");\n          this.loadExperience();\n        }\n      } catch (error) {\n        this.showMessage(\"Error deleting experience\", \"alert-danger\");\n      }\n    },\n    cancelExperience() {\n      this.showExperienceForm = false;\n      this.newExperience = {\n        company: \"\",\n        position: \"\",\n        start_date: \"\",\n        end_date: \"\",\n        description: \"\"\n      };\n    },\n    // Project methods\n    async loadProjects() {\n      try {\n        const res = await fetch(`${globalVariable}/api/cv/projects/${this.userId}`, {\n          headers: {\n            Authorization: `Bearer ${localStorage.getItem(\"employeeToken\")}`\n          }\n        });\n        if (res.ok) {\n          this.projects = await res.json();\n        }\n      } catch (error) {\n        console.error(\"Error loading projects:\", error);\n      }\n    },\n    async addProject() {\n      try {\n        const res = await fetch(`${globalVariable}/api/cv/projects`, {\n          method: 'POST',\n          headers: {\n            'Content-Type': 'application/json',\n            'Authorization': `Bearer ${localStorage.getItem(\"employeeToken\")}`\n          },\n          body: JSON.stringify({\n            users_id: this.userId,\n            ...this.newProject\n          })\n        });\n        if (res.ok) {\n          this.showMessage(\"Project added successfully!\", \"alert-success\");\n          this.cancelProject();\n          this.loadProjects();\n        }\n      } catch (error) {\n        this.showMessage(\"Error adding project\", \"alert-danger\");\n      }\n    },\n    async deleteProject(id) {\n      try {\n        const res = await fetch(`${globalVariable}/api/cv/projects/${id}`, {\n          method: 'DELETE',\n          headers: {\n            Authorization: `Bearer ${localStorage.getItem(\"employeeToken\")}`\n          }\n        });\n        if (res.ok) {\n          this.showMessage(\"Project deleted successfully!\", \"alert-success\");\n          this.loadProjects();\n        }\n      } catch (error) {\n        this.showMessage(\"Error deleting project\", \"alert-danger\");\n      }\n    },\n    cancelProject() {\n      this.showProjectForm = false;\n      this.newProject = {\n        title: \"\",\n        description: \"\",\n        technologies: \"\",\n        link: \"\"\n      };\n    },\n    // Language methods\n    async loadLanguages() {\n      try {\n        const res = await fetch(`${globalVariable}/api/cv/languages/${this.userId}`, {\n          headers: {\n            Authorization: `Bearer ${localStorage.getItem(\"employeeToken\")}`\n          }\n        });\n        if (res.ok) {\n          this.languages = await res.json();\n        }\n      } catch (error) {\n        console.error(\"Error loading languages:\", error);\n      }\n    },\n    async addLanguage() {\n      try {\n        const res = await fetch(`${globalVariable}/api/cv/languages`, {\n          method: 'POST',\n          headers: {\n            'Content-Type': 'application/json',\n            'Authorization': `Bearer ${localStorage.getItem(\"employeeToken\")}`\n          },\n          body: JSON.stringify({\n            users_id: this.userId,\n            ...this.newLanguage\n          })\n        });\n        if (res.ok) {\n          this.showMessage(\"Language added successfully!\", \"alert-success\");\n          this.cancelLanguage();\n          this.loadLanguages();\n        }\n      } catch (error) {\n        this.showMessage(\"Error adding language\", \"alert-danger\");\n      }\n    },\n    async deleteLanguage(id) {\n      try {\n        const res = await fetch(`${globalVariable}/api/cv/languages/${id}`, {\n          method: 'DELETE',\n          headers: {\n            Authorization: `Bearer ${localStorage.getItem(\"employeeToken\")}`\n          }\n        });\n        if (res.ok) {\n          this.showMessage(\"Language deleted successfully!\", \"alert-success\");\n          this.loadLanguages();\n        }\n      } catch (error) {\n        this.showMessage(\"Error deleting language\", \"alert-danger\");\n      }\n    },\n    cancelLanguage() {\n      this.showLanguageForm = false;\n      this.newLanguage = {\n        language: \"\",\n        proficiency: \"\"\n      };\n    },\n    // Utility methods\n    formatDate(dateString) {\n      if (!dateString) return '';\n      const date = new Date(dateString);\n      return date.toLocaleDateString();\n    },\n    showMessage(msg, type) {\n      this.message = msg;\n      this.messageType = type;\n      setTimeout(() => {\n        this.message = null;\n        this.messageType = null;\n      }, 3000);\n    },\n    generateCV() {\n      // You can implement PDF generation or redirect to CV preview here\n      this.showMessage(\"CV generation feature coming soon!\", \"alert-info\");\n    }\n  }\n};","map":{"version":3,"names":["globalVariable","name","data","userId","message","messageType","cvData","summary","education","experience","projects","languages","showEducationForm","showExperienceForm","showProjectForm","showLanguageForm","newEducation","institution","degree","field_of_study","start_year","end_year","newExperience","company","position","start_date","end_date","description","newProject","title","technologies","link","newLanguage","language","proficiency","mounted","getUserId","loadCVData","methods","token","localStorage","getItem","payload","JSON","parse","atob","split","email","res","fetch","headers","Authorization","json","ok","users_id","err","console","error","loadEducation","loadExperience","loadProjects","loadLanguages","saveSummary","method","body","stringify","showMessage","addEducation","cancelEducation","deleteEducation","id","addExperience","cancelExperience","deleteExperience","addProject","cancelProject","deleteProject","addLanguage","cancelLanguage","deleteLanguage","formatDate","dateString","date","Date","toLocaleDateString","msg","type","setTimeout","generateCV"],"sources":["/Users/gentil/Desktop/Kozi-ai-agent/src/views/jobseeker/GenerateCV.vue"],"sourcesContent":["<template>\n    <div\n    class=\"page-wrapper\"\n    id=\"main-wrapper\"\n    data-layout=\"vertical\"\n    data-navbarbg=\"skin6\"\n    data-sidebartype=\"full\"\n    data-sidebar-description=\"fixed\"\n    data-header-description=\"fixed\"\n    style=\"position: absolute; top: 0; left: 0; right: 0; bottom: 0; z-index: 1;\"\n  >\n  <div class=\"cv-builder\" style=\"margin-top: 70px; margin-left: 270px; background: white; min-height: calc(100vh - 70px); padding: 20px; overflow-y: auto; max-height: calc(100vh - 70px);\">\n    <h5 class=\"card-title fw-semibold mb-4\" style=\"color: #E960A6;\">\n      <i class=\"ti ti-file-text\"></i> Generate CV\n    </h5>\n    \n    <div v-if=\"message\" :class=\"['alert', messageType]\">{{ message }}</div>\n\n    <!-- Summary Section -->\n    <div class=\"card mb-4\">\n      <div class=\"card-header\">\n        <h6><i class=\"ti ti-user\"></i> Professional Summary</h6>\n      </div>\n      <div class=\"card-body\">\n        <textarea \n          v-model=\"cvData.summary\" \n          class=\"form-control\" \n          placeholder=\"Write your professional summary...\"\n          rows=\"4\"\n        ></textarea>\n        <button @click=\"saveSummary\" class=\"btn btn-primary btn-sm mt-2\">Save Summary</button>\n      </div>\n    </div>\n\n    <!-- Education Section -->\n    <div class=\"card mb-4\">\n      <div class=\"card-header d-flex justify-content-between\">\n        <h6><i class=\"ti ti-school\"></i> Education</h6>\n        <button @click=\"showEducationForm = !showEducationForm\" class=\"btn btn-outline-primary btn-sm\">\n          Add Education\n        </button>\n      </div>\n      <div class=\"card-body\">\n        <!-- Add Education Form -->\n        <div v-if=\"showEducationForm\" class=\"border p-3 mb-3 rounded\">\n          <div class=\"row\">\n            <div class=\"col-md-6\">\n              <input v-model=\"newEducation.institution\" class=\"form-control mb-2\" placeholder=\"Institution\">\n            </div>\n            <div class=\"col-md-6\">\n              <input v-model=\"newEducation.degree\" class=\"form-control mb-2\" placeholder=\"Degree\">\n            </div>\n            <div class=\"col-md-6\">\n              <input v-model=\"newEducation.field_of_study\" class=\"form-control mb-2\" placeholder=\"Field of Study\">\n            </div>\n            <div class=\"col-md-3\">\n              <input v-model=\"newEducation.start_year\" class=\"form-control mb-2\" placeholder=\"Start Year\" type=\"number\">\n            </div>\n            <div class=\"col-md-3\">\n              <input v-model=\"newEducation.end_year\" class=\"form-control mb-2\" placeholder=\"End Year\" type=\"number\">\n            </div>\n          </div>\n          <button @click=\"addEducation\" class=\"btn btn-success btn-sm me-2\">Save</button>\n          <button @click=\"cancelEducation\" class=\"btn btn-secondary btn-sm\">Cancel</button>\n        </div>\n\n        <!-- Education List -->\n        <div v-for=\"edu in education\" :key=\"edu.id\" class=\"border p-2 mb-2 rounded\">\n          <div class=\"d-flex justify-content-between\">\n            <div>\n              <strong>{{ edu.degree }} in {{ edu.field_of_study }}</strong><br>\n              <small>{{ edu.institution }} ({{ edu.start_year }}-{{ edu.end_year }})</small>\n            </div>\n            <button @click=\"deleteEducation(edu.id)\" class=\"btn btn-danger btn-sm\">Delete</button>\n          </div>\n        </div>\n      </div>\n    </div>\n\n    <!-- Experience Section -->\n    <div class=\"card mb-4\">\n      <div class=\"card-header d-flex justify-content-between\">\n        <h6><i class=\"ti ti-briefcase\"></i> Experience</h6>\n        <button @click=\"showExperienceForm = !showExperienceForm\" class=\"btn btn-outline-primary btn-sm\">\n          Add Experience\n        </button>\n      </div>\n      <div class=\"card-body\">\n        <!-- Add Experience Form -->\n        <div v-if=\"showExperienceForm\" class=\"border p-3 mb-3 rounded\">\n          <div class=\"row\">\n            <div class=\"col-md-6\">\n              <input v-model=\"newExperience.company\" class=\"form-control mb-2\" placeholder=\"Company\">\n            </div>\n            <div class=\"col-md-6\">\n              <input v-model=\"newExperience.position\" class=\"form-control mb-2\" placeholder=\"Position\">\n            </div>\n            <div class=\"col-md-6\">\n              <input v-model=\"newExperience.start_date\" class=\"form-control mb-2\" type=\"date\">\n            </div>\n            <div class=\"col-md-6\">\n              <input v-model=\"newExperience.end_date\" class=\"form-control mb-2\" type=\"date\">\n            </div>\n            <div class=\"col-md-12\">\n              <textarea v-model=\"newExperience.description\" class=\"form-control mb-2\" placeholder=\"Job description...\" rows=\"3\"></textarea>\n            </div>\n          </div>\n          <button @click=\"addExperience\" class=\"btn btn-success btn-sm me-2\">Save</button>\n          <button @click=\"cancelExperience\" class=\"btn btn-secondary btn-sm\">Cancel</button>\n        </div>\n\n        <!-- Experience List -->\n        <div v-for=\"exp in experience\" :key=\"exp.id\" class=\"border p-2 mb-2 rounded\">\n          <div class=\"d-flex justify-content-between\">\n            <div>\n              <strong>{{ exp.position }}</strong> at {{ exp.company }}<br>\n              <small>{{ formatDate(exp.start_date) }} - {{ formatDate(exp.end_date) }}</small><br>\n              <p class=\"mt-2 mb-0\">{{ exp.description }}</p>\n            </div>\n            <button @click=\"deleteExperience(exp.id)\" class=\"btn btn-danger btn-sm\">Delete</button>\n          </div>\n        </div>\n      </div>\n    </div>\n\n    <!-- Projects Section -->\n    <div class=\"card mb-4\">\n      <div class=\"card-header d-flex justify-content-between\">\n        <h6><i class=\"ti ti-code\"></i> Projects</h6>\n        <button @click=\"showProjectForm = !showProjectForm\" class=\"btn btn-outline-primary btn-sm\">\n          Add Project\n        </button>\n      </div>\n      <div class=\"card-body\">\n        <!-- Add Project Form -->\n        <div v-if=\"showProjectForm\" class=\"border p-3 mb-3 rounded\">\n          <div class=\"row\">\n            <div class=\"col-md-6\">\n              <input v-model=\"newProject.title\" class=\"form-control mb-2\" placeholder=\"Project Title\">\n            </div>\n            <div class=\"col-md-6\">\n              <input v-model=\"newProject.technologies\" class=\"form-control mb-2\" placeholder=\"Technologies Used\">\n            </div>\n            <div class=\"col-md-12\">\n              <textarea v-model=\"newProject.description\" class=\"form-control mb-2\" placeholder=\"Project description...\" rows=\"3\"></textarea>\n            </div>\n            <div class=\"col-md-12\">\n              <input v-model=\"newProject.link\" class=\"form-control mb-2\" placeholder=\"Project Link (optional)\" type=\"url\">\n            </div>\n          </div>\n          <button @click=\"addProject\" class=\"btn btn-success btn-sm me-2\">Save</button>\n          <button @click=\"cancelProject\" class=\"btn btn-secondary btn-sm\">Cancel</button>\n        </div>\n\n        <!-- Projects List -->\n        <div v-for=\"project in projects\" :key=\"project.id\" class=\"border p-2 mb-2 rounded\">\n          <div class=\"d-flex justify-content-between\">\n            <div>\n              <strong>{{ project.title }}</strong><br>\n              <small>Technologies: {{ project.technologies }}</small><br>\n              <p class=\"mt-2 mb-1\">{{ project.description }}</p>\n              <a v-if=\"project.link\" :href=\"project.link\" target=\"_blank\" class=\"btn btn-link btn-sm p-0\">View Project</a>\n            </div>\n            <button @click=\"deleteProject(project.id)\" class=\"btn btn-danger btn-sm\">Delete</button>\n          </div>\n        </div>\n      </div>\n    </div>\n\n    <!-- Languages Section -->\n    <div class=\"card mb-4\">\n      <div class=\"card-header d-flex justify-content-between\">\n        <h6><i class=\"ti ti-language\"></i> Languages</h6>\n        <button @click=\"showLanguageForm = !showLanguageForm\" class=\"btn btn-outline-primary btn-sm\">\n          Add Language\n        </button>\n      </div>\n      <div class=\"card-body\">\n        <!-- Add Language Form -->\n        <div v-if=\"showLanguageForm\" class=\"border p-3 mb-3 rounded\">\n          <div class=\"row\">\n            <div class=\"col-md-6\">\n              <input v-model=\"newLanguage.language\" class=\"form-control mb-2\" placeholder=\"Language\">\n            </div>\n            <div class=\"col-md-6\">\n              <select v-model=\"newLanguage.proficiency\" class=\"form-control mb-2\">\n                <option value=\"\">Select Proficiency</option>\n                <option value=\"Beginner\">Beginner</option>\n                <option value=\"Intermediate\">Intermediate</option>\n                <option value=\"Advanced\">Advanced</option>\n                <option value=\"Native\">Native</option>\n              </select>\n            </div>\n          </div>\n          <button @click=\"addLanguage\" class=\"btn btn-success btn-sm me-2\">Save</button>\n          <button @click=\"cancelLanguage\" class=\"btn btn-secondary btn-sm\">Cancel</button>\n        </div>\n\n        <!-- Languages List -->\n        <div v-for=\"lang in languages\" :key=\"lang.id\" class=\"border p-2 mb-2 rounded d-flex justify-content-between\">\n          <div>\n            <strong>{{ lang.language }}</strong> - {{ lang.proficiency }}\n          </div>\n          <button @click=\"deleteLanguage(lang.id)\" class=\"btn btn-danger btn-sm\">Delete</button>\n        </div>\n      </div>\n    </div>\n\n    <!-- Generate CV Button -->\n    <div class=\"text-center\">\n      <button @click=\"generateCV\" class=\"btn btn-success btn-lg\">\n        <i class=\"ti ti-download\"></i> Generate CV\n      </button>\n    </div>\n  </div>\n  </div>\n</template>\n\n<script>\nimport { globalVariable } from \"@/global\";\n\nexport default {\n  name: \"CVGenerator\",\n  data() {\n    return {\n      userId: \"\",\n      message: null,\n      messageType: null,\n      \n      // CV Data\n      cvData: {\n        summary: \"\"\n      },\n      \n      // Lists\n      education: [],\n      experience: [],\n      projects: [],\n      languages: [],\n      \n      // Form visibility\n      showEducationForm: false,\n      showExperienceForm: false,\n      showProjectForm: false,\n      showLanguageForm: false,\n      \n      // New item forms\n      newEducation: {\n        institution: \"\",\n        degree: \"\",\n        field_of_study: \"\",\n        start_year: \"\",\n        end_year: \"\"\n      },\n      newExperience: {\n        company: \"\",\n        position: \"\",\n        start_date: \"\",\n        end_date: \"\",\n        description: \"\"\n      },\n      newProject: {\n        title: \"\",\n        description: \"\",\n        technologies: \"\",\n        link: \"\"\n      },\n      newLanguage: {\n        language: \"\",\n        proficiency: \"\"\n      }\n    };\n  },\n  \n  mounted() {\n    this.getUserId();\n    this.loadCVData();\n  },\n  \n  methods: {\n    async getUserId() {\n      const token = localStorage.getItem(\"employeeToken\");\n      if (!token) return;\n      \n      try {\n        const payload = JSON.parse(atob(token.split(\".\")[1]));\n        const email = payload.email;\n        \n        const res = await fetch(`${globalVariable}/get_user_id_by_email/${email}`, {\n          headers: { Authorization: `Bearer ${token}` },\n        });\n        const data = await res.json();\n        \n        if (res.ok) {\n          this.userId = data.users_id;\n        }\n      } catch (err) {\n        console.error(\"Error getting user ID:\", err);\n      }\n    },\n    \n    async loadCVData() {\n      // Load all CV sections\n      await this.loadEducation();\n      await this.loadExperience();\n      await this.loadProjects();\n      await this.loadLanguages();\n    },\n    \n    // Summary methods\n    async saveSummary() {\n      try {\n        const res = await fetch(`${globalVariable}/api/cv/summary`, {\n          method: 'POST',\n          headers: {\n            'Content-Type': 'application/json',\n            'Authorization': `Bearer ${localStorage.getItem(\"employeeToken\")}`\n          },\n          body: JSON.stringify({\n            users_id: this.userId,\n            summary: this.cvData.summary\n          })\n        });\n        \n        const data = await res.json();\n        if (res.ok) {\n          this.showMessage(\"Summary saved successfully!\", \"alert-success\");\n        } else {\n          this.showMessage(data.message, \"alert-danger\");\n        }\n      } catch (error) {\n        this.showMessage(\"Error saving summary\", \"alert-danger\");\n      }\n    },\n    \n    // Education methods\n    async loadEducation() {\n      try {\n        const res = await fetch(`${globalVariable}/api/cv/education/${this.userId}`, {\n          headers: { Authorization: `Bearer ${localStorage.getItem(\"employeeToken\")}` }\n        });\n        if (res.ok) {\n          this.education = await res.json();\n        }\n      } catch (error) {\n        console.error(\"Error loading education:\", error);\n      }\n    },\n    \n    async addEducation() {\n      try {\n        const res = await fetch(`${globalVariable}/api/cv/education`, {\n          method: 'POST',\n          headers: {\n            'Content-Type': 'application/json',\n            'Authorization': `Bearer ${localStorage.getItem(\"employeeToken\")}`\n          },\n          body: JSON.stringify({\n            users_id: this.userId,\n            ...this.newEducation\n          })\n        });\n        \n        if (res.ok) {\n          this.showMessage(\"Education added successfully!\", \"alert-success\");\n          this.cancelEducation();\n          this.loadEducation();\n        }\n      } catch (error) {\n        this.showMessage(\"Error adding education\", \"alert-danger\");\n      }\n    },\n    \n    async deleteEducation(id) {\n      try {\n        const res = await fetch(`${globalVariable}/api/cv/education/${id}`, {\n          method: 'DELETE',\n          headers: { Authorization: `Bearer ${localStorage.getItem(\"employeeToken\")}` }\n        });\n        \n        if (res.ok) {\n          this.showMessage(\"Education deleted successfully!\", \"alert-success\");\n          this.loadEducation();\n        }\n      } catch (error) {\n        this.showMessage(\"Error deleting education\", \"alert-danger\");\n      }\n    },\n    \n    cancelEducation() {\n      this.showEducationForm = false;\n      this.newEducation = {\n        institution: \"\",\n        degree: \"\",\n        field_of_study: \"\",\n        start_year: \"\",\n        end_year: \"\"\n      };\n    },\n    \n    // Experience methods\n    async loadExperience() {\n      try {\n        const res = await fetch(`${globalVariable}/api/cv/experience/${this.userId}`, {\n          headers: { Authorization: `Bearer ${localStorage.getItem(\"employeeToken\")}` }\n        });\n        if (res.ok) {\n          this.experience = await res.json();\n        }\n      } catch (error) {\n        console.error(\"Error loading experience:\", error);\n      }\n    },\n    \n    async addExperience() {\n      try {\n        const res = await fetch(`${globalVariable}/api/cv/experience`, {\n          method: 'POST',\n          headers: {\n            'Content-Type': 'application/json',\n            'Authorization': `Bearer ${localStorage.getItem(\"employeeToken\")}`\n          },\n          body: JSON.stringify({\n            users_id: this.userId,\n            ...this.newExperience\n          })\n        });\n        \n        if (res.ok) {\n          this.showMessage(\"Experience added successfully!\", \"alert-success\");\n          this.cancelExperience();\n          this.loadExperience();\n        }\n      } catch (error) {\n        this.showMessage(\"Error adding experience\", \"alert-danger\");\n      }\n    },\n    \n    async deleteExperience(id) {\n      try {\n        const res = await fetch(`${globalVariable}/api/cv/experience/${id}`, {\n          method: 'DELETE',\n          headers: { Authorization: `Bearer ${localStorage.getItem(\"employeeToken\")}` }\n        });\n        \n        if (res.ok) {\n          this.showMessage(\"Experience deleted successfully!\", \"alert-success\");\n          this.loadExperience();\n        }\n      } catch (error) {\n        this.showMessage(\"Error deleting experience\", \"alert-danger\");\n      }\n    },\n    \n    cancelExperience() {\n      this.showExperienceForm = false;\n      this.newExperience = {\n        company: \"\",\n        position: \"\",\n        start_date: \"\",\n        end_date: \"\",\n        description: \"\"\n      };\n    },\n    \n    // Project methods\n    async loadProjects() {\n      try {\n        const res = await fetch(`${globalVariable}/api/cv/projects/${this.userId}`, {\n          headers: { Authorization: `Bearer ${localStorage.getItem(\"employeeToken\")}` }\n        });\n        if (res.ok) {\n          this.projects = await res.json();\n        }\n      } catch (error) {\n        console.error(\"Error loading projects:\", error);\n      }\n    },\n    \n    async addProject() {\n      try {\n        const res = await fetch(`${globalVariable}/api/cv/projects`, {\n          method: 'POST',\n          headers: {\n            'Content-Type': 'application/json',\n            'Authorization': `Bearer ${localStorage.getItem(\"employeeToken\")}`\n          },\n          body: JSON.stringify({\n            users_id: this.userId,\n            ...this.newProject\n          })\n        });\n        \n        if (res.ok) {\n          this.showMessage(\"Project added successfully!\", \"alert-success\");\n          this.cancelProject();\n          this.loadProjects();\n        }\n      } catch (error) {\n        this.showMessage(\"Error adding project\", \"alert-danger\");\n      }\n    },\n    \n    async deleteProject(id) {\n      try {\n        const res = await fetch(`${globalVariable}/api/cv/projects/${id}`, {\n          method: 'DELETE',\n          headers: { Authorization: `Bearer ${localStorage.getItem(\"employeeToken\")}` }\n        });\n        \n        if (res.ok) {\n          this.showMessage(\"Project deleted successfully!\", \"alert-success\");\n          this.loadProjects();\n        }\n      } catch (error) {\n        this.showMessage(\"Error deleting project\", \"alert-danger\");\n      }\n    },\n    \n    cancelProject() {\n      this.showProjectForm = false;\n      this.newProject = {\n        title: \"\",\n        description: \"\",\n        technologies: \"\",\n        link: \"\"\n      };\n    },\n    \n    // Language methods\n    async loadLanguages() {\n      try {\n        const res = await fetch(`${globalVariable}/api/cv/languages/${this.userId}`, {\n          headers: { Authorization: `Bearer ${localStorage.getItem(\"employeeToken\")}` }\n        });\n        if (res.ok) {\n          this.languages = await res.json();\n        }\n      } catch (error) {\n        console.error(\"Error loading languages:\", error);\n      }\n    },\n    \n    async addLanguage() {\n      try {\n        const res = await fetch(`${globalVariable}/api/cv/languages`, {\n          method: 'POST',\n          headers: {\n            'Content-Type': 'application/json',\n            'Authorization': `Bearer ${localStorage.getItem(\"employeeToken\")}`\n          },\n          body: JSON.stringify({\n            users_id: this.userId,\n            ...this.newLanguage\n          })\n        });\n        \n        if (res.ok) {\n          this.showMessage(\"Language added successfully!\", \"alert-success\");\n          this.cancelLanguage();\n          this.loadLanguages();\n        }\n      } catch (error) {\n        this.showMessage(\"Error adding language\", \"alert-danger\");\n      }\n    },\n    \n    async deleteLanguage(id) {\n      try {\n        const res = await fetch(`${globalVariable}/api/cv/languages/${id}`, {\n          method: 'DELETE',\n          headers: { Authorization: `Bearer ${localStorage.getItem(\"employeeToken\")}` }\n        });\n        \n        if (res.ok) {\n          this.showMessage(\"Language deleted successfully!\", \"alert-success\");\n          this.loadLanguages();\n        }\n      } catch (error) {\n        this.showMessage(\"Error deleting language\", \"alert-danger\");\n      }\n    },\n    \n    cancelLanguage() {\n      this.showLanguageForm = false;\n      this.newLanguage = {\n        language: \"\",\n        proficiency: \"\"\n      };\n    },\n    \n    // Utility methods\n    formatDate(dateString) {\n      if (!dateString) return '';\n      const date = new Date(dateString);\n      return date.toLocaleDateString();\n    },\n    \n    showMessage(msg, type) {\n      this.message = msg;\n      this.messageType = type;\n      setTimeout(() => {\n        this.message = null;\n        this.messageType = null;\n      }, 3000);\n    },\n    \n    generateCV() {\n      // You can implement PDF generation or redirect to CV preview here\n      this.showMessage(\"CV generation feature coming soon!\", \"alert-info\");\n    }\n  }\n};\n</script>\n\n<style scoped>\n.cv-builder {\n  max-width: 900px;\n  margin: 0 auto;\n  padding: 20px;\n}\n\n.card {\n  border: 1px solid #dee2e6;\n  border-radius: 8px;\n  box-shadow: 0 2px 4px rgba(0,0,0,0.1);\n}\n\n.card-header {\n  background-color: #f8f9fa;\n  border-bottom: 1px solid #dee2e6;\n  padding: 1rem;\n}\n\n.card-header h6 {\n  margin: 0;\n  color: #495057;\n}\n\n.btn {\n  border-radius: 4px;\n}\n\n.border {\n  border: 1px solid #dee2e6 !important;\n}\n\n.rounded {\n  border-radius: 6px !important;\n}\n</style>\n\n<style scoped>\n.cv-builder {\n  max-width: 900px;\n  margin: 0 auto;\n  padding: 20px;\n}\n\n.card {\n  border: 1px solid #dee2e6;\n  border-radius: 8px;\n  box-shadow: 0 2px 4px rgba(0,0,0,0.1);\n}\n\n.card-header {\n  background-color: #f8f9fa;\n  border-bottom: 1px solid #dee2e6;\n  padding: 1rem;\n}\n\n.card-header h6 {\n  margin: 0;\n  color: #495057;\n}\n\n.btn {\n  border-radius: 4px;\n}\n\n.border {\n  border: 1px solid #dee2e6 !important;\n}\n\n.rounded {\n  border-radius: 6px !important;\n}\n</style>\n\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}