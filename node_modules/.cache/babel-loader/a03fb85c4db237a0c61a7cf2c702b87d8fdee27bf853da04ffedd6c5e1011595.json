{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport \"core-js/modules/es.iterator.constructor.js\";\nimport \"core-js/modules/es.iterator.filter.js\";\nimport \"core-js/modules/web.dom-exception.stack.js\";\nimport IndexComponent from \"./IndexComponent.vue\";\nimport { globalVariable } from \"@/global\";\nexport default {\n  name: \"PayrollWrapper\",\n  components: {\n    IndexComponent\n  },\n  data() {\n    return {\n      form: {\n        id: null,\n        seekers_name: \"\",\n        providers_name: \"\",\n        providers_email: \"\",\n        title: \"\",\n        accommodation: \"\",\n        address: \"\",\n        salary: \"\",\n        starting_date: \"\",\n        salary_date: \"\"\n      },\n      payrolls: [],\n      isSubmitting: false,\n      status: {\n        success: false,\n        message: \"\"\n      },\n      userEmail: \"\",\n      userId: \"\",\n      showModal: false,\n      selectedPayrollId: null,\n      // Search, Filter & Pagination\n      searchQuery: \"\",\n      filterStatus: \"\",\n      currentPage: 1,\n      itemsPerPage: 10,\n      // Validation errors\n      validationErrors: {\n        salary_date: \"\"\n      }\n    };\n  },\n  computed: {\n    isAdmin() {\n      return this.userEmail.toLowerCase() === \"admin@kozi.rw\";\n    },\n    pagesToShow() {\n      const total = this.totalPages;\n      const current = this.currentPage;\n      const delta = 2; // how many pages to show before and after current\n      const range = [];\n      for (let i = Math.max(1, current - delta); i <= Math.min(total, current + delta); i++) {\n        range.push(i);\n      }\n      return range;\n    },\n    filteredPayrolls() {\n      const query = this.searchQuery.toLowerCase();\n      return this.payrolls.filter(payroll => {\n        const seekersName = (payroll.seekers_name || \"\").toLowerCase();\n        const providersName = (payroll.providers_name || \"\").toLowerCase();\n        const providersEmail = (payroll.providers_email || \"\").toLowerCase();\n        const title = (payroll.title || \"\").toLowerCase();\n        const address = (payroll.address || \"\").toLowerCase();\n        const formattedSalaryDate = this.formatSalaryDateOrdinal(payroll.salary_date).toLowerCase();\n        const matchesSearch = seekersName.includes(query) || providersName.includes(query) || providersEmail.includes(query) || title.includes(query) || address.includes(query) || formattedSalaryDate.includes(query);\n        const matchesStatus = this.filterStatus === \"\" ? true : payroll.accommodation === this.filterStatus;\n        return matchesSearch && matchesStatus;\n      });\n    },\n    totalPages() {\n      return Math.ceil(this.filteredPayrolls.length / this.itemsPerPage);\n    },\n    paginatedPayrolls() {\n      const start = (this.currentPage - 1) * this.itemsPerPage;\n      return this.filteredPayrolls.slice(start, start + this.itemsPerPage);\n    }\n  },\n  mounted() {\n    this.userEmail = localStorage.getItem(\"userEmail\") || \"\";\n    if (this.userEmail) {\n      this.getUserIdFromEmail();\n      // Only fetch payrolls if user is admin\n      if (this.isAdmin) {\n        this.fetchPayrolls();\n      }\n    }\n  },\n  methods: {\n    // Cancel edit mode and reset form\n    cancelEdit() {\n      this.resetForm();\n      this.status.message = \"\";\n    },\n    // Reset form to initial state\n    resetForm() {\n      this.form = {\n        id: null,\n        seekers_name: \"\",\n        providers_name: \"\",\n        providers_email: \"\",\n        title: \"\",\n        accommodation: \"\",\n        address: \"\",\n        salary: \"\",\n        starting_date: \"\",\n        salary_date: \"\"\n      };\n\n      // Clear validation errors\n      this.validationErrors = {\n        salary_date: \"\"\n      };\n    },\n    // Validate that payment date is not less than starting date\n    validateDates() {\n      this.validationErrors.salary_date = \"\";\n      if (this.form.starting_date && this.form.salary_date) {\n        const startingDate = new Date(this.form.starting_date);\n        const salaryDate = new Date(this.form.salary_date);\n        if (salaryDate < startingDate) {\n          this.validationErrors.salary_date = \"Payment date cannot be earlier than starting date\";\n          return false;\n        }\n      }\n      return true;\n    },\n    // Format date to show only YYYY-MM-DD\n    formatDate(dateString) {\n      if (!dateString) return '';\n      const date = new Date(dateString);\n      return date.toISOString().split('T')[0];\n    },\n    // Format salary date to show day/month format (e.g., \"31/12\" for December 31st)\n    formatSalaryDate(dateString) {\n      if (!dateString) return '';\n      const date = new Date(dateString);\n      const day = date.getDate().toString().padStart(2, '0');\n      const month = (date.getMonth() + 1).toString().padStart(2, '0');\n      return `${day}/${month}`;\n    },\n    // Alternative: Format salary date to show full date in DD/MM/YYYY format\n    formatSalaryDateFull(dateString) {\n      if (!dateString) return '';\n      const date = new Date(dateString);\n      const day = date.getDate().toString().padStart(2, '0');\n      const month = (date.getMonth() + 1).toString().padStart(2, '0');\n      const year = date.getFullYear();\n      return `${day}/${month}/${year}`;\n    },\n    // Format salary date as ordinal (e.g., \"15th of every month\")\n    formatSalaryDateOrdinal(dateString) {\n      if (!dateString) return '';\n      const date = new Date(dateString);\n      const day = date.getDate();\n      const getOrdinal = n => {\n        const s = [\"th\", \"st\", \"nd\", \"rd\"];\n        const v = n % 100;\n        return n + (s[(v - 20) % 10] || s[v] || s[0]);\n      };\n      return `${getOrdinal(day)} /month`;\n    },\n    openModal(id) {\n      this.selectedPayrollId = id;\n      this.showModal = true;\n    },\n    closeModal() {\n      this.showModal = false;\n      this.selectedPayrollId = null;\n    },\n    changePage(page) {\n      if (page >= 1 && page <= this.totalPages) {\n        this.currentPage = page;\n      }\n    },\n    async confirmDeletePayroll() {\n      const token = localStorage.getItem(\"adminToken\");\n      try {\n        const res = await fetch(`${globalVariable}/admin/payroll/delete/${this.selectedPayrollId}`, {\n          method: \"DELETE\",\n          headers: {\n            Authorization: `Bearer ${token}`,\n            \"Content-Type\": \"application/json\"\n          }\n        });\n        const result = await res.json();\n        if (res.ok) {\n          this.status = {\n            success: true,\n            message: result.message || \"Payroll record deleted successfully.\"\n          };\n          this.fetchPayrolls();\n        } else {\n          this.status = {\n            success: false,\n            message: result.message || \"Failed to delete payroll record.\"\n          };\n        }\n      } catch (err) {\n        console.error(\"Delete error:\", err);\n        this.status = {\n          success: false,\n          message: \"Unexpected error occurred while deleting.\"\n        };\n      } finally {\n        this.closeModal();\n      }\n    },\n    async fetchPayrolls() {\n      // Only fetch if user is admin\n      if (!this.isAdmin) return;\n      try {\n        const token = localStorage.getItem(\"adminToken\");\n        const res = await fetch(`${globalVariable}/admin/payroll`, {\n          headers: {\n            Authorization: `Bearer ${token}`\n          }\n        });\n        if (!res.ok) throw new Error(\"Failed to fetch payrolls\");\n        const data = await res.json();\n        this.payrolls = data;\n        console.log(\"Payrolls loaded:\", this.payrolls);\n      } catch (err) {\n        console.error(\"Error fetching payrolls:\", err);\n      }\n    },\n    async submitForm() {\n      // Double check admin status\n      if (!this.isAdmin) {\n        this.status = {\n          success: false,\n          message: \"Access denied: Admin privileges required.\"\n        };\n        return;\n      }\n      console.log(\"Form data before submission:\", this.form); // Debug log\n\n      // Validate dates before submitting\n      if (!this.validateDates()) {\n        this.status = {\n          success: false,\n          message: \"Please correct the validation errors before submitting.\"\n        };\n        return;\n      }\n      this.isSubmitting = true;\n      this.status.message = \"\";\n      try {\n        const token = localStorage.getItem(\"adminToken\");\n        const payload = {\n          seekers_name: this.form.seekers_name,\n          providers_name: this.form.providers_name,\n          providers_email: this.form.providers_email,\n          title: this.form.title,\n          accommodation: this.form.accommodation,\n          address: this.form.address,\n          salary: this.form.salary,\n          starting_date: this.form.starting_date,\n          salary_date: this.form.salary_date\n        };\n\n        // Add ID to payload if updating\n        if (this.form.id) {\n          payload.id = this.form.id;\n        }\n        const url = this.form.id ? `${globalVariable}/admin/payroll/${this.form.id}` : `${globalVariable}/admin/payroll`;\n        const method = this.form.id ? \"PUT\" : \"POST\";\n        console.log(\"API Call:\", {\n          method,\n          url,\n          payload\n        }); // Debug log\n\n        const response = await fetch(url, {\n          method,\n          headers: {\n            \"Content-Type\": \"application/json\",\n            Authorization: `Bearer ${token}`\n          },\n          body: JSON.stringify(payload)\n        });\n        if (response.ok) {\n          const result = await response.json();\n          this.status = {\n            success: true,\n            message: result.message || (this.form.id ? \"Payroll updated successfully!\" : \"Payroll added successfully!\")\n          };\n\n          // Reset form\n          this.resetForm();\n\n          // Refresh the list\n          this.fetchPayrolls();\n        } else {\n          const error = await response.text();\n          this.status = {\n            success: false,\n            message: \"Failed: \" + error\n          };\n        }\n      } catch (err) {\n        console.error(\"Error:\", err);\n        this.status = {\n          success: false,\n          message: \"Unexpected error occurred.\"\n        };\n      } finally {\n        this.isSubmitting = false;\n      }\n    },\n    editPayroll(payroll) {\n      console.log(\"Editing payroll:\", payroll); // Debug log\n\n      const startingDate = payroll.starting_date ? new Date(payroll.starting_date).toISOString().split(\"T\")[0] : \"\";\n      const salaryDate = payroll.salary_date ? new Date(payroll.salary_date).toISOString().split(\"T\")[0] : \"\";\n\n      // Ensure we're setting the ID properly\n      this.form = {\n        id: payroll.id,\n        // Make sure this is set\n        seekers_name: payroll.seekers_name || \"\",\n        providers_name: payroll.providers_name || \"\",\n        providers_email: payroll.providers_email || \"\",\n        title: payroll.title || \"\",\n        accommodation: payroll.accommodation || \"\",\n        address: payroll.address || \"\",\n        salary: payroll.salary || \"\",\n        starting_date: startingDate,\n        salary_date: salaryDate\n      };\n\n      // Clear validation errors when editing\n      this.validationErrors = {\n        salary_date: \"\"\n      };\n      console.log(\"Form after edit:\", this.form); // Debug log\n\n      window.scrollTo({\n        top: 0,\n        behavior: \"smooth\"\n      });\n    },\n    goToMore(id) {\n      this.$router.push({\n        name: \"admin/payroll-details\",\n        params: {\n          id: id\n        }\n      });\n    },\n    async getUserIdFromEmail() {\n      const token = localStorage.getItem(\"adminToken\");\n      if (!token) return;\n      try {\n        const payload = JSON.parse(atob(token.split(\".\")[1]));\n        if (!this.userEmail) {\n          this.userEmail = payload.email;\n        }\n        const res = await fetch(`${globalVariable}/get_user_id_by_email/${this.userEmail}`, {\n          headers: {\n            Authorization: `Bearer ${token}`\n          }\n        });\n        const data = await res.json();\n        if (res.ok) {\n          this.userId = data.users_id;\n        } else {\n          this.status = {\n            success: false,\n            message: data.message || \"Unable to get user ID.\"\n          };\n        }\n      } catch (err) {\n        console.error(\"Error getting users_id:\", err);\n        this.status = {\n          success: false,\n          message: \"Failed to fetch user ID.\"\n        };\n      }\n    },\n    highlightMatch(text) {\n      if (text === null || text === undefined) return \"\";\n      const str = String(text); // convert to string\n      if (!this.searchQuery) return str;\n      const regex = new RegExp(`(${this.searchQuery})`, \"gi\");\n      return str.replace(regex, `<span class=\"highlight-teal\">$1</span>`);\n    }\n  }\n};","map":{"version":3,"names":["IndexComponent","globalVariable","name","components","data","form","id","seekers_name","providers_name","providers_email","title","accommodation","address","salary","starting_date","salary_date","payrolls","isSubmitting","status","success","message","userEmail","userId","showModal","selectedPayrollId","searchQuery","filterStatus","currentPage","itemsPerPage","validationErrors","computed","isAdmin","toLowerCase","pagesToShow","total","totalPages","current","delta","range","i","Math","max","min","push","filteredPayrolls","query","filter","payroll","seekersName","providersName","providersEmail","formattedSalaryDate","formatSalaryDateOrdinal","matchesSearch","includes","matchesStatus","ceil","length","paginatedPayrolls","start","slice","mounted","localStorage","getItem","getUserIdFromEmail","fetchPayrolls","methods","cancelEdit","resetForm","validateDates","startingDate","Date","salaryDate","formatDate","dateString","date","toISOString","split","formatSalaryDate","day","getDate","toString","padStart","month","getMonth","formatSalaryDateFull","year","getFullYear","getOrdinal","n","s","v","openModal","closeModal","changePage","page","confirmDeletePayroll","token","res","fetch","method","headers","Authorization","result","json","ok","err","console","error","Error","log","submitForm","payload","url","response","body","JSON","stringify","text","editPayroll","window","scrollTo","top","behavior","goToMore","$router","params","parse","atob","email","users_id","highlightMatch","undefined","str","String","regex","RegExp","replace"],"sources":["/Users/gentil/Desktop/Kozi-ai-agent/src/views/admin/PayrollComponent.vue"],"sourcesContent":["<template>\n  <IndexComponent />\n  <!-- Show nothing if user is not admin -->\n  <div v-if=\"!isAdmin && userEmail\" class=\"d-flex justify-content-center align-items-center\" style=\"height: 50vh;\">\n    <div class=\"text-center\">\n      <i class=\"ti ti-lock\" style=\"font-size: 4rem; color: #E960A6; margin-bottom: 1rem;\"></i>\n      <h3 class=\"text\" style=\"color: #E960A6;\">Access Denied</h3>\n      <p class=\"text-muted\">You don't have permission to access this page.</p>\n    </div>\n  </div>\n\n  <!-- Show loading state while checking user -->\n  <div v-else-if=\"!userEmail\" class=\"d-flex justify-content-center align-items-center\" style=\"height: 50vh;\">\n    <div class=\"text-center\">\n      <div class=\"spinner-border text-primary\" role=\"status\">\n        <span class=\"sr-only\">Loading...</span>\n      </div>\n      <p class=\"mt-3 text-muted\">Checking permissions...</p>\n    </div>\n  </div>\n\n  <!-- Admin content -->\n  <div\n    v-else\n    class=\"page-wrapper\"\n    id=\"main-wrapper\"\n    data-layout=\"vertical\"\n    data-navbarbg=\"skin6\"\n    data-sidebartype=\"full\"\n    data-sidebar-description=\"fixed\"\n    data-header-description=\"fixed\"\n    style=\"position: absolute; top: 0; left: 0; right: 0; bottom: 0; z-index: 1;\"\n  >\n    <div class=\"body-wrapper\" style=\"margin-top: 70px; margin-left: 270px; background: white; min-height: calc(100vh - 70px); padding: 20px; overflow-y: auto; max-height: calc(100vh - 70px);\">\n      <h5 class=\"card-title fw-semibold mb-4\" style=\"color: #E960A6;\">\n        <i class=\"ti ti-user-plus\"></i> {{ form.id ? 'Update Payroll' : 'Register New Payroll' }}\n      </h5>\n\n      <form class=\"mx-4\" @submit.prevent=\"submitForm\">\n        <div\n          v-if=\"status.message\"\n          :class=\"['alert mt-3', status.success ? 'alert-success' : 'alert-danger']\"\n        >\n          {{ status.message }}\n        </div>\n\n        <div class=\"form-group row\">\n          <div class=\"col-md-6\">\n            <label class=\"form-label\">Seeker's name</label>\n            <input type=\"text\" v-model=\"form.seekers_name\" class=\"form-control\" required />\n          </div>\n          <div class=\"col-md-6\">\n            <label class=\"form-label\">Provider's name</label>\n            <input type=\"text\" v-model=\"form.providers_name\" class=\"form-control\" required />\n          </div>\n          <div class=\"col-md-12\">\n            <label class=\"form-label\">Provider's email</label>\n            <input type=\"email\" v-model=\"form.providers_email\" class=\"form-control\" required />\n          </div>\n        </div>\n        \n        <div class=\"form-group row\">\n          <div class=\"col-md-6\">\n            <label class=\"form-label\">Job Title</label>\n            <input type=\"text\" v-model=\"form.title\" class=\"form-control\" required />\n          </div>\n          <div class=\"col-md-6\">\n            <label class=\"form-label\">Accommodation Preference</label>\n            <select v-model=\"form.accommodation\" class=\"form-control\" style=\"height: 48px; padding-top: 8px; padding-bottom: 8px;\" required>\n              <option value=\"\" disabled>Choose Mode</option>\n              <option value=\"Stay in\">Stay In</option>\n              <option value=\"Stay out\">Stay out</option>\n            </select>\n          </div>\n        </div>\n\n        <div class=\"form-group row\">\n          <div class=\"col-md-6\">\n            <label class=\"form-label\">Address</label>\n            <input type=\"text\" v-model=\"form.address\" class=\"form-control\" required />\n          </div>\n          <div class=\"col-md-6\">\n            <label class=\"form-label\">Salary(RWF)</label>\n            <input type=\"number\" v-model=\"form.salary\" class=\"form-control\" required />\n          </div>\n        </div>\n\n        <div class=\"form-group row\">\n          <div class=\"col-md-6\">\n            <label class=\"form-label\">Starting Date</label>\n            <input \n              type=\"date\" \n              v-model=\"form.starting_date\" \n              class=\"form-control\" \n              required \n              @change=\"validateDates\"\n            />\n          </div>\n          <div class=\"col-md-6\">\n            <label class=\"form-label\">Payment Date (Day of Month)</label>\n            <input \n              type=\"date\" \n              v-model=\"form.salary_date\" \n              class=\"form-control\" \n              required \n              :min=\"form.starting_date\"\n              @change=\"validateDates\"\n            />\n            <small v-if=\"validationErrors.salary_date\" class=\"text-danger\">\n              {{ validationErrors.salary_date }}\n            </small>\n          </div>\n        </div>\n     \n        <div class=\"d-flex gap-2\">\n          <button \n            type=\"submit\" \n            class=\"btn btn-primary mt-3\" \n            :disabled=\"isSubmitting\"\n          >\n            <span\n              v-if=\"isSubmitting\"\n              class=\"spinner-border spinner-border-sm me-2\"\n              role=\"status\"\n              aria-hidden=\"true\"\n            ></span>\n            {{ isSubmitting ? \"Processing...\" : form.id ? \"Update Payroll\" : \"Submit Payroll\" }}\n          </button>\n          \n          <button \n            v-if=\"form.id\" \n            type=\"button\" \n            class=\"btn btn-secondary mt-3\" \n            @click=\"cancelEdit\"\n          >\n            Cancel\n          </button>\n        </div>\n      </form>\n\n      <!-- Confirmation Modal -->\n      <div v-if=\"showModal\" class=\"modal-overlay\">\n        <div class=\"modal-content\">\n          <h5>Are you sure you want to delete this payroll record?</h5>\n          <div>\n            <button class=\"btn btn-danger mt-3\" @click=\"confirmDeletePayroll\">Yes, Delete</button>\n            &nbsp;\n            <button class=\"btn btn-cancel mt-3\" style=\"background-color: teal; color: white;\" @click=\"closeModal\">\n              Cancel\n            </button>\n          </div>\n        </div>\n      </div>\n\n      <hr class=\"my-4\" />\n      <!-- Search and Filter -->\n      <div class=\"row mb-3 mx-4\">\n        <div class=\"col-md-8\">\n          <input v-model=\"searchQuery\" class=\"form-control\" placeholder=\"Search by seekers, provider, job title or address\" />\n        </div>\n        <div class=\"col-md-4\">\n          <select v-model=\"filterStatus\" style=\"height: 48px; padding-top: 8px; padding-bottom: 8px;\" class=\"form-control\">\n            <option value=\"\">Accommodation Preference</option>\n            <option value=\"Stay in\">Stay in</option>\n            <option value=\"Stay out\">Stay out</option>\n          </select>\n        </div>\n      </div>\n      \n      <div v-if=\"filteredPayrolls.length === 0\" class=\"text-muted px-4\">.</div>\n      <div v-if=\"filteredPayrolls.length === 0\" class=\"d-flex justify-content-center my-4\">\n        <div class=\"btn btn-danger text-center\" style=\"width: 40rem;\">\n          No payroll records available yet.\n        </div>\n      </div>\n\n<div class=\"table-responsive\" v-else>\n        <table class=\"table table-bordered\" style=\"min-width: 1200px;\">\n          <thead class=\"table-light\">\n            <tr>\n              <th style=\"width: 50px;\">Id</th>\n              <th style=\"min-width: 120px;\">S.name</th>\n              <th style=\"min-width: 120px;\">P.name</th>\n              <th style=\"min-width: 180px;\">P.email</th>\n              <th style=\"min-width: 100px;\">Job title</th>\n              <th style=\"min-width: 100px;\">Accommodation</th>\n              <th style=\"min-width: 150px;\">Address</th>\n              <th style=\"min-width: 80px;\">Salary</th>\n              <th style=\"min-width: 100px;\">Revenue Share</th>\n              <th style=\"min-width: 100px;\">Starting Date</th>\n              <th style=\"min-width: 100px;\">Payment Day</th>\n              <th style=\"min-width: 120px;\">Action</th>\n            </tr>\n          </thead>\n          <tbody>\n            <tr v-for=\"(payroll, index) in paginatedPayrolls\" :key=\"payroll.id\">\n              <td>{{ (currentPage - 1) * itemsPerPage + index + 1 }}</td>\n              <td v-html=\"highlightMatch(payroll.seekers_name)\"></td>\n              <td v-html=\"highlightMatch(payroll.providers_name)\"></td>\n              <td v-html=\"highlightMatch(payroll.providers_email)\"></td>\n              <td v-html=\"highlightMatch(payroll.title)\"></td>\n              <td v-html=\"highlightMatch(payroll.accommodation)\"></td>\n              <td v-html=\"highlightMatch(payroll.address)\"></td>\n              <td v-html=\"highlightMatch(payroll.salary)\"></td>\n              <td v-html=\"highlightMatch(Math.round(Number(payroll.salary) * 0.18))\"></td>\n              <td v-html=\"highlightMatch(formatDate(payroll.starting_date))\"></td>\n              <td v-html=\"highlightMatch(formatSalaryDateOrdinal(payroll.salary_date))\"></td>\n              <td>\n                <button \n                  class=\"btn btn-primary btn-sm\" \n                  @click=\"editPayroll(payroll)\"\n                >\n                  Edit\n                </button>\n                <button \n                  class=\"btn btn-primary btn-sm\" \n                  @click=\"openModal(payroll.id)\"\n                >\n                  Delete\n                </button>\n              </td>\n            </tr>\n          </tbody>\n        </table>\n      </div>\n      \n\n      <!-- Pagination -->\n      <nav class=\"mt-3\" v-if=\"totalPages > 1\">\n        <ul class=\"pagination justify-content-center\">\n          <li class=\"page-item\" :class=\"{ disabled: currentPage === 1 }\">\n            <button class=\"page-link\" @click=\"changePage(currentPage - 1)\">Previous</button>\n          </li>\n          <li\n            v-for=\"page in pagesToShow\"\n            :key=\"page\"\n            :class=\"['page-item', { active: currentPage === page }]\"\n          >\n            <button class=\"page-link\" @click=\"changePage(page)\">{{ page }}</button>\n          </li>\n          <li class=\"page-item\" :class=\"{ disabled: currentPage === totalPages }\">\n            <button class=\"page-link\" @click=\"changePage(currentPage + 1)\">Next</button>\n          </li>\n        </ul>\n      </nav>\n    </div>\n  </div>\n</template>\n\n<script>\nimport IndexComponent from \"./IndexComponent.vue\";\nimport { globalVariable } from \"@/global\";\n\nexport default {\n  name: \"PayrollWrapper\",\n  components: { IndexComponent },\n  data() {\n    return {\n      form: {\n        id: null,\n        seekers_name: \"\",\n        providers_name: \"\",\n        providers_email: \"\",\n        title: \"\",\n        accommodation: \"\",\n        address: \"\",\n        salary: \"\",\n        starting_date: \"\",\n        salary_date: \"\",\n      },\n      payrolls: [],\n      isSubmitting: false,\n      status: {\n        success: false,\n        message: \"\",\n      },\n      userEmail: \"\",\n      userId: \"\",\n      showModal: false,\n      selectedPayrollId: null,\n\n      // Search, Filter & Pagination\n      searchQuery: \"\",\n      filterStatus: \"\",\n      currentPage: 1,\n      itemsPerPage: 10,\n      \n      // Validation errors\n      validationErrors: {\n        salary_date: \"\"\n      }\n    };\n  },\n  computed: {\n    isAdmin() {\n      return this.userEmail.toLowerCase() === \"admin@kozi.rw\";\n    },\n    pagesToShow() {\n      const total = this.totalPages;\n      const current = this.currentPage;\n      const delta = 2; // how many pages to show before and after current\n      const range = [];\n\n      for (let i = Math.max(1, current - delta); i <= Math.min(total, current + delta); i++) {\n        range.push(i);\n      }\n\n      return range;\n    },\n    filteredPayrolls() {\n      const query = this.searchQuery.toLowerCase();\n      return this.payrolls.filter((payroll) => {\n        const seekersName = (payroll.seekers_name || \"\").toLowerCase();\n        const providersName = (payroll.providers_name || \"\").toLowerCase();\n           const providersEmail = (payroll.providers_email || \"\").toLowerCase();\n        const title = (payroll.title || \"\").toLowerCase();\n        const address = (payroll.address || \"\").toLowerCase();\n        const formattedSalaryDate = this.formatSalaryDateOrdinal(payroll.salary_date).toLowerCase();\n\n        const matchesSearch =\n          seekersName.includes(query) || \n          providersName.includes(query) || \n          providersEmail.includes(query) ||\n          title.includes(query) || \n          address.includes(query) ||\n          formattedSalaryDate.includes(query);\n\n        const matchesStatus =\n          this.filterStatus === \"\"\n            ? true\n            : payroll.accommodation === this.filterStatus;\n\n        return matchesSearch && matchesStatus;\n      });\n    },\n    totalPages() {\n      return Math.ceil(this.filteredPayrolls.length / this.itemsPerPage);\n    },\n    paginatedPayrolls() {\n      const start = (this.currentPage - 1) * this.itemsPerPage;\n      return this.filteredPayrolls.slice(start, start + this.itemsPerPage);\n    },\n  },\n  mounted() {\n    this.userEmail = localStorage.getItem(\"userEmail\") || \"\";\n    if (this.userEmail) {\n      this.getUserIdFromEmail();\n      // Only fetch payrolls if user is admin\n      if (this.isAdmin) {\n        this.fetchPayrolls();\n      }\n    }\n  },\n  methods: {\n    // Cancel edit mode and reset form\n    cancelEdit() {\n      this.resetForm();\n      this.status.message = \"\";\n    },\n\n    // Reset form to initial state\n    resetForm() {\n      this.form = {\n        id: null,\n        seekers_name: \"\",\n        providers_name: \"\",\n        providers_email: \"\",\n        title: \"\",\n        accommodation: \"\",\n        address: \"\",\n        salary: \"\",\n        starting_date: \"\",\n        salary_date: \"\",\n      };\n      \n      // Clear validation errors\n      this.validationErrors = {\n        salary_date: \"\"\n      };\n    },\n\n    // Validate that payment date is not less than starting date\n    validateDates() {\n      this.validationErrors.salary_date = \"\";\n      \n      if (this.form.starting_date && this.form.salary_date) {\n        const startingDate = new Date(this.form.starting_date);\n        const salaryDate = new Date(this.form.salary_date);\n        \n        if (salaryDate < startingDate) {\n          this.validationErrors.salary_date = \"Payment date cannot be earlier than starting date\";\n          return false;\n        }\n      }\n      return true;\n    },\n\n    // Format date to show only YYYY-MM-DD\n    formatDate(dateString) {\n      if (!dateString) return '';\n      const date = new Date(dateString);\n      return date.toISOString().split('T')[0];\n    },\n    \n    // Format salary date to show day/month format (e.g., \"31/12\" for December 31st)\n    formatSalaryDate(dateString) {\n      if (!dateString) return '';\n      const date = new Date(dateString);\n      const day = date.getDate().toString().padStart(2, '0');\n      const month = (date.getMonth() + 1).toString().padStart(2, '0');\n      return `${day}/${month}`;\n    },\n    \n    // Alternative: Format salary date to show full date in DD/MM/YYYY format\n    formatSalaryDateFull(dateString) {\n      if (!dateString) return '';\n      const date = new Date(dateString);\n      const day = date.getDate().toString().padStart(2, '0');\n      const month = (date.getMonth() + 1).toString().padStart(2, '0');\n      const year = date.getFullYear();\n      return `${day}/${month}/${year}`;\n    },\n    \n    // Format salary date as ordinal (e.g., \"15th of every month\")\n    formatSalaryDateOrdinal(dateString) {\n      if (!dateString) return '';\n      const date = new Date(dateString);\n      const day = date.getDate();\n      \n      const getOrdinal = (n) => {\n        const s = [\"th\", \"st\", \"nd\", \"rd\"];\n        const v = n % 100;\n        return n + (s[(v - 20) % 10] || s[v] || s[0]);\n      };\n      \n      return `${getOrdinal(day)} /month`;\n    },\n\n    openModal(id) {\n      this.selectedPayrollId = id;\n      this.showModal = true;\n    },\n    closeModal() {\n      this.showModal = false;\n      this.selectedPayrollId = null;\n    },\n    changePage(page) {\n      if (page >= 1 && page <= this.totalPages) {\n        this.currentPage = page;\n      }\n    },\n    async confirmDeletePayroll() {\n      const token = localStorage.getItem(\"adminToken\");\n\n      try {\n        const res = await fetch(`${globalVariable}/admin/payroll/delete/${this.selectedPayrollId}`, {\n          method: \"DELETE\",\n          headers: {\n            Authorization: `Bearer ${token}`,\n            \"Content-Type\": \"application/json\",\n          },\n        });\n\n        const result = await res.json();\n\n        if (res.ok) {\n          this.status = {\n            success: true,\n            message: result.message || \"Payroll record deleted successfully.\",\n          };\n          this.fetchPayrolls();\n        } else {\n          this.status = {\n            success: false,\n            message: result.message || \"Failed to delete payroll record.\",\n          };\n        }\n      } catch (err) {\n        console.error(\"Delete error:\", err);\n        this.status = {\n          success: false,\n          message: \"Unexpected error occurred while deleting.\",\n        };\n      } finally {\n        this.closeModal();\n      }\n    },\n    async fetchPayrolls() {\n      // Only fetch if user is admin\n      if (!this.isAdmin) return;\n      \n      try {\n        const token = localStorage.getItem(\"adminToken\");\n        const res = await fetch(`${globalVariable}/admin/payroll`, {\n          headers: {\n            Authorization: `Bearer ${token}`,\n          },\n        });\n        if (!res.ok) throw new Error(\"Failed to fetch payrolls\");\n        const data = await res.json();\n        this.payrolls = data;\n        console.log(\"Payrolls loaded:\", this.payrolls);\n      } catch (err) {\n        console.error(\"Error fetching payrolls:\", err);\n      }\n    },\n    async submitForm() {\n      // Double check admin status\n      if (!this.isAdmin) {\n        this.status = {\n          success: false,\n          message: \"Access denied: Admin privileges required.\",\n        };\n        return;\n      }\n\n      console.log(\"Form data before submission:\", this.form); // Debug log\n      \n      // Validate dates before submitting\n      if (!this.validateDates()) {\n        this.status = {\n          success: false,\n          message: \"Please correct the validation errors before submitting.\",\n        };\n        return;\n      }\n\n      this.isSubmitting = true;\n      this.status.message = \"\";\n\n      try {\n        const token = localStorage.getItem(\"adminToken\");\n\n        const payload = {\n          seekers_name: this.form.seekers_name,\n          providers_name: this.form.providers_name,\n          providers_email: this.form.providers_email,\n          title: this.form.title,\n          accommodation: this.form.accommodation,\n          address: this.form.address,\n          salary: this.form.salary,\n          starting_date: this.form.starting_date,\n          salary_date: this.form.salary_date,\n        };\n\n        // Add ID to payload if updating\n        if (this.form.id) {\n          payload.id = this.form.id;\n        }\n\n        const url = this.form.id\n          ? `${globalVariable}/admin/payroll/${this.form.id}`\n          : `${globalVariable}/admin/payroll`;\n\n        const method = this.form.id ? \"PUT\" : \"POST\";\n\n        console.log(\"API Call:\", { method, url, payload }); // Debug log\n\n        const response = await fetch(url, {\n          method,\n          headers: {\n            \"Content-Type\": \"application/json\",\n            Authorization: `Bearer ${token}`,\n          },\n          body: JSON.stringify(payload),\n        });\n\n        if (response.ok) {\n          const result = await response.json();\n          this.status = {\n            success: true,\n            message: result.message || (this.form.id ? \"Payroll updated successfully!\" : \"Payroll added successfully!\"),\n          };\n\n          // Reset form\n          this.resetForm();\n          \n          // Refresh the list\n          this.fetchPayrolls();\n        } else {\n          const error = await response.text();\n          this.status = {\n            success: false,\n            message: \"Failed: \" + error,\n          };\n        }\n      } catch (err) {\n        console.error(\"Error:\", err);\n        this.status = {\n          success: false,\n          message: \"Unexpected error occurred.\",\n        };\n      } finally {\n        this.isSubmitting = false;\n      }\n    },\n    editPayroll(payroll) {\n      console.log(\"Editing payroll:\", payroll); // Debug log\n      \n      const startingDate = payroll.starting_date\n        ? new Date(payroll.starting_date).toISOString().split(\"T\")[0]\n        : \"\";\n      \n      const salaryDate = payroll.salary_date\n        ? new Date(payroll.salary_date).toISOString().split(\"T\")[0]\n        : \"\";\n\n      // Ensure we're setting the ID properly\n      this.form = {\n        id: payroll.id, // Make sure this is set\n        seekers_name: payroll.seekers_name || \"\",\n        providers_name: payroll.providers_name || \"\",\n        providers_email: payroll.providers_email || \"\",\n        title: payroll.title || \"\",\n        accommodation: payroll.accommodation || \"\",\n        address: payroll.address || \"\",\n        salary: payroll.salary || \"\",\n        starting_date: startingDate,\n        salary_date: salaryDate,\n      };\n      \n      // Clear validation errors when editing\n      this.validationErrors = {\n        salary_date: \"\"\n      };\n      \n      console.log(\"Form after edit:\", this.form); // Debug log\n      \n      window.scrollTo({ top: 0, behavior: \"smooth\" });\n    },\n    goToMore(id) {\n      this.$router.push({ name: \"admin/payroll-details\", params: { id: id } });\n    },\n    async getUserIdFromEmail() {\n      const token = localStorage.getItem(\"adminToken\");\n      if (!token) return;\n\n      try {\n        const payload = JSON.parse(atob(token.split(\".\")[1]));\n        if (!this.userEmail) {\n          this.userEmail = payload.email;\n        }\n        const res = await fetch(`${globalVariable}/get_user_id_by_email/${this.userEmail}`, {\n          headers: { Authorization: `Bearer ${token}` },\n        });\n        const data = await res.json();\n\n        if (res.ok) {\n          this.userId = data.users_id;\n        } else {\n          this.status = {\n            success: false,\n            message: data.message || \"Unable to get user ID.\",\n          };\n        }\n      } catch (err) {\n        console.error(\"Error getting users_id:\", err);\n        this.status = {\n          success: false,\n          message: \"Failed to fetch user ID.\",\n        };\n      }\n    },\n    highlightMatch(text) {\n      if (text === null || text === undefined) return \"\";\n      const str = String(text); // convert to string\n      if (!this.searchQuery) return str;\n      const regex = new RegExp(`(${this.searchQuery})`, \"gi\");\n      return str.replace(regex, `<span class=\"highlight-teal\">$1</span>`);\n    },\n  },\n};\n</script>\n\n<style scoped>\n\n.btn-cancel {\n  background-color: teal;\n  color: white;\n}\n\n.btn-cancel:hover {\n  background-color: teal;\n  color: #E960A6;\n}\n\n.page-item.active .page-link {\n  background-color: #E960A6;\n  color: white;\n  border-color: #E960A6;\n}\n\n.page-link {\n  border-radius: 4px;\n  padding: 0.4rem 0.75rem;\n  cursor: pointer;\n  color:#336Cb6\n}\n\n      .modal-overlay {\n         position: fixed;\n          top: 0;\n          left: 0;\n          width: 100%;\n          height: 100%;\n          background: rgba(0, 0, 0, 0.5);\n          display: flex;\n          justify-content: center;\n          align-items: center;\n          z-index: 1000;\n        }\n        \n        /* Modal content styling */\n        .modal-content {\n          background-color: white;\n          padding: 20px;\n          border-radius: 8px;\n          text-align: center;\n          width: 300px;\n        }\n      \n        .container-fluid {\n          max-width: 800px;\n          margin: auto;\n          padding: 20px;\n          background-color: #ffffff;\n          border-radius: 8px;\n          box-shadow: 0 8px 30px rgba(0, 0, 0, 0.2);\n        }\n        \n        h5 {\n          color: #333;\n          margin-bottom: 20px;\n        }\n        .custom-select {\n          width: 100%;\n          padding: 15px;\n          height: 50px;\n          border: 1px solid #ccc;\n          border-radius: 5px;\n          box-sizing: border-box;\n          transition: border-color 0.3s, box-shadow 0.3s;\n          font-size: 16px;\n    \n        }\n        \n.highlight-teal {\n  background-color: #20c997;\n  color: white;\n  padding: 0 2px;\n  border-radius: 3px;\n}\n.form-control {\n          width: 100%;\n          padding: 15px;\n          height: 50px;\n          border: 1px solid #ccc;\n          border-radius: 5px;\n          box-sizing: border-box;\n          transition: border-color 0.3s, box-shadow 0.3s;\n          font-size: 16px;\n        }\n        \n        .form-control:focus {\n          border-color: #E960A6;\n          box-shadow: 0 0 5px rgba(0, 123, 255, 0.5);\n          outline: none;\n        }\n        \n        .form-label {\n          font-weight: bold;\n          margin-bottom: 5px;\n          display: block;\n        }\n        \n        .btn-primary {\n          background-color: #E960A6;\n          color: white;\n        \n        }\n        \n        .btn-primary:hover {\n          background-color: #E960A6;\n          color: teal;\n        }\n        \n        .form-group {\n          margin-bottom: 15px;\n        }\n        \n        </style>"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}