{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport \"core-js/modules/web.dom-exception.stack.js\";\nimport axios from \"axios\";\nimport IndexComponent from \"./IndexComponent.vue\";\nimport { globalVariable } from \"@/global\";\nimport { getProvinces, getDistrictsByProvince, getSectorsByDistrict, getCellsBySector, getVillagesByCell } from 'rwanda-geo-structure';\nexport default {\n  components: {\n    IndexComponent\n  },\n  data() {\n    return {\n      userEmail: \"\",\n      userId: \"\",\n      message: \"\",\n      messageType: \"\",\n      categoryTypes: [],\n      categories: [],\n      selectedCategoryType: \"\",\n      // Rwanda geographic data\n      provinces: [],\n      districts: [],\n      sectors: [],\n      cells: [],\n      villages: [],\n      isSubmitting: false,\n      form: {\n        email: \"\",\n        first_name: \"\",\n        last_name: \"\",\n        gender: \"\",\n        password: \"\",\n        fathers_name: \"\",\n        mothers_name: \"\",\n        telephone: \"\",\n        province: \"\",\n        district: \"\",\n        sector: \"\",\n        cell: \"\",\n        village: \"\",\n        date_of_birth: \"\",\n        bio: \"\",\n        salary: \"\",\n        disability: \"\",\n        categories_id: \"\",\n        role_id: \"\",\n        picture: \"\",\n        verifiedEmail: true,\n        token: \"\",\n        verification_code: \"\",\n        job_seeker_id: \"js-\" + Date.now(),\n        created_at: new Date().toISOString().slice(0, 19).replace(\"T\", \" \"),\n        created_by: \"\",\n        is_editable: true,\n        id: null,\n        image: null,\n        cv: null,\n        id_url: \"\",\n        image_url: \"\",\n        cv_url: \"\"\n      },\n      personalFields: [{\n        label: \"First Name\",\n        model: \"first_name\",\n        type: \"text\"\n      }, {\n        label: \"Last Name\",\n        model: \"last_name\",\n        type: \"text\"\n      }, {\n        label: \"Email\",\n        model: \"email\",\n        type: \"email\"\n      }, {\n        label: \"Password\",\n        model: \"password\",\n        type: \"password\"\n      }, {\n        label: \"Father's Name\",\n        model: \"fathers_name\",\n        type: \"text\"\n      }, {\n        label: \"Mother's Name\",\n        model: \"mothers_name\",\n        type: \"text\"\n      }, {\n        label: \"Telephone\",\n        model: \"telephone\",\n        type: \"text\"\n      }, {\n        label: \"Date of Birth\",\n        model: \"date_of_birth\",\n        type: \"date\"\n      }]\n    };\n  },\n  mounted() {\n    this.loadProvinces();\n    this.loadCategoryTypes();\n    this.loadRoleId();\n    this.userEmail = localStorage.getItem(\"userEmail\") || \"\";\n    this.form.created_by = this.userEmail;\n    if (this.userEmail) {\n      this.getUserIdFromEmail();\n    }\n  },\n  methods: {\n    // Rwanda geographic methods\n    loadProvinces() {\n      try {\n        this.provinces = getProvinces();\n      } catch (error) {\n        console.error(\"Error loading provinces:\", error);\n        this.message = \"Failed to load provinces.\";\n        this.messageType = \"alert-warning\";\n      }\n    },\n    loadDistricts() {\n      try {\n        if (this.form.province) {\n          this.districts = getDistrictsByProvince(this.form.province);\n          // Clear dependent fields\n          this.sectors = [];\n          this.cells = [];\n          this.villages = [];\n          this.form.district = \"\";\n          this.form.sector = \"\";\n          this.form.cell = \"\";\n          this.form.village = \"\";\n        }\n      } catch (error) {\n        console.error(\"Error loading districts:\", error);\n        this.message = \"Failed to load districts.\";\n        this.messageType = \"alert-warning\";\n      }\n    },\n    loadSectors() {\n      try {\n        if (this.form.province && this.form.district) {\n          this.sectors = getSectorsByDistrict(this.form.province, this.form.district);\n          // Clear dependent fields\n          this.cells = [];\n          this.villages = [];\n          this.form.sector = \"\";\n          this.form.cell = \"\";\n          this.form.village = \"\";\n        }\n      } catch (error) {\n        console.error(\"Error loading sectors:\", error);\n        this.message = \"Failed to load sectors.\";\n        this.messageType = \"alert-warning\";\n      }\n    },\n    loadCells() {\n      try {\n        if (this.form.province && this.form.district && this.form.sector) {\n          this.cells = getCellsBySector(this.form.province, this.form.district, this.form.sector);\n          // Clear dependent fields\n          this.villages = [];\n          this.form.cell = \"\";\n          this.form.village = \"\";\n        }\n      } catch (error) {\n        console.error(\"Error loading cells:\", error);\n        this.message = \"Failed to load cells.\";\n        this.messageType = \"alert-warning\";\n      }\n    },\n    loadVillages() {\n      try {\n        if (this.form.province && this.form.district && this.form.sector && this.form.cell) {\n          this.villages = getVillagesByCell(this.form.province, this.form.district, this.form.sector, this.form.cell);\n          this.form.village = \"\";\n        }\n      } catch (error) {\n        console.error(\"Error loading villages:\", error);\n        this.message = \"Failed to load villages.\";\n        this.messageType = \"alert-warning\";\n      }\n    },\n    async loadCategoryTypes() {\n      try {\n        console.log(\"Loading category types from:\", `${globalVariable}/category-types`);\n        const res = await axios.get(`${globalVariable}/category-types`);\n        this.categoryTypes = res.data;\n        console.log(\"Category types loaded:\", this.categoryTypes);\n      } catch (error) {\n        console.error(\"Error loading category types:\", error);\n        this.handleError(error, \"Failed to load category types.\");\n      }\n    },\n    async loadCategories() {\n      if (!this.selectedCategoryType) return;\n      try {\n        console.log(\"Loading categories for type:\", this.selectedCategoryType);\n        const res = await axios.get(`${globalVariable}/categories/${this.selectedCategoryType}`);\n        this.categories = res.data;\n        console.log(\"Categories loaded:\", this.categories);\n      } catch (err) {\n        console.error(\"Failed to load categories:\", err);\n        this.message = \"Failed to load categories.\";\n        this.messageType = \"alert-warning\";\n      }\n    },\n    async loadRoleId() {\n      try {\n        const token = localStorage.getItem(\"agentToken\");\n        if (!token) {\n          console.error(\"No token found in localStorage\");\n          this.message = \"Authentication token not found. Please log in again.\";\n          this.messageType = \"alert-danger\";\n          return;\n        }\n        console.log(\"Loading role ID...\");\n        const res = await axios.get(`${globalVariable}/admin/role/job_seekers`, {\n          headers: {\n            Authorization: `Bearer ${token}`\n          }\n        });\n        console.log(\"API role_id response:\", res.data);\n        this.form.role_id = res.data.role_id || 1;\n        console.log(\"Role ID set to:\", this.form.role_id);\n      } catch (err) {\n        console.error(\"Failed to fetch role_id:\", err);\n        this.form.role_id = 1;\n        this.message = \"Could not load role ID, using default.\";\n        this.messageType = \"alert-warning\";\n      }\n    },\n    handleFileChange(type, event) {\n      const file = event.target.files[0];\n      if (file) {\n        console.log(`File selected for ${type}:`, file.name, file.size, 'bytes');\n\n        // Check file size (10MB limit)\n        if (file.size > 10 * 1024 * 1024) {\n          this.message = `File ${file.name} is too large. Maximum size is 10MB.`;\n          this.messageType = \"alert-danger\";\n          return;\n        }\n        if (type === \"id\") {\n          this.form.id = file;\n          this.form.id_url = URL.createObjectURL(file);\n        } else if (type === \"image\") {\n          this.form.image = file;\n          this.form.image_url = URL.createObjectURL(file);\n          this.form.picture = this.form.image_url;\n        } else if (type === \"cv\") {\n          this.form.cv = file;\n          this.form.cv_url = URL.createObjectURL(file);\n        }\n      }\n    },\n    async getUserIdFromEmail() {\n      const token = localStorage.getItem(\"agentToken\");\n      if (!token) return;\n      try {\n        const payload = JSON.parse(atob(token.split(\".\")[1]));\n        if (!this.userEmail) {\n          this.userEmail = payload.email;\n        }\n        const res = await fetch(`${globalVariable}/get_user_id_by_email/${this.userEmail}`, {\n          headers: {\n            Authorization: `Bearer ${token}`\n          }\n        });\n        const data = await res.json();\n        if (res.ok) {\n          this.userId = data.users_id;\n        } else {\n          this.message = data.message || \"Unable to get user ID.\";\n        }\n      } catch (err) {\n        console.error(\"Error getting users_id:\", err);\n      }\n    },\n    handleError(error, defaultMessage) {\n      console.error(\"API Error:\", error);\n      if (error.response) {\n        console.error(\"Response data:\", error.response.data);\n        console.error(\"Response status:\", error.response.status);\n        this.message = error.response.data.message || error.response.data.error || defaultMessage;\n      } else if (error.request) {\n        console.error(\"No response received:\", error.request);\n        this.message = \"No response from server. Please check your connection.\";\n      } else {\n        console.error(\"Error setting up request:\", error.message);\n        this.message = error.message || defaultMessage;\n      }\n      this.messageType = \"alert-danger\";\n    },\n    validateForm() {\n      const requiredFields = ['role_id', 'email', 'first_name', 'last_name', 'gender', 'password', 'fathers_name', 'mothers_name', 'telephone', 'province', 'district', 'sector', 'cell', 'village', 'bio', 'salary', 'date_of_birth', 'disability', 'categories_id'];\n      const missingFields = [];\n      for (const field of requiredFields) {\n        if (!this.form[field] || this.form[field] === '') {\n          missingFields.push(field);\n        }\n      }\n      if (missingFields.length > 0) {\n        this.message = `Missing required fields: ${missingFields.join(', ')}`;\n        this.messageType = \"alert-danger\";\n        return false;\n      }\n\n      // Validate email format\n      const emailRegex = /^[^\\s@]+@[^\\s@]+\\.[^\\s@]+$/;\n      if (!emailRegex.test(this.form.email)) {\n        this.message = \"Please enter a valid email address\";\n        this.messageType = \"alert-danger\";\n        return false;\n      }\n      return true;\n    },\n    async handleSubmit() {\n      if (this.isSubmitting) return;\n      this.isSubmitting = true;\n      this.message = \"\";\n      try {\n        if (!this.validateForm()) {\n          return;\n        }\n        if (!this.form.role_id) {\n          await this.loadRoleId();\n        }\n        console.log(\"Form data before submit:\", {\n          ...this.form,\n          id: this.form.id ? this.form.id.name : null,\n          image: this.form.image ? this.form.image.name : null,\n          cv: this.form.cv ? this.form.cv.name : null\n        });\n        const formData = new FormData();\n        formData.append(\"role_id\", this.form.role_id);\n        formData.append(\"email\", this.form.email);\n        formData.append(\"first_name\", this.form.first_name);\n        formData.append(\"last_name\", this.form.last_name);\n        formData.append(\"gender\", this.form.gender);\n        formData.append(\"password\", this.form.password);\n        formData.append(\"full_name\", `${this.form.first_name} ${this.form.last_name}`);\n        formData.append(\"verifiedEmail\", this.form.verifiedEmail);\n        formData.append(\"token\", this.form.token || \"\");\n        formData.append(\"verification_code\", this.form.verification_code || \"\");\n        formData.append(\"fathers_name\", this.form.fathers_name);\n        formData.append(\"mothers_name\", this.form.mothers_name);\n        formData.append(\"telephone\", this.form.telephone);\n        formData.append(\"province\", this.form.province);\n        formData.append(\"district\", this.form.district);\n        formData.append(\"sector\", this.form.sector);\n        formData.append(\"cell\", this.form.cell);\n        formData.append(\"village\", this.form.village);\n        formData.append(\"bio\", this.form.bio);\n        formData.append(\"salary\", this.form.salary);\n        formData.append(\"date_of_birth\", this.form.date_of_birth);\n        formData.append(\"disability\", this.form.disability);\n        formData.append(\"categories_id\", this.form.categories_id);\n        formData.append(\"created_at\", this.form.created_at);\n        formData.append(\"created_by\", this.form.created_by);\n        formData.append(\"is_editable\", this.form.is_editable);\n        if (this.form.image) {\n          formData.append(\"image\", this.form.image);\n        }\n        if (this.form.id) {\n          formData.append(\"id\", this.form.id);\n        }\n        if (this.form.cv) {\n          formData.append(\"cv\", this.form.cv);\n        }\n        console.log(\"FormData contents:\");\n        for (let pair of formData.entries()) {\n          console.log(pair[0] + ': ' + pair[1]);\n        }\n        const token = localStorage.getItem(\"agentToken\");\n        if (!token) {\n          this.message = \"Authentication token not found. Please log in again.\";\n          this.messageType = \"alert-danger\";\n          return;\n        }\n        console.log(\"Submitting to:\", `${globalVariable}/admin/add_job_seekers`);\n        const res = await axios.post(`${globalVariable}/admin/add_job_seekers`, formData, {\n          headers: {\n            \"Content-Type\": \"multipart/form-data\",\n            Authorization: `Bearer ${token}`\n          }\n        });\n        console.log(\"Success response:\", res.data);\n        this.$router.push('/agent/view-seekers');\n        this.messageType = \"alert-success\";\n        this.resetForm();\n      } catch (error) {\n        this.handleError(error, \"Failed to save job seeker.\");\n      } finally {\n        this.isSubmitting = false;\n      }\n    },\n    resetForm() {\n      for (const key in this.form) {\n        if (key !== \"role_id\") {\n          if (typeof this.form[key] === 'string') {\n            this.form[key] = \"\";\n          } else if (this.form[key] === null || this.form[key] === undefined) {\n            this.form[key] = null;\n          }\n        }\n      }\n      this.form.id = null;\n      this.form.image = null;\n      this.form.cv = null;\n      this.form.id_url = \"\";\n      this.form.image_url = \"\";\n      this.form.cv_url = \"\";\n      this.selectedCategoryType = \"\";\n      this.categories = [];\n\n      // Reset geographic data\n      this.districts = [];\n      this.sectors = [];\n      this.cells = [];\n      this.villages = [];\n      this.form.job_seeker_id = \"js-\" + Date.now();\n      this.form.created_at = new Date().toISOString().slice(0, 19).replace(\"T\", \" \");\n    }\n  }\n};","map":{"version":3,"names":["axios","IndexComponent","globalVariable","getProvinces","getDistrictsByProvince","getSectorsByDistrict","getCellsBySector","getVillagesByCell","components","data","userEmail","userId","message","messageType","categoryTypes","categories","selectedCategoryType","provinces","districts","sectors","cells","villages","isSubmitting","form","email","first_name","last_name","gender","password","fathers_name","mothers_name","telephone","province","district","sector","cell","village","date_of_birth","bio","salary","disability","categories_id","role_id","picture","verifiedEmail","token","verification_code","job_seeker_id","Date","now","created_at","toISOString","slice","replace","created_by","is_editable","id","image","cv","id_url","image_url","cv_url","personalFields","label","model","type","mounted","loadProvinces","loadCategoryTypes","loadRoleId","localStorage","getItem","getUserIdFromEmail","methods","error","console","loadDistricts","loadSectors","loadCells","loadVillages","log","res","get","handleError","loadCategories","err","headers","Authorization","handleFileChange","event","file","target","files","name","size","URL","createObjectURL","payload","JSON","parse","atob","split","fetch","json","ok","users_id","defaultMessage","response","status","request","validateForm","requiredFields","missingFields","field","push","length","join","emailRegex","test","handleSubmit","formData","FormData","append","pair","entries","post","$router","resetForm","key","undefined"],"sources":["/Users/gentil/Desktop/Kozi-ai-agent/src/views/agent/RegisterSeeker.vue"],"sourcesContent":["<template>\n  <IndexComponent />\n  <div\n    class=\"page-wrapper\"\n    id=\"main-wrapper\"\n    data-layout=\"vertical\"\n    data-navbarbg=\"skin6\"\n    data-sidebartype=\"full\"\n  >\n    <div class=\"body-wrapper\">\n      <h5 class=\"card-title fw-semibold mb-4\">Register New seeker</h5>\n      <form @submit.prevent=\"handleSubmit\" class=\"mx-4\">\n        <div v-if=\"message\" :class=\"['alert', messageType]\">{{ message }}</div>\n\n        <div class=\"form-group row\">\n          <div\n            class=\"col-md-6\"\n            v-for=\"(field, index) in personalFields\"\n            :key=\"index\"\n          >\n            <label :for=\"field.model\" class=\"form-label\">{{ field.label }}</label>\n            <input\n              :type=\"field.type\"\n              v-model=\"form[field.model]\"\n              class=\"form-control\"\n              :id=\"field.model\"\n              required\n            />\n          </div>\n\n          <div class=\"col-md-6\">\n            <label class=\"form-label\">Gender</label>\n            <select v-model=\"form.gender\" class=\"form-control\" style=\"height: 48px; padding-top: 8px; padding-bottom: 8px;\" required>\n              <option disabled value=\"\">Select Gender</option>\n              <option value=\"Male\">Male</option>\n              <option value=\"Female\">Female</option>\n              <option value=\"Other\">Other</option>\n            </select>\n          </div>\n\n          <div class=\"col-md-6\">\n            <label class=\"form-label\">Disability</label>\n            <select v-model=\"form.disability\" class=\"form-control\" style=\"height: 48px; padding-top: 8px; padding-bottom: 8px;\" required>\n              <option disabled value=\"\">Select Disability</option>\n              <option value=\"None\">None</option>\n              <option value=\"Visual Impairment\">Visual Impairment</option>\n              <option value=\"Hearing Impairment\">Hearing Impairment</option>\n              <option value=\"Physical Disability\">Physical Disability</option>\n              <option value=\"Intellectual Disability\">Intellectual Disability</option>\n              <option value=\"Mental Health Condition\">Mental Health Condition</option>\n              <option value=\"Learning Disability\">Learning Disability</option>\n              <option value=\"Speech and Language Disorder\">Speech and Language Disorder</option>\n              <option value=\"Other\">Other</option>\n            </select>\n          </div>\n\n          <div class=\"col-md-6\">\n            <label class=\"form-label\">Expected Salary</label>\n            <select v-model=\"form.salary\" class=\"form-control\" style=\"height: 48px; padding-top: 8px; padding-bottom: 8px;\" required>\n              <option disabled value=\"\">Select Salary</option>\n              <option>35,000 Frw - 50,000 Frw</option>\n              <option>51,000 Frw - 80,000 Frw</option>\n              <option>81,000 Frw - 100,000 Frw</option>\n              <option>101,000 Frw - 150,000 Frw</option>\n              <option>150,001+ Frw</option>\n            </select>\n          </div>\n\n          <!-- Rwanda Geographic Structure Dropdowns -->\n          <div class=\"col-md-6\">\n            <label class=\"form-label\">Province</label>\n            <select \n              v-model=\"form.province\" \n              @change=\"loadDistricts\" \n              class=\"form-control\" \n              required style=\"height: 48px; padding-top: 8px; padding-bottom: 8px;\"\n            >\n              <option disabled value=\"\">Select Province</option>\n              <option v-for=\"province in provinces\" :key=\"province\" :value=\"province\">\n                {{ province }}\n              </option>\n            </select>\n          </div>\n\n          <div class=\"col-md-6\">\n            <label class=\"form-label\">District</label>\n            <select \n              v-model=\"form.district\" \n              @change=\"loadSectors\" \n              class=\"form-control\" \n              required\n              :disabled=\"!form.province\" style=\"height: 48px; padding-top: 8px; padding-bottom: 8px;\"\n            >\n              <option disabled value=\"\">Select District</option>\n              <option v-for=\"district in districts\" :key=\"district\" :value=\"district\">\n                {{ district }}\n              </option>\n            </select>\n          </div>\n\n          <div class=\"col-md-6\">\n            <label class=\"form-label\">Sector</label>\n            <select \n              v-model=\"form.sector\" \n              @change=\"loadCells\" \n              class=\"form-control\" \n              required\n              :disabled=\"!form.district\" style=\"height: 48px; padding-top: 8px; padding-bottom: 8px;\"\n            >\n              <option disabled value=\"\">Select Sector</option>\n              <option v-for=\"sector in sectors\" :key=\"sector\" :value=\"sector\">\n                {{ sector }}\n              </option>\n            </select>\n          </div>\n\n          <div class=\"col-md-6\">\n            <label class=\"form-label\">Cell</label>\n            <select \n              v-model=\"form.cell\" \n              @change=\"loadVillages\" \n              class=\"form-control\" \n              required\n              :disabled=\"!form.sector\" style=\"height: 48px; padding-top: 8px; padding-bottom: 8px;\"\n            >\n              <option disabled value=\"\">Select Cell</option>\n              <option v-for=\"cell in cells\" :key=\"cell\" :value=\"cell\">\n                {{ cell }}\n              </option>\n            </select>\n          </div>\n\n          <div class=\"col-md-6\">\n            <label class=\"form-label\">Village</label>\n            <select \n              v-model=\"form.village\" \n              class=\"form-control\" \n              required\n              :disabled=\"!form.cell\" style=\"height: 48px; padding-top: 8px; padding-bottom: 8px;\"\n            >\n              <option disabled value=\"\">Select Village</option>\n              <option v-for=\"village in villages\" :key=\"village\" :value=\"village\">\n                {{ village }}\n              </option>\n            </select>\n          </div>\n          \n          <div class=\"col-md-6\">\n            <label class=\"form-label\">Category Type</label>\n            <select\n              v-model=\"selectedCategoryType\"\n              @change=\"loadCategories\"\n              class=\"form-control\"\n              required style=\"height: 48px; padding-top: 8px; padding-bottom: 8px;\"\n            >\n              <option disabled value=\"\">Select Category Type</option>\n              <option v-for=\"type in categoryTypes\" :key=\"type.id\" :value=\"type.id\">\n                {{ type.name }}\n              </option>\n            </select>\n          </div>\n\n          <div class=\"col-md-6\">\n            <label class=\"form-label\">Category</label>\n            <select v-model=\"form.categories_id\" class=\"form-control\" required style=\"height: 48px; padding-top: 8px; padding-bottom: 8px;\">\n              <option disabled value=\"\">Select Category</option>\n              <option v-for=\"cat in categories\" :key=\"cat.id\" :value=\"cat.id\">\n                {{ cat.name }}\n              </option>\n            </select>\n          </div>\n\n          <!-- File Uploads -->\n          <div class=\"col-md-6\">\n            <label class=\"form-label\">Upload ID Card</label>\n            <input \n              type=\"file\" \n              @change=\"handleFileChange('id', $event)\" \n              class=\"form-control\"\n              accept=\".pdf,.jpg,.jpeg,.png\" required\n            />\n            <div v-if=\"form.id_url\" class=\"mt-2\">\n              <a :href=\"form.id_url\" target=\"_blank\" class=\"btn btn-outline-primary btn-sm\">View Current ID</a>\n            </div>\n          </div>\n\n          <div class=\"col-md-6\">\n            <label class=\"form-label\">Upload Profile Image</label>\n            <input \n              type=\"file\" \n              @change=\"handleFileChange('image', $event)\" \n              class=\"form-control\"\n              accept=\"image/*\" required\n            />\n            <div v-if=\"form.image_url\" class=\"mt-2\">\n              <img :src=\"form.image_url\" alt=\"Profile\" class=\"img-thumbnail\" style=\"max-height: 150px;\" />\n            </div>\n          </div>\n\n          <div class=\"col-md-6\">\n            <label class=\"form-label\">Upload CV</label>\n            <input \n              type=\"file\" \n              @change=\"handleFileChange('cv', $event)\" \n              class=\"form-control\"\n              accept=\".pdf,.doc,.docx\"\n            />\n            <div v-if=\"form.cv_url\" class=\"mt-2\">\n              <a :href=\"form.cv_url\" target=\"_blank\" class=\"btn btn-outline-secondary btn-sm\">View Current CV</a>\n            </div>\n          </div>\n\n          <div class=\"col-md-12\">\n            <label class=\"form-label\">Skills and capabilities</label>\n            <textarea v-model=\"form.bio\" class=\"form-control\" style=\" height: 100px;\" required></textarea>\n          </div>\n        </div>\n\n        <div class=\"d-flex gap-2 mt-3 mb-5\">\n          <button type=\"submit\" class=\"btn btn-primary\" :disabled=\"isSubmitting\">\n            {{ isSubmitting ? 'Saving...' : 'Add User' }}\n          </button>\n        </div>\n      </form>\n    </div>\n  </div>\n</template>\n\n<script>\nimport axios from \"axios\";\nimport IndexComponent from \"./IndexComponent.vue\";\nimport { globalVariable } from \"@/global\";\nimport {\n  getProvinces,\n  getDistrictsByProvince,\n  getSectorsByDistrict,\n  getCellsBySector,\n  getVillagesByCell\n} from 'rwanda-geo-structure';\n\nexport default {\n  components: { IndexComponent },\n  data() {\n    return {\n      userEmail: \"\",\n      userId: \"\",\n      message: \"\",\n      messageType: \"\",\n      categoryTypes: [],\n      categories: [],\n      selectedCategoryType: \"\",\n      \n      // Rwanda geographic data\n      provinces: [],\n      districts: [],\n      sectors: [],\n      cells: [],\n      villages: [],\n     \n      isSubmitting: false,\n      form: {\n        email: \"\",\n        first_name: \"\",\n        last_name: \"\",\n        gender: \"\",\n        password: \"\",\n        fathers_name: \"\",\n        mothers_name: \"\",\n        telephone: \"\",\n        province: \"\",\n        district: \"\",\n        sector: \"\",\n        cell: \"\",\n        village: \"\",\n        date_of_birth: \"\",\n        bio: \"\",\n        salary: \"\",\n        disability: \"\",\n        categories_id: \"\",\n        role_id: \"\",\n        picture: \"\",\n        verifiedEmail: true,\n        token: \"\",\n        verification_code: \"\",\n        job_seeker_id: \"js-\" + Date.now(),\n        created_at: new Date().toISOString().slice(0, 19).replace(\"T\", \" \"),\n        created_by: \"\", \n        is_editable: true,\n        id: null,\n        image: null,\n        cv: null,\n        id_url: \"\",\n        image_url: \"\",\n        cv_url: \"\",\n      },\n      personalFields: [\n        { label: \"First Name\", model: \"first_name\", type: \"text\" },\n        { label: \"Last Name\", model: \"last_name\", type: \"text\" },\n        { label: \"Email\", model: \"email\", type: \"email\" },\n        { label: \"Password\", model: \"password\", type: \"password\" },\n        { label: \"Father's Name\", model: \"fathers_name\", type: \"text\" },\n        { label: \"Mother's Name\", model: \"mothers_name\", type: \"text\" },\n        { label: \"Telephone\", model: \"telephone\", type: \"text\" },\n        { label: \"Date of Birth\", model: \"date_of_birth\", type: \"date\" },\n      ],\n    };\n  },\n\n  mounted() {\n    this.loadProvinces();\n    this.loadCategoryTypes();\n    this.loadRoleId();\n    this.userEmail = localStorage.getItem(\"userEmail\") || \"\";\n    this.form.created_by = this.userEmail;\n\n    if (this.userEmail) {\n      this.getUserIdFromEmail();\n    }\n  },\n\n  methods: {\n    // Rwanda geographic methods\n    loadProvinces() {\n      try {\n        this.provinces = getProvinces();\n      } catch (error) {\n        console.error(\"Error loading provinces:\", error);\n        this.message = \"Failed to load provinces.\";\n        this.messageType = \"alert-warning\";\n      }\n    },\n\n    loadDistricts() {\n      try {\n        if (this.form.province) {\n          this.districts = getDistrictsByProvince(this.form.province);\n          // Clear dependent fields\n          this.sectors = [];\n          this.cells = [];\n          this.villages = [];\n          this.form.district = \"\";\n          this.form.sector = \"\";\n          this.form.cell = \"\";\n          this.form.village = \"\";\n        }\n      } catch (error) {\n        console.error(\"Error loading districts:\", error);\n        this.message = \"Failed to load districts.\";\n        this.messageType = \"alert-warning\";\n      }\n    },\n\n    loadSectors() {\n      try {\n        if (this.form.province && this.form.district) {\n          this.sectors = getSectorsByDistrict(this.form.province, this.form.district);\n          // Clear dependent fields\n          this.cells = [];\n          this.villages = [];\n          this.form.sector = \"\";\n          this.form.cell = \"\";\n          this.form.village = \"\";\n        }\n      } catch (error) {\n        console.error(\"Error loading sectors:\", error);\n        this.message = \"Failed to load sectors.\";\n        this.messageType = \"alert-warning\";\n      }\n    },\n\n    loadCells() {\n      try {\n        if (this.form.province && this.form.district && this.form.sector) {\n          this.cells = getCellsBySector(this.form.province, this.form.district, this.form.sector);\n          // Clear dependent fields\n          this.villages = [];\n          this.form.cell = \"\";\n          this.form.village = \"\";\n        }\n      } catch (error) {\n        console.error(\"Error loading cells:\", error);\n        this.message = \"Failed to load cells.\";\n        this.messageType = \"alert-warning\";\n      }\n    },\n\n    loadVillages() {\n      try {\n        if (this.form.province && this.form.district && this.form.sector && this.form.cell) {\n          this.villages = getVillagesByCell(this.form.province, this.form.district, this.form.sector, this.form.cell);\n          this.form.village = \"\";\n        }\n      } catch (error) {\n        console.error(\"Error loading villages:\", error);\n        this.message = \"Failed to load villages.\";\n        this.messageType = \"alert-warning\";\n      }\n    },\n\n    async loadCategoryTypes() {\n      try {\n        console.log(\"Loading category types from:\", `${globalVariable}/category-types`);\n        const res = await axios.get(`${globalVariable}/category-types`);\n        this.categoryTypes = res.data;\n        console.log(\"Category types loaded:\", this.categoryTypes);\n      } catch (error) {\n        console.error(\"Error loading category types:\", error);\n        this.handleError(error, \"Failed to load category types.\");\n      }\n    },\n\n    async loadCategories() {\n      if (!this.selectedCategoryType) return;\n      try {\n        console.log(\"Loading categories for type:\", this.selectedCategoryType);\n        const res = await axios.get(`${globalVariable}/categories/${this.selectedCategoryType}`);\n        this.categories = res.data;\n        console.log(\"Categories loaded:\", this.categories);\n      } catch (err) {\n        console.error(\"Failed to load categories:\", err);\n        this.message = \"Failed to load categories.\";\n        this.messageType = \"alert-warning\";\n      }\n    },\n\n    async loadRoleId() {\n      try {\n        const token = localStorage.getItem(\"agentToken\");\n        if (!token) {\n          console.error(\"No token found in localStorage\");\n          this.message = \"Authentication token not found. Please log in again.\";\n          this.messageType = \"alert-danger\";\n          return;\n        }\n\n        console.log(\"Loading role ID...\");\n        const res = await axios.get(`${globalVariable}/admin/role/job_seekers`, {\n          headers: { Authorization: `Bearer ${token}` },\n        });\n        console.log(\"API role_id response:\", res.data);\n\n        this.form.role_id = res.data.role_id || 1;\n        console.log(\"Role ID set to:\", this.form.role_id);\n      } catch (err) {\n        console.error(\"Failed to fetch role_id:\", err);\n        this.form.role_id = 1;\n        this.message = \"Could not load role ID, using default.\";\n        this.messageType = \"alert-warning\";\n      }\n    },\n\n    handleFileChange(type, event) {\n      const file = event.target.files[0];\n      if (file) {\n        console.log(`File selected for ${type}:`, file.name, file.size, 'bytes');\n        \n        // Check file size (10MB limit)\n        if (file.size > 10 * 1024 * 1024) {\n          this.message = `File ${file.name} is too large. Maximum size is 10MB.`;\n          this.messageType = \"alert-danger\";\n          return;\n        }\n\n        if (type === \"id\") {\n          this.form.id = file;\n          this.form.id_url = URL.createObjectURL(file);\n        } else if (type === \"image\") {\n          this.form.image = file;\n          this.form.image_url = URL.createObjectURL(file);\n          this.form.picture = this.form.image_url;\n        } else if (type === \"cv\") {\n          this.form.cv = file;\n          this.form.cv_url = URL.createObjectURL(file);\n        }\n      }\n    },\n\n    async getUserIdFromEmail() {\n      const token = localStorage.getItem(\"agentToken\");\n      if (!token) return;\n      try {\n        const payload = JSON.parse(atob(token.split(\".\")[1]));\n        if (!this.userEmail) {\n          this.userEmail = payload.email;\n        }\n        const res = await fetch(`${globalVariable}/get_user_id_by_email/${this.userEmail}`, {\n          headers: { Authorization: `Bearer ${token}` },\n        });\n        const data = await res.json();\n        if (res.ok) {\n          this.userId = data.users_id;\n        } else {\n          this.message = data.message || \"Unable to get user ID.\";\n        }\n      } catch (err) {\n        console.error(\"Error getting users_id:\", err);\n      }\n    },\n\n    handleError(error, defaultMessage) {\n      console.error(\"API Error:\", error);\n      if (error.response) {\n        console.error(\"Response data:\", error.response.data);\n        console.error(\"Response status:\", error.response.status);\n        this.message = error.response.data.message || error.response.data.error || defaultMessage;\n      } else if (error.request) {\n        console.error(\"No response received:\", error.request);\n        this.message = \"No response from server. Please check your connection.\";\n      } else {\n        console.error(\"Error setting up request:\", error.message);\n        this.message = error.message || defaultMessage;\n      }\n      this.messageType = \"alert-danger\";\n    },\n\n    validateForm() {\n      const requiredFields = [\n        'role_id', 'email', 'first_name', 'last_name', 'gender', 'password',\n        'fathers_name', 'mothers_name', 'telephone', 'province', 'district',\n        'sector', 'cell', 'village', 'bio', 'salary', 'date_of_birth',\n        'disability', 'categories_id'\n      ];\n      const missingFields = [];\n\n      for (const field of requiredFields) {\n        if (!this.form[field] || this.form[field] === '') {\n          missingFields.push(field);\n        }\n      }\n\n      if (missingFields.length > 0) {\n        this.message = `Missing required fields: ${missingFields.join(', ')}`;\n        this.messageType = \"alert-danger\";\n        return false;\n      }\n\n      // Validate email format\n      const emailRegex = /^[^\\s@]+@[^\\s@]+\\.[^\\s@]+$/;\n      if (!emailRegex.test(this.form.email)) {\n        this.message = \"Please enter a valid email address\";\n        this.messageType = \"alert-danger\";\n        return false;\n      }\n\n      return true;\n    },\n\n    async handleSubmit() {\n      if (this.isSubmitting) return;\n      \n      this.isSubmitting = true;\n      this.message = \"\";\n\n      try {\n        if (!this.validateForm()) {\n          return;\n        }\n\n        if (!this.form.role_id) {\n          await this.loadRoleId();\n        }\n\n        console.log(\"Form data before submit:\", {\n          ...this.form,\n          id: this.form.id ? this.form.id.name : null,\n          image: this.form.image ? this.form.image.name : null,\n          cv: this.form.cv ? this.form.cv.name : null\n        });\n\n        const formData = new FormData();\n\n        formData.append(\"role_id\", this.form.role_id);\n        formData.append(\"email\", this.form.email);\n        formData.append(\"first_name\", this.form.first_name);\n        formData.append(\"last_name\", this.form.last_name);\n        formData.append(\"gender\", this.form.gender);\n        formData.append(\"password\", this.form.password);\n        formData.append(\"full_name\", `${this.form.first_name} ${this.form.last_name}`);\n        formData.append(\"verifiedEmail\", this.form.verifiedEmail);\n        formData.append(\"token\", this.form.token || \"\");\n        formData.append(\"verification_code\", this.form.verification_code || \"\");\n        formData.append(\"fathers_name\", this.form.fathers_name);\n        formData.append(\"mothers_name\", this.form.mothers_name);\n        formData.append(\"telephone\", this.form.telephone);\n        formData.append(\"province\", this.form.province);\n        formData.append(\"district\", this.form.district);\n        formData.append(\"sector\", this.form.sector);\n        formData.append(\"cell\", this.form.cell);\n        formData.append(\"village\", this.form.village);\n        formData.append(\"bio\", this.form.bio);\n        formData.append(\"salary\", this.form.salary);\n        formData.append(\"date_of_birth\", this.form.date_of_birth);\n        formData.append(\"disability\", this.form.disability);\n        formData.append(\"categories_id\", this.form.categories_id);\n        formData.append(\"created_at\", this.form.created_at);\n        formData.append(\"created_by\", this.form.created_by);\n        formData.append(\"is_editable\", this.form.is_editable);\n\n        if (this.form.image) {\n          formData.append(\"image\", this.form.image);\n        }\n        if (this.form.id) {\n          formData.append(\"id\", this.form.id);\n        }\n        if (this.form.cv) {\n          formData.append(\"cv\", this.form.cv);\n        }\n\n        console.log(\"FormData contents:\");\n        for (let pair of formData.entries()) {\n          console.log(pair[0] + ': ' + pair[1]);\n        }\n\n        const token = localStorage.getItem(\"agentToken\");\n        if (!token) {\n          this.message = \"Authentication token not found. Please log in again.\";\n          this.messageType = \"alert-danger\";\n          return;\n        }\n\n        console.log(\"Submitting to:\", `${globalVariable}/admin/add_job_seekers`);\n        const res = await axios.post(`${globalVariable}/admin/add_job_seekers`, formData, {\n          headers: {\n            \"Content-Type\": \"multipart/form-data\",\n            Authorization: `Bearer ${token}`,\n          },\n        });\n\n        console.log(\"Success response:\", res.data);\n        \n        this.$router.push('/agent/view-seekers');\n        this.messageType = \"alert-success\";\n        this.resetForm();\n      } catch (error) {\n        this.handleError(error, \"Failed to save job seeker.\");\n      } finally {\n        this.isSubmitting = false;\n      }\n    },\n\n    resetForm() {\n      for (const key in this.form) {\n        if (key !== \"role_id\") {\n          if (typeof this.form[key] === 'string') {\n            this.form[key] = \"\";\n          } else if (this.form[key] === null || this.form[key] === undefined) {\n            this.form[key] = null;\n          }\n        }\n      }\n      this.form.id = null;\n      this.form.image = null;\n      this.form.cv = null;\n      this.form.id_url = \"\";\n      this.form.image_url = \"\";\n      this.form.cv_url = \"\";\n      this.selectedCategoryType = \"\";\n      this.categories = [];\n      \n      // Reset geographic data\n      this.districts = [];\n      this.sectors = [];\n      this.cells = [];\n      this.villages = [];\n      \n      this.form.job_seeker_id = \"js-\" + Date.now();\n      this.form.created_at = new Date().toISOString().slice(0, 19).replace(\"T\", \" \");\n    },\n  },\n};\n</script>\n\n<style scoped>\n    .modal-overlay {\n       position: fixed;\n        top: 0;\n        left: 0;\n        width: 100%;\n        height: 100%;\n        background: rgba(0, 0, 0, 0.5);\n        display: flex;\n        justify-content: center;\n        align-items: center;\n        z-index: 1000;\n      }\n      \n      /* Modal content styling */\n      .modal-content {\n        background-color: white;\n        padding: 20px;\n        border-radius: 8px;\n        text-align: center;\n        width: 300px;\n      }\n    \n      .container-fluid {\n        max-width: 800px;\n        margin: auto;\n        padding: 20px;\n        background-color: #ffffff;\n        border-radius: 8px;\n        box-shadow: 0 8px 30px rgba(0, 0, 0, 0.2);\n      }\n      \n      h5 {\n        color: #333;\n        margin-bottom: 20px;\n      }\n      .custom-select {\n        width: 100%;\n        padding: 15px;\n        height: 50px;\n        border: 1px solid #ccc;\n        border-radius: 5px;\n        box-sizing: border-box;\n        transition: border-color 0.3s, box-shadow 0.3s;\n        font-size: 16px;\n  \n      }\n      .form-control {\n        width: 100%;\n        padding: 15px;\n        height: 50px;\n        border: 1px solid #ccc;\n        border-radius: 5px;\n        box-sizing: border-box;\n        transition: border-color 0.3s, box-shadow 0.3s;\n        font-size: 16px;\n      }\n      \n      .form-control:focus {\n        border-color: #E960A6;\n        box-shadow: 0 0 5px rgba(0, 123, 255, 0.5);\n        outline: none;\n      }\n      \n      .form-label {\n        font-weight: bold;\n        margin-bottom: 5px;\n        display: block;\n      }\n      \n      .btn-primary {\n        background-color: #E960A6;\n        color: white;\n      \n      }\n      \n      .btn-primary:hover {\n        background-color: #E960A6;\n        color: teal;\n      }\n      \n      .form-group {\n        margin-bottom: 15px;\n      }\n      \n      </style>"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}