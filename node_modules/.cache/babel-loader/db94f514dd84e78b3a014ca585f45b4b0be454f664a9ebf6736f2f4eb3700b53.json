{"ast":null,"code":"import IndexComponent from \"./IndexComponent.vue\";\nimport { globalVariable } from \"@/global\";\nexport default {\n  name: \"WelcomeComponent\",\n  components: {\n    IndexComponent\n  },\n  data() {\n    return {\n      jobSeekers: [],\n      message: \"\",\n      messageType: \"\",\n      category_id: null,\n      categoryNames: {},\n      profileImage: require(\"@/assets/img/badge.png\"),\n      uploadsUrl: `${globalVariable}/uploads/profile/`,\n      loading: false,\n      // Pagination\n      currentPage: 1,\n      perPage: 12,\n      maxVisiblePages: 5 // Maximum number of page buttons to show\n    };\n  },\n  computed: {\n    totalPages() {\n      return Math.ceil(this.jobSeekers.length / this.perPage);\n    },\n    paginatedSeekers() {\n      const start = (this.currentPage - 1) * this.perPage;\n      const end = start + this.perPage;\n      return this.jobSeekers.slice(start, end);\n    },\n    visiblePages() {\n      const total = this.totalPages;\n      const current = this.currentPage;\n      const maxVisible = this.maxVisiblePages;\n      if (total <= maxVisible) {\n        // If total pages is less than or equal to maxVisible, show all pages\n        return Array.from({\n          length: total\n        }, (_, i) => i + 1);\n      }\n\n      // Calculate the start and end page numbers\n      let start = Math.max(1, current - Math.floor(maxVisible / 2));\n      let end = Math.min(total, start + maxVisible - 1);\n\n      // Adjust start if we're near the end\n      if (end - start + 1 < maxVisible) {\n        start = Math.max(1, end - maxVisible + 1);\n      }\n      return Array.from({\n        length: end - start + 1\n      }, (_, i) => start + i);\n    }\n  },\n  methods: {\n    async FetchSeeker() {\n      this.loading = true;\n      try {\n        const token = localStorage.getItem(\"employerToken\");\n        if (!token) {\n          this.message = \"Authentication required.\";\n          this.messageType = \"alert-danger\";\n          this.loading = false;\n          return;\n        }\n        const response = await fetch(`${globalVariable}/select_user_based_on_category/${this.category_id}`, {\n          headers: {\n            Authorization: `Bearer ${token}`\n          }\n        });\n        const data = await response.json();\n        if (!response.ok) {\n          this.message = data.message || \"Failed to fetch job seekers.\";\n          this.messageType = \"alert-danger\";\n        } else {\n          this.jobSeekers = data;\n          for (const job of data) {\n            this.fetchCategoryName(job.categories_id);\n          }\n        }\n      } catch (error) {\n        console.error(\"Error fetching job seekers:\", error);\n        this.message = \"Error fetching job seekers.\";\n        this.messageType = \"alert-danger\";\n      } finally {\n        this.loading = false;\n      }\n    },\n    setDefaultImage(event) {\n      event.target.src = require(\"@/assets/img/sample.png\");\n    },\n    async fetchCategoryName(category_id) {\n      if (this.categoryNames[category_id]) return;\n      try {\n        const response = await fetch(`${globalVariable}/category_name/${category_id}`);\n        const data = await response.json();\n        if (response.ok && Array.isArray(data) && data.length > 0 && data[0].name) {\n          this.categoryNames[category_id] = data[0].name;\n        } else {\n          this.categoryNames[category_id] = \"Unknown\";\n        }\n      } catch (error) {\n        console.error(`Error fetching category name for ID ${category_id}:`, error);\n        this.categoryNames[category_id] = \"Unknown\";\n      }\n    },\n    changePage(page) {\n      if (page >= 1 && page <= this.totalPages) {\n        this.currentPage = page;\n        window.scrollTo({\n          top: 0,\n          behavior: \"smooth\"\n        });\n      }\n    }\n  },\n  mounted() {\n    this.category_id = this.$route.params.category_id;\n    this.FetchSeeker();\n    this.fetchCategoryName(this.category_id);\n  }\n};","map":{"version":3,"names":["IndexComponent","globalVariable","name","components","data","jobSeekers","message","messageType","category_id","categoryNames","profileImage","require","uploadsUrl","loading","currentPage","perPage","maxVisiblePages","computed","totalPages","Math","ceil","length","paginatedSeekers","start","end","slice","visiblePages","total","current","maxVisible","Array","from","_","i","max","floor","min","methods","FetchSeeker","token","localStorage","getItem","response","fetch","headers","Authorization","json","ok","job","fetchCategoryName","categories_id","error","console","setDefaultImage","event","target","src","isArray","changePage","page","window","scrollTo","top","behavior","mounted","$route","params"],"sources":["/Users/gentil/Desktop/Kozi-ai-agent/src/views/jobprovider/SeekersbasedonCategory.vue"],"sourcesContent":["<template>\n  <IndexComponent />\n  <div\n    class=\"page-wrapper\"\n    id=\"main-wrapper\"\n    data-layout=\"vertical\"\n    data-navbarbg=\"skin6\"\n    data-sidebartype=\"full\"\n    data-sidebar-description=\"fixed\"\n    data-header-description=\"fixed\"\n  >\n    <div class=\"body-wrapper\" style=\"margin-top: -4rem;\">\n      <div class=\"container-fluid\">\n        <div class=\"row\">\n          <h3 style=\"text-align:center;color:#5F9EA0; font-family:'Michroma', sans-serif;\">\n            <p style=\"text-transform: uppercase;\">\n              ALL WORKERS IN {{ categoryNames[category_id] || 'Loading category...' }}\n            </p>\n          </h3>\n        </div>\n\n        <!-- Loader -->\n        <div v-if=\"loading\" class=\"text-center my-5\">\n          <div class=\"spinner-border\" role=\"status\" style=\"width: 4rem; height: 4rem; color: #EA60A7;\">\n            <span class=\"visually-hidden\">Loading...</span>\n          </div>\n        </div>\n\n        <!-- Workers Grid -->\n        <div v-else class=\"row\">\n          <div\n            class=\"col-md-4 mb-4\"\n            v-for=\"job in paginatedSeekers\"\n            :key=\"job.users_id\"\n          >\n            <router-link :to=\"`/employer/seekers/${job.users_id}`\">\n              <div class=\"card h-100 text-center p-3\">\n                <img\n                  :src=\"uploadsUrl + job.image\"\n                  @error=\"setDefaultImage\"\n                  alt=\"Profile\"\n                  class=\"card-img-top mx-auto\"\n                  style=\"width: 250px; height: 250px; object-fit: cover;\"\n                />\n                <div class=\"card-body\">\n                  <b style=\"font-size: 20px;\">{{ job.first_name }} {{ job.last_name }}</b>\n                  <img\n                    style=\"margin-left: 5px;\"\n                    v-if=\"job.verification_badge === 1\"\n                    :src=\"profileImage\"\n                    width=\"25\"\n                    height=\"25\"\n                    class=\"rounded-circle\"\n                    alt=\"User profile\"\n                  /><br>\n                  <template v-if=\"job.verification_badge === 1\">\n                    <i class=\"fa-solid fa-star\" style=\"color: gold;\"></i>\n                    <i class=\"fa-solid fa-star\" style=\"color: gold;\"></i>\n                    <i class=\"fa-solid fa-star\" style=\"color: gold;\"></i>\n                    <i class=\"fa-solid fa-star\" style=\"color: gold;\"></i>\n                    <i class=\"fa-solid fa-star\" style=\"color: gold;\"></i>\n                  </template>\n                  <template v-else>\n                    <i class=\"fa-solid fa-star\" style=\"color: gold;\"></i>\n                    <i class=\"fa-solid fa-star\" style=\"color: gold;\"></i>\n                    <i class=\"fa-solid fa-star\"></i>\n                    <i class=\"fa-solid fa-star\"></i>\n                    <i class=\"fa-solid fa-star\"></i>\n                  </template>\n                </div>\n              </div>\n            </router-link>\n          </div>\n        </div>\n\n        <!-- Pagination -->\n        <div v-if=\"totalPages > 1\" class=\"d-flex justify-content-center mt-4\">\n          <nav>\n            <ul class=\"pagination\">\n              <!-- Previous Button -->\n              <li class=\"page-item\" :class=\"{ disabled: currentPage === 1 }\">\n                <button \n                  class=\"page-link\" \n                  @click=\"changePage(currentPage - 1)\"\n                  :disabled=\"currentPage === 1\"\n                >\n                  Previous\n                </button>\n              </li>\n\n              <!-- Page Numbers (Limited to 5 pages) -->\n              <li\n                v-for=\"page in visiblePages\"\n                :key=\"page\"\n                class=\"page-item\"\n                :class=\"{ active: currentPage === page }\"\n              >\n                <button class=\"page-link\" @click=\"changePage(page)\">{{ page }}</button>\n              </li>\n\n              <!-- Next Button -->\n              <li class=\"page-item\" :class=\"{ disabled: currentPage === totalPages }\">\n                <button \n                  class=\"page-link\" \n                  @click=\"changePage(currentPage + 1)\"\n                  :disabled=\"currentPage === totalPages\"\n                >\n                  Next\n                </button>\n              </li>\n            </ul>\n          </nav>\n        </div>\n\n      </div>\n    </div>\n  </div>\n</template>\n\n<script>\nimport IndexComponent from \"./IndexComponent.vue\";\nimport { globalVariable } from \"@/global\";\n\nexport default {\n  name: \"WelcomeComponent\",\n  components: { IndexComponent },\n  data() {\n    return {\n      jobSeekers: [],\n      message: \"\",\n      messageType: \"\",\n      category_id: null,\n      categoryNames: {},\n      profileImage: require(\"@/assets/img/badge.png\"),\n      uploadsUrl: `${globalVariable}/uploads/profile/`,\n      loading: false,\n\n      // Pagination\n      currentPage: 1,\n      perPage: 12,\n      maxVisiblePages: 5, // Maximum number of page buttons to show\n    };\n  },\n  computed: {\n    totalPages() {\n      return Math.ceil(this.jobSeekers.length / this.perPage);\n    },\n    paginatedSeekers() {\n      const start = (this.currentPage - 1) * this.perPage;\n      const end = start + this.perPage;\n      return this.jobSeekers.slice(start, end);\n    },\n    visiblePages() {\n      const total = this.totalPages;\n      const current = this.currentPage;\n      const maxVisible = this.maxVisiblePages;\n      \n      if (total <= maxVisible) {\n        // If total pages is less than or equal to maxVisible, show all pages\n        return Array.from({ length: total }, (_, i) => i + 1);\n      }\n      \n      // Calculate the start and end page numbers\n      let start = Math.max(1, current - Math.floor(maxVisible / 2));\n      let end = Math.min(total, start + maxVisible - 1);\n      \n      // Adjust start if we're near the end\n      if (end - start + 1 < maxVisible) {\n        start = Math.max(1, end - maxVisible + 1);\n      }\n      \n      return Array.from({ length: end - start + 1 }, (_, i) => start + i);\n    },\n  },\n  methods: {\n    async FetchSeeker() {\n      this.loading = true;\n      try {\n        const token = localStorage.getItem(\"employerToken\");\n        if (!token) {\n          this.message = \"Authentication required.\";\n          this.messageType = \"alert-danger\";\n          this.loading = false;\n          return;\n        }\n\n        const response = await fetch(\n          `${globalVariable}/select_user_based_on_category/${this.category_id}`,\n          {\n            headers: { Authorization: `Bearer ${token}` },\n          }\n        );\n\n        const data = await response.json();\n        if (!response.ok) {\n          this.message = data.message || \"Failed to fetch job seekers.\";\n          this.messageType = \"alert-danger\";\n        } else {\n          this.jobSeekers = data;\n          for (const job of data) {\n            this.fetchCategoryName(job.categories_id);\n          }\n        }\n      } catch (error) {\n        console.error(\"Error fetching job seekers:\", error);\n        this.message = \"Error fetching job seekers.\";\n        this.messageType = \"alert-danger\";\n      } finally {\n        this.loading = false;\n      }\n    },\n    setDefaultImage(event) {\n      event.target.src = require(\"@/assets/img/sample.png\");\n    },\n    async fetchCategoryName(category_id) {\n      if (this.categoryNames[category_id]) return;\n\n      try {\n        const response = await fetch(`${globalVariable}/category_name/${category_id}`);\n        const data = await response.json();\n\n        if (response.ok && Array.isArray(data) && data.length > 0 && data[0].name) {\n          this.categoryNames[category_id] = data[0].name;\n        } else {\n          this.categoryNames[category_id] = \"Unknown\";\n        }\n      } catch (error) {\n        console.error(`Error fetching category name for ID ${category_id}:`, error);\n        this.categoryNames[category_id] = \"Unknown\";\n      }\n    },\n    changePage(page) {\n      if (page >= 1 && page <= this.totalPages) {\n        this.currentPage = page;\n        window.scrollTo({ top: 0, behavior: \"smooth\" });\n      }\n    },\n  },\n  mounted() {\n    this.category_id = this.$route.params.category_id;\n    this.FetchSeeker();\n    this.fetchCategoryName(this.category_id);\n  },\n};\n</script>"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}