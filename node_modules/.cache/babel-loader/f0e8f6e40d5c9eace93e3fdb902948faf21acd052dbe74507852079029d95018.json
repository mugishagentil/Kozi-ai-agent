{"ast":null,"code":"import axios from \"axios\";\nimport { globalVariable } from \"@/global\";\nimport IndexComponent from \"./IndexComponent.vue\";\n// Import your location API functions\nimport { getProvinces, getDistrictsByProvince, getSectorsByDistrict, getCellsBySector, getVillagesByCell } from 'rwanda-geo-structure';\nexport default {\n  name: \"RegisterJobProviderComponent\",\n  components: {\n    IndexComponent\n  },\n  data() {\n    return {\n      form: {\n        role_id: null,\n        email: \"\",\n        password: \"\",\n        first_name: \"\",\n        last_name: \"\",\n        country: \"\",\n        category: \"\",\n        telephone: \"\",\n        province: \"\",\n        district: \"\",\n        sector: \"\",\n        cell: \"\",\n        village: \"\",\n        gender: \"\",\n        image: null,\n        image_url: null // preview URL\n      },\n      uploadsUrl: `${globalVariable}/uploads/profile/`,\n      message: null,\n      messageType: null,\n      // Location data arrays\n      provinces: [],\n      districts: [],\n      sectors: [],\n      cells: [],\n      villages: [],\n      // Basic fields (excluding location fields)\n      basicFields: [{\n        label: \"Email\",\n        model: \"email\",\n        type: \"email\"\n      }, {\n        label: \"Password\",\n        model: \"password\",\n        type: \"password\"\n      }, {\n        label: \"First Name\",\n        model: \"first_name\",\n        type: \"text\"\n      }, {\n        label: \"Last Name\",\n        model: \"last_name\",\n        type: \"text\"\n      }, {\n        label: \"Country\",\n        model: \"country\",\n        type: \"text\"\n      }, {\n        label: \"Telephone\",\n        model: \"telephone\",\n        type: \"tel\"\n      }]\n    };\n  },\n  methods: {\n    handleFileChange(fieldName, event) {\n      const file = event.target.files[0];\n      if (file) {\n        this.form[fieldName] = file;\n        if (fieldName === 'image') {\n          this.form.image_url = URL.createObjectURL(file);\n        }\n      }\n    },\n    async handleSubmit() {\n      const formData = new FormData();\n      for (const key in this.form) {\n        if (this.form[key] !== null && key !== 'image_url') {\n          formData.append(key, this.form[key]);\n        }\n      }\n      try {\n        const response = await fetch(`${globalVariable}/admin/add_job_provider`, {\n          method: \"POST\",\n          headers: {\n            Authorization: `Bearer ${localStorage.getItem(\"adminToken\")}`\n          },\n          body: formData\n        });\n        const result = await response.json();\n        if (response.ok) {\n          this.message = result.message || \"Job provider registered successfully.\";\n          this.messageType = \"alert-success\";\n          this.resetForm();\n        } else {\n          this.message = result.message || \"Failed to register job provider.\";\n          this.messageType = \"alert-danger\";\n        }\n      } catch (error) {\n        console.error(\"Error registering job provider:\", error);\n        this.message = \"An error occurred while submitting the form.\";\n        this.messageType = \"alert-danger\";\n      }\n    },\n    resetForm() {\n      this.form = {\n        role_id: this.form.role_id,\n        email: \"\",\n        password: \"\",\n        first_name: \"\",\n        last_name: \"\",\n        country: \"\",\n        category: \"\",\n        telephone: \"\",\n        province: \"\",\n        district: \"\",\n        sector: \"\",\n        cell: \"\",\n        village: \"\",\n        gender: \"\",\n        image: null,\n        image_url: null\n      };\n      // Reset location arrays\n      this.districts = [];\n      this.sectors = [];\n      this.cells = [];\n      this.villages = [];\n    },\n    async loadRoleId() {\n      try {\n        const token = localStorage.getItem(\"adminToken\");\n        if (!token) {\n          console.error(\"No token found in localStorage\");\n          return;\n        }\n        const res = await axios.get(`${globalVariable}/admin/role/provider`, {\n          headers: {\n            Authorization: `Bearer ${token}`\n          }\n        });\n        this.form.role_id = res.data.role_id || 2;\n        console.log(\"Role ID set to:\", this.form.role_id);\n      } catch (err) {\n        console.error(\"Failed to fetch role_id:\", err);\n        this.form.role_id = 2;\n      }\n    },\n    // Location API methods\n    loadProvinces() {\n      try {\n        this.provinces = getProvinces();\n      } catch (error) {\n        console.error(\"Error loading provinces:\", error);\n        this.message = \"Failed to load provinces.\";\n        this.messageType = \"alert-warning\";\n      }\n    },\n    loadDistricts() {\n      try {\n        if (this.form.province) {\n          this.districts = getDistrictsByProvince(this.form.province);\n          // Clear dependent fields\n          this.sectors = [];\n          this.cells = [];\n          this.villages = [];\n          this.form.district = \"\";\n          this.form.sector = \"\";\n          this.form.cell = \"\";\n          this.form.village = \"\";\n        }\n      } catch (error) {\n        console.error(\"Error loading districts:\", error);\n        this.message = \"Failed to load districts.\";\n        this.messageType = \"alert-warning\";\n      }\n    },\n    loadSectors() {\n      try {\n        if (this.form.province && this.form.district) {\n          this.sectors = getSectorsByDistrict(this.form.province, this.form.district);\n          // Clear dependent fields\n          this.cells = [];\n          this.villages = [];\n          this.form.sector = \"\";\n          this.form.cell = \"\";\n          this.form.village = \"\";\n        }\n      } catch (error) {\n        console.error(\"Error loading sectors:\", error);\n        this.message = \"Failed to load sectors.\";\n        this.messageType = \"alert-warning\";\n      }\n    },\n    loadCells() {\n      try {\n        if (this.form.province && this.form.district && this.form.sector) {\n          this.cells = getCellsBySector(this.form.province, this.form.district, this.form.sector);\n          // Clear dependent fields\n          this.villages = [];\n          this.form.cell = \"\";\n          this.form.village = \"\";\n        }\n      } catch (error) {\n        console.error(\"Error loading cells:\", error);\n        this.message = \"Failed to load cells.\";\n        this.messageType = \"alert-warning\";\n      }\n    },\n    loadVillages() {\n      try {\n        if (this.form.province && this.form.district && this.form.sector && this.form.cell) {\n          this.villages = getVillagesByCell(this.form.province, this.form.district, this.form.sector, this.form.cell);\n          this.form.village = \"\";\n        }\n      } catch (error) {\n        console.error(\"Error loading villages:\", error);\n        this.message = \"Failed to load villages.\";\n        this.messageType = \"alert-warning\";\n      }\n    }\n  },\n  mounted() {\n    this.loadRoleId();\n    this.loadProvinces(); // Load provinces on component mount\n  }\n};","map":{"version":3,"names":["axios","globalVariable","IndexComponent","getProvinces","getDistrictsByProvince","getSectorsByDistrict","getCellsBySector","getVillagesByCell","name","components","data","form","role_id","email","password","first_name","last_name","country","category","telephone","province","district","sector","cell","village","gender","image","image_url","uploadsUrl","message","messageType","provinces","districts","sectors","cells","villages","basicFields","label","model","type","methods","handleFileChange","fieldName","event","file","target","files","URL","createObjectURL","handleSubmit","formData","FormData","key","append","response","fetch","method","headers","Authorization","localStorage","getItem","body","result","json","ok","resetForm","error","console","loadRoleId","token","res","get","log","err","loadProvinces","loadDistricts","loadSectors","loadCells","loadVillages","mounted"],"sources":["/Users/gentil/Desktop/Kozi-ai-agent/src/views/admin/RegisterProvider.vue"],"sourcesContent":["<template>\n  <IndexComponent />\n  <div\n    class=\"page-wrapper\"\n    id=\"main-wrapper\"\n    data-layout=\"vertical\"\n    data-navbarbg=\"skin6\"\n    data-sidebartype=\"full\"\n    data-sidebar-description=\"fixed\"\n    data-header-description=\"fixed\"\n    style=\"position: absolute; top: 0; left: 0; right: 0; bottom: 0; z-index: 1;\"\n  >\n    <div class=\"body-wrapper\" style=\"margin-top: 70px; margin-left: 270px; background: white; min-height: calc(100vh - 70px); padding: 20px; overflow-y: auto; max-height: calc(100vh - 70px);\">\n       <h5 class=\"card-title fw-semibold mb-4\" style=\"color: #E960A6;\"><i class=\"ti ti-user-plus\"></i>  Register New Job Provider</h5>\n      <form @submit.prevent=\"handleSubmit\" class=\"mx-4\" enctype=\"multipart/form-data\">\n       \n\n        <div class=\"form-group row\">\n          <div class=\"col-md-6\">\n            <label class=\"form-label\">Select Category</label>\n            <select v-model=\"form.category\" class=\"form-control\" style=\"height: 54px;\" required>\n              <option value=\"Individual\">Individual</option>\n              <option value=\"Company\">Company</option>\n            </select>\n          </div>\n\n          <!-- Basic fields excluding location fields -->\n          <div class=\"col-md-6\" v-for=\"(field, index) in basicFields\" :key=\"index\">\n            <label :for=\"field.model\" class=\"form-label\">{{ field.label }}</label>\n            <input\n              :type=\"field.type\"\n              v-model=\"form[field.model]\"\n              class=\"form-control\"\n              :id=\"field.model\"\n              required\n            />\n          </div>\n\n          <!-- Province Dropdown -->\n          <div class=\"col-md-6\">\n            <label class=\"form-label\">Province</label>\n            <select \n              v-model=\"form.province\" \n              @change=\"loadDistricts\" \n              class=\"form-control\" \n              style=\"height: 48px; padding-top: 8px; padding-bottom: 8px;\" required\n            >\n              <option value=\"\">Select Province</option>\n              <option v-for=\"province in provinces\" :key=\"province\" :value=\"province\">{{ province }}</option>\n            </select>\n          </div>\n\n          <!-- District Dropdown -->\n          <div class=\"col-md-6\">\n            <label class=\"form-label\">District</label>\n            <select \n              v-model=\"form.district\" \n              @change=\"loadSectors\" \n              class=\"form-control\" \n              style=\"height: 48px; padding-top: 8px; padding-bottom: 8px;\" required\n              :disabled=\"!form.province\"\n            >\n              <option value=\"\">Select District</option>\n              <option v-for=\"district in districts\" :key=\"district\" :value=\"district\">{{ district }}</option>\n            </select>\n          </div>\n\n          <!-- Sector Dropdown -->\n          <div class=\"col-md-6\">\n            <label class=\"form-label\">Sector</label>\n            <select \n              v-model=\"form.sector\" \n              @change=\"loadCells\" \n              class=\"form-control\" \n              style=\"height: 48px; padding-top: 8px; padding-bottom: 8px;\" required\n              :disabled=\"!form.district\"\n            >\n              <option value=\"\">Select Sector</option>\n              <option v-for=\"sector in sectors\" :key=\"sector\" :value=\"sector\">{{ sector }}</option>\n            </select>\n          </div>\n\n          <!-- Cell Dropdown -->\n          <div class=\"col-md-6\">\n            <label class=\"form-label\">Cell</label>\n            <select \n              v-model=\"form.cell\" \n              @change=\"loadVillages\" \n              class=\"form-control\" \n              style=\"height: 48px; padding-top: 8px; padding-bottom: 8px;\" required\n              :disabled=\"!form.sector\"\n            >\n              <option value=\"\">Select Cell</option>\n              <option v-for=\"cell in cells\" :key=\"cell\" :value=\"cell\">{{ cell }}</option>\n            </select>\n          </div>\n\n          <!-- Village Dropdown -->\n          <div class=\"col-md-6\">\n            <label class=\"form-label\">Village</label>\n            <select \n              v-model=\"form.village\" \n              class=\"form-control\" \n              style=\"height: 48px; padding-top: 8px; padding-bottom: 8px;\" required\n              :disabled=\"!form.cell\"\n            >\n              <option value=\"\">Select Village</option>\n              <option v-for=\"village in villages\" :key=\"village\" :value=\"village\">{{ village }}</option>\n            </select>\n          </div>\n\n          <div class=\"col-md-6\">\n            <label class=\"form-label\">Gender</label>\n            <select v-model=\"form.gender\" class=\"form-control\" style=\"height: 54px;\" required>\n              <option value=\"\">Select Gender</option>\n              <option value=\"Male\">Male</option>\n              <option value=\"Female\">Female</option>\n              <option value=\"Other\">Other</option>\n            </select>\n          </div>\n\n          <div class=\"col-md-6\">\n            <label class=\"form-label\">Upload Profile Image/Logo (optional)</label>\n            <input \n              type=\"file\" \n              @change=\"handleFileChange('image', $event)\" \n              class=\"form-control\"\n              accept=\"image/*\"\n            />\n            <div v-if=\"form.image_url\" class=\"mt-3\">\n              <img :src=\"form.image_url\" alt=\"Profile\" class=\"img-thumbnail\" style=\"max-height: 150px;\" />\n            </div>\n          </div>\n        </div>\n\n        <!-- <div class=\"mt-3 text-muted\">\n          <strong>Role ID:</strong> {{ form.role_id || 'Not loaded' }}\n        </div> -->\n         <div v-if=\"message\" :class=\"['alert', messageType]\">{{ message }}</div>\n\n        <button type=\"submit\" class=\"btn btn-primary mb-5\">Register</button>\n      </form>\n    </div>\n  </div>\n</template>\n\n<script>\nimport axios from \"axios\";\nimport { globalVariable } from \"@/global\";\nimport IndexComponent from \"./IndexComponent.vue\";\n// Import your location API functions\nimport {\n  getProvinces,\n  getDistrictsByProvince,\n  getSectorsByDistrict,\n  getCellsBySector,\n  getVillagesByCell\n} from 'rwanda-geo-structure';\n\nexport default {\n  name: \"RegisterJobProviderComponent\",\n  components: { IndexComponent },\n  data() {\n    return {\n      form: {\n        role_id: null,\n        email: \"\",\n        password: \"\",\n        first_name: \"\",\n        last_name: \"\",\n        country: \"\",\n        category: \"\",\n        telephone: \"\",\n        province: \"\",\n        district: \"\",\n        sector: \"\",\n        cell: \"\",\n        village: \"\",\n        gender: \"\",\n        image: null,\n        image_url: null, // preview URL\n      },\n      uploadsUrl: `${globalVariable}/uploads/profile/`,\n      message: null,\n      messageType: null,\n      // Location data arrays\n      provinces: [],\n      districts: [],\n      sectors: [],\n      cells: [],\n      villages: [],\n      // Basic fields (excluding location fields)\n      basicFields: [\n        { label: \"Email\", model: \"email\", type: \"email\" },\n        { label: \"Password\", model: \"password\", type: \"password\" },\n        { label: \"First Name\", model: \"first_name\", type: \"text\" },\n        { label: \"Last Name\", model: \"last_name\", type: \"text\" },\n        { label: \"Country\", model: \"country\", type: \"text\" },\n        { label: \"Telephone\", model: \"telephone\", type: \"tel\" },\n      ],\n    };\n  },\n  methods: {\n    handleFileChange(fieldName, event) {\n      const file = event.target.files[0];\n      if (file) {\n        this.form[fieldName] = file;\n        if (fieldName === 'image') {\n          this.form.image_url = URL.createObjectURL(file);\n        }\n      }\n    },\n\n    async handleSubmit() {\n      const formData = new FormData();\n      for (const key in this.form) {\n        if (this.form[key] !== null && key !== 'image_url') {\n          formData.append(key, this.form[key]);\n        }\n      }\n\n      try {\n        const response = await fetch(`${globalVariable}/admin/add_job_provider`, {\n          method: \"POST\",\n          headers: {\n            Authorization: `Bearer ${localStorage.getItem(\"adminToken\")}`,\n          },\n          body: formData,\n        });\n\n        const result = await response.json();\n        if (response.ok) {\n          this.message = result.message || \"Job provider registered successfully.\";\n          this.messageType = \"alert-success\";\n          this.resetForm();\n        } else {\n          this.message = result.message || \"Failed to register job provider.\";\n          this.messageType = \"alert-danger\";\n        }\n      } catch (error) {\n        console.error(\"Error registering job provider:\", error);\n        this.message = \"An error occurred while submitting the form.\";\n        this.messageType = \"alert-danger\";\n      }\n    },\n\n    resetForm() {\n      this.form = {\n        role_id: this.form.role_id,\n        email: \"\",\n        password: \"\",\n        first_name: \"\",\n        last_name: \"\",\n        country: \"\",\n        category: \"\",\n        telephone: \"\",\n        province: \"\",\n        district: \"\",\n        sector: \"\",\n        cell: \"\",\n        village: \"\",\n        gender: \"\",\n        image: null,\n        image_url: null,\n      };\n      // Reset location arrays\n      this.districts = [];\n      this.sectors = [];\n      this.cells = [];\n      this.villages = [];\n    },\n\n    async loadRoleId() {\n      try {\n        const token = localStorage.getItem(\"adminToken\");\n        if (!token) {\n          console.error(\"No token found in localStorage\");\n          return;\n        }\n\n        const res = await axios.get(`${globalVariable}/admin/role/provider`, {\n          headers: { Authorization: `Bearer ${token}` },\n        });\n\n        this.form.role_id = res.data.role_id || 2;\n        console.log(\"Role ID set to:\", this.form.role_id);\n      } catch (err) {\n        console.error(\"Failed to fetch role_id:\", err);\n        this.form.role_id = 2;\n      }\n    },\n\n    // Location API methods\n    loadProvinces() {\n      try {\n        this.provinces = getProvinces();\n      } catch (error) {\n        console.error(\"Error loading provinces:\", error);\n        this.message = \"Failed to load provinces.\";\n        this.messageType = \"alert-warning\";\n      }\n    },\n\n    loadDistricts() {\n      try {\n        if (this.form.province) {\n          this.districts = getDistrictsByProvince(this.form.province);\n          // Clear dependent fields\n          this.sectors = [];\n          this.cells = [];\n          this.villages = [];\n          this.form.district = \"\";\n          this.form.sector = \"\";\n          this.form.cell = \"\";\n          this.form.village = \"\";\n        }\n      } catch (error) {\n        console.error(\"Error loading districts:\", error);\n        this.message = \"Failed to load districts.\";\n        this.messageType = \"alert-warning\";\n      }\n    },\n\n    loadSectors() {\n      try {\n        if (this.form.province && this.form.district) {\n          this.sectors = getSectorsByDistrict(this.form.province, this.form.district);\n          // Clear dependent fields\n          this.cells = [];\n          this.villages = [];\n          this.form.sector = \"\";\n          this.form.cell = \"\";\n          this.form.village = \"\";\n        }\n      } catch (error) {\n        console.error(\"Error loading sectors:\", error);\n        this.message = \"Failed to load sectors.\";\n        this.messageType = \"alert-warning\";\n      }\n    },\n\n    loadCells() {\n      try {\n        if (this.form.province && this.form.district && this.form.sector) {\n          this.cells = getCellsBySector(this.form.province, this.form.district, this.form.sector);\n          // Clear dependent fields\n          this.villages = [];\n          this.form.cell = \"\";\n          this.form.village = \"\";\n        }\n      } catch (error) {\n        console.error(\"Error loading cells:\", error);\n        this.message = \"Failed to load cells.\";\n        this.messageType = \"alert-warning\";\n      }\n    },\n\n    loadVillages() {\n      try {\n        if (this.form.province && this.form.district && this.form.sector && this.form.cell) {\n          this.villages = getVillagesByCell(this.form.province, this.form.district, this.form.sector, this.form.cell);\n          this.form.village = \"\";\n        }\n      } catch (error) {\n        console.error(\"Error loading villages:\", error);\n        this.message = \"Failed to load villages.\";\n        this.messageType = \"alert-warning\";\n      }\n    },\n  },\n\n  mounted() {\n    this.loadRoleId();\n    this.loadProvinces(); // Load provinces on component mount\n  },\n};\n</script>\n      <style scoped>\n      .modal-overlay {\n         position: fixed;\n          top: 0;\n          left: 0;\n          width: 100%;\n          height: 100%;\n          background: rgba(0, 0, 0, 0.5);\n          display: flex;\n          justify-content: center;\n          align-items: center;\n          z-index: 1000;\n        }\n        \n        /* Modal content styling */\n        .modal-content {\n          background-color: white;\n          padding: 20px;\n          border-radius: 8px;\n          text-align: center;\n          width: 300px;\n        }\n      \n        .container-fluid {\n          max-width: 800px;\n          margin: auto;\n          padding: 20px;\n          background-color: #ffffff;\n          border-radius: 8px;\n          box-shadow: 0 8px 30px rgba(0, 0, 0, 0.2);\n        }\n        \n        h5 {\n          color: #333;\n          margin-bottom: 20px;\n        }\n        .custom-select {\n          width: 100%;\n          padding: 15px;\n          height: 50px;\n          border: 1px solid #ccc;\n          border-radius: 5px;\n          box-sizing: border-box;\n          transition: border-color 0.3s, box-shadow 0.3s;\n          font-size: 16px;\n    \n        }\n        .form-control {\n          width: 100%;\n          padding: 15px;\n          height: 50px;\n          border: 1px solid #ccc;\n          border-radius: 5px;\n          box-sizing: border-box;\n          transition: border-color 0.3s, box-shadow 0.3s;\n          font-size: 16px;\n        }\n        \n        .form-control:focus {\n          border-color: #E960A6;\n          box-shadow: 0 0 5px rgba(0, 123, 255, 0.5);\n          outline: none;\n        }\n        \n        .form-label {\n          font-weight: bold;\n          margin-bottom: 5px;\n          display: block;\n        }\n        \n        .btn-primary {\n          background-color: #E960A6;\n          color: white;\n        \n        }\n        \n        .btn-primary:hover {\n          background-color: #E960A6;\n          color: teal;\n        }\n        \n        .form-group {\n          margin-bottom: 15px;\n        }\n        \n        </style>\n        "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}