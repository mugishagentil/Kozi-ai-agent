{"ast":null,"code":"import { vModelText as _vModelText, createElementVNode as _createElementVNode, withDirectives as _withDirectives, openBlock as _openBlock, createElementBlock as _createElementBlock } from \"vue\";\nconst _hoisted_1 = {\n  class: \"chat-input-container\"\n};\nconst _hoisted_2 = {\n  class: \"chat-input\"\n};\nconst _hoisted_3 = [\"disabled\"];\nconst _hoisted_4 = [\"disabled\"];\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  return _openBlock(), _createElementBlock(\"div\", _hoisted_1, [_createElementVNode(\"div\", _hoisted_2, [_withDirectives(_createElementVNode(\"input\", {\n    \"onUpdate:modelValue\": _cache[0] || (_cache[0] = $event => $setup.message = $event),\n    type: \"text\",\n    placeholder: \"Ask me anything about Kozi...\",\n    disabled: $props.disabled,\n    onKeypress: _cache[1] || (_cache[1] = (...args) => $setup.handleKeyPress && $setup.handleKeyPress(...args)),\n    ref: \"inputRef\"\n  }, null, 40, _hoisted_3), [[_vModelText, $setup.message]]), _createElementVNode(\"button\", {\n    onClick: _cache[2] || (_cache[2] = (...args) => $setup.handleSend && $setup.handleSend(...args)),\n    disabled: $props.disabled || !$setup.canSend,\n    id: \"sendBtn\"\n  }, _cache[3] || (_cache[3] = [_createElementVNode(\"i\", {\n    class: \"fas fa-paper-plane\"\n  }, null, -1)]), 8, _hoisted_4)])]);\n}","map":{"version":3,"names":["class","_createElementBlock","_hoisted_1","_createElementVNode","_hoisted_2","_cache","$event","$setup","message","type","placeholder","disabled","$props","onKeypress","args","handleKeyPress","ref","_hoisted_3","onClick","handleSend","canSend","id","_hoisted_4"],"sources":["/Users/gentil/Desktop/Kozi-ai-agent/src/components/ChatInput.vue"],"sourcesContent":["<template>\n  <div class=\"chat-input-container\">\n    <div class=\"chat-input\">\n      <input\n        v-model=\"message\"\n        type=\"text\"\n        placeholder=\"Ask me anything about Kozi...\"\n        :disabled=\"disabled\"\n        @keypress=\"handleKeyPress\"\n        ref=\"inputRef\"\n      />\n      <button \n        @click=\"handleSend\"\n        :disabled=\"disabled || !canSend\"\n        id=\"sendBtn\"\n      >\n        <i class=\"fas fa-paper-plane\"></i>\n      </button>\n    </div>\n  </div>\n</template>\n\n<script>\nimport { ref, computed, nextTick } from 'vue'\n\nexport default {\n  name: 'ChatInput',\n  props: {\n    disabled: {\n      type: Boolean,\n      default: false\n    }\n  },\n  emits: ['send'],\n  setup(props, { emit }) {\n\n// Local state\nconst message = ref('')\nconst inputRef = ref(null)\n\n// Computed properties\nconst canSend = computed(() => {\n  return message.value.trim().length > 0\n})\n\n// Methods\nconst handleSend = () => {\n  if (canSend.value && !props.disabled) {\n    const messageToSend = message.value.trim()\n    emit('send', messageToSend)\n    message.value = ''\n    \n    // Focus back to input after sending\n    nextTick(() => {\n      if (inputRef.value) {\n        inputRef.value.focus()\n      }\n    })\n  }\n}\n\nconst handleKeyPress = (event) => {\n  if (event.key === 'Enter' && !event.shiftKey && !props.disabled) {\n    event.preventDefault()\n    handleSend()\n  }\n}\n\n    return {\n      message,\n      inputRef,\n      canSend,\n      handleSend,\n      handleKeyPress\n    }\n  }\n}\n</script>\n\n<style scoped>\n.chat-input-container {\n  position: sticky;\n  bottom: 0;\n  background: linear-gradient(180deg, rgba(249,250,251,0) 0%, #ffffff 30%);\n  padding: 0.85rem 1rem 1.2rem;\n  display: flex;\n  justify-content: center;\n}\n\n.chat-input {\n  display: flex;\n  gap: 0.5rem;\n  background: #fff;\n  border: 1px solid #e5e7eb;\n  border-radius: 24px;\n  padding: 0.35rem 0.35rem 0.35rem 1rem;\n  align-items: center;\n  width: 100%;\n  max-width: 720px;\n  box-shadow: 0 8px 28px rgba(0,0,0,.06);\n}\n\n.chat-input input {\n  flex: 1;\n  border: 0;\n  outline: none;\n  font-size: 0.98rem;\n  padding: 0.9rem 0.2rem;\n}\n\n.chat-input button {\n  background: linear-gradient(135deg, #E41E79 0%, #C0126E 100%);\n  color: white;\n  border: none;\n  width: 44px;\n  height: 44px;\n  display: inline-flex;\n  align-items: center;\n  justify-content: center;\n  border-radius: 50%;\n  cursor: pointer;\n  transition: transform .1s ease, box-shadow .1s ease, background .1s ease;\n}\n\n.chat-input button:hover { \n  transform: translateY(-1px);\n  box-shadow: 0 6px 16px rgba(234,96,166,.35);\n}\n.chat-input button:disabled { \n  background: #e5e7eb; color: #9ca3af; cursor: not-allowed; box-shadow: none; transform:none;\n}\n\n/* Dark */\nbody.dark .chat-input { background: #0f1115; border-color: #2a2a2a; }\nbody.dark .chat-input-container { background: linear-gradient(180deg, rgba(15,17,21,0) 0%, #0f1115 30%); }\nbody.dark .chat-input input { color: #e5e7eb; }\n\n/* Mobile responsiveness */\n@media (max-width: 768px) {\n  .chat-input-container { \n    padding: 0.6rem 0.75rem 1rem;\n    width: 100%;\n    max-width: 100vw;\n  }\n  .chat-input { \n    max-width: 100%; \n    border-radius: 20px;\n    width: 100%;\n  }\n  .chat-input input { font-size: 1rem; padding: 0.85rem 0.2rem; }\n  .chat-input button { width: 40px; height: 40px; }\n}\n\n</style>\n"],"mappings":";;EACOA,KAAK,EAAC;AAAsB;;EAC1BA,KAAK,EAAC;AAAY;mBAF3B;mBAAA;;uBACEC,mBAAA,CAkBM,OAlBNC,UAkBM,GAjBJC,mBAAA,CAgBM,OAhBNC,UAgBM,G,gBAfJD,mBAAA,CAOE;IAVR,uBAAAE,MAAA,QAAAA,MAAA,MAAAC,MAAA,IAIiBC,MAAA,CAAAC,OAAO,GAAAF,MAAA;IAChBG,IAAI,EAAC,MAAM;IACXC,WAAW,EAAC,+BAA+B;IAC1CC,QAAQ,EAAEC,MAAA,CAAAD,QAAQ;IAClBE,UAAQ,EAAAR,MAAA,QAAAA,MAAA,UAAAS,IAAA,KAAEP,MAAA,CAAAQ,cAAA,IAAAR,MAAA,CAAAQ,cAAA,IAAAD,IAAA,CAAc;IACzBE,GAAG,EAAC;eATZC,UAAA,I,cAIiBV,MAAA,CAAAC,OAAO,E,GAOlBL,mBAAA,CAMS;IALNe,OAAK,EAAAb,MAAA,QAAAA,MAAA,UAAAS,IAAA,KAAEP,MAAA,CAAAY,UAAA,IAAAZ,MAAA,CAAAY,UAAA,IAAAL,IAAA,CAAU;IACjBH,QAAQ,EAAEC,MAAA,CAAAD,QAAQ,KAAKJ,MAAA,CAAAa,OAAO;IAC/BC,EAAE,EAAC;gCAEHlB,mBAAA,CAAkC;IAA/BH,KAAK,EAAC;EAAoB,a,MAhBrCsB,UAAA,E","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}